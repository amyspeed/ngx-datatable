{"version":3,"sources":["webpack:///projects/swimlane/ngx-datatable/src/lib/components/body/progress-bar.component.ts","webpack:///src/app/basic/basic-fixed.component.ts","webpack:///src/app/basic/contextmenu.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/directives/long-press.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/column-helper.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/services/dimensions-helper.service.ts","webpack:///src/app/paging/scrolling-server.component.ts","webpack:///src/app/basic/dark-theme.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/sort.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/types/selection.type.ts","webpack:///projects/swimlane/ngx-datatable/src/public-api.ts","webpack:///src/app/columns/column-force.component.ts","webpack:///src/app/selection/selection-chkbox-template.component.ts","webpack:///src/app/columns/column-reorder.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/directives/draggable.directive.ts","webpack:///src/app/basic/row-grouping.component.ts","webpack:///src/app/selection/selection-single.component.ts","webpack:///src/app/templates/template-obj.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/camel-case.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/body/body-group-header.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/services/scrollbar-helper.service.ts","webpack:///src/app/basic/footer.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/basic/dynamic-height.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/body/body-row.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/footer/pager.component.ts","webpack:///src/app/columns/pinning.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/body/selection.component.ts","webpack:///src/app/summary/summary-row-inline-html.component.ts","webpack:///src/app/basic/tabs.component.ts","webpack:///src/app/basic/bootstrap.component.ts","webpack:///src/app/basic/filter.component.ts","webpack:///src/app/columns/column-flex.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/datatable.component.html","webpack:///projects/swimlane/ngx-datatable/src/lib/components/datatable.component.ts","webpack:///src/app/basic/multiple.component.ts","webpack:///src/app/paging/paging-scrolling-novirtualization.component.ts","webpack:///src/app/selection/selection-chkbox.component.ts","webpack:///src/app/selection/selection-multi-click.component.ts","webpack:///src/app/basic/scrolling.component.ts","webpack:///src/app/paging/model/page.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/body/body-cell.component.ts","webpack:///src/app/columns/column-toggle.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/columns/tree.directive.ts","webpack:///src/app/selection/selection-cell.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/body/summary/summary-row.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/directives/visibility.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/footer/footer.component.ts","webpack:///src/app/paging/paging-server.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/columns/column-header.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/header/header.component.ts","webpack:///src/app/basic/responsive.component.ts","webpack:///src/app/sorting/sorting-comparator.component.ts","webpack:///src/app/selection/selection-disabled.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/prefixes.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/row-detail/row-detail.directive.ts","webpack:///src/app/paging/model/paged-data.ts","webpack:///src/app/tree/fullscreen.component.ts","webpack:///src/app/tree/client-tree.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/types/sort.type.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/column.ts","webpack:///src/app/selection/selection-multi.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/columns/column-cell.directive.ts","webpack:///src/app/app.module.ts","webpack:///src/app/sorting/sorting-server.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/types/click.type.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/directives/orderable.directive.ts","webpack:///src/app/sorting/sorting-client.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/header/header-cell.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/body/body.component.ts","webpack:///src/app/basic/fullscreen.component.ts","webpack:///src/app/basic/css.component.ts","webpack:///src/app/basic/basic-auto.component.ts","webpack:///src/app/paging/model/corporate-employee.ts","webpack:///src/app/paging/paging-virtual.component.ts","webpack:///src/app/summary/summary-row-simple.component.ts","webpack:///src/app/paging/paging-client.component.ts","webpack:///src/app/basic/virtual.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/types/sort-direction.type.ts","webpack:///src/app/templates/template-dom.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/tree.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/body/body-group-header-template.directive.ts","webpack:///src/app/basic/row-detail.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/columns/column.directive.ts","webpack:///src/app/sorting/sorting-default.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/footer/footer.directive.ts","webpack:///src/app/basic/inline.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/selection.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/id.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/math.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/column-prop-getters.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/keys.ts","webpack:///src/app/columns/column-standard.component.ts","webpack:///src/app/summary/summary-row-custom-template.component.ts","webpack:///src/app/summary/summary-row-server-paging.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/row-detail/row-detail-template.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/footer/footer-template.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/types/contextmenu.type.ts","webpack:///src/app/basic/rx.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/ngx-datatable.module.ts","webpack:///src/app/basic/live.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/types/column-mode.type.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/services/column-changes.service.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/row-height-cache.ts","webpack:///src/app/paging/mock-server-results-service.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/translate.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/body/scroller.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/elm-from-point.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/throttle.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/directives/resizeable.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/body/body-row-wrapper.component.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ProgressBarComponent","selector","template","changeDetection","OnPush","BasicFixedComponent","rows","columns","prop","name","ColumnMode","fetch","data","cb","req","XMLHttpRequest","open","onload","JSON","parse","response","send","ContextMenuDemoComponent","contextMenuEvent","console","log","rawEvent","event","type","contextmenuRow","content","contextmenuColumn","undefined","preventDefault","stopPropagation","onTableContextMenu","LongPressDirective","pressEnabled","duration","longPressStart","longPressing","longPressEnd","mouseX","mouseY","which","target","classList","contains","clientX","clientY","pressing","isLongPressing","mouseup","document","subscription","subscribe","ev","onMouseup","timeout","setTimeout","emit","model","pressModel","add","pipe","mouseEvent","onMouseMove","loop","xThres","Math","abs","yThres","endPress","clearTimeout","_destroySubscription","unsubscribe","press","isLongPress","onMouseDown","setColumnDefaults","treeColumnFound","column","$$id","isNullOrUndefined","$$valueGetter","String","hasOwnProperty","resizeable","sortable","draggable","canAutoResize","width","isTreeColumn","value","translateTemplates","templates","result","temp","col","props","Object","getOwnPropertyNames","headerTemplate","cellTemplate","summaryFunc","summaryTemplate","push","DimensionsHelper","element","getBoundingClientRect","companyData","PagedData","MockServerResultsService","offset","limit","slice","Date","now","d","ServerScrollingComponent","serverResultsService","el","headerHeight","rowHeight","pageLimit","onScroll","offsetY","viewHeight","nativeElement","height","isLoading","length","pageSize","ceil","max","loadPage","getResults","results","providers","styleUrls","DarkThemeComponent","loadingIndicator","reorderable","cells","summaryForGender","males","filter","cell","females","nextSortDir","sortType","current","single","asc","desc","orderByComparator","a","b","isNaN","parseFloat","isFinite","toLowerCase","sortRows","dirs","rowToIndexMap","Map","forEach","row","index","set","cols","reduce","obj","comparator","cachedDirs","map","dir","valueGetter","compareFn","sort","rowA","rowB","cachedDir","propA","propB","comparison","has","get","SelectionType","ColumnForceComponent","splice","CustomCheckboxSelectionComponent","selected","update","remove","onActivate","onSelect","ColumnReorderComponent","swapColumns","styles","DraggableDirective","dragX","dragY","dragStart","dragging","dragEnd","isDragging","changes","currentValue","dragModel","onMousedown","isDragElm","mouseDownPos","x","y","mouseMoveSub","move","style","left","top","dragEventTarget","RowGroupingComponent","funder","calculated","pending","groups","editing","group","rowIndex","groupStatus","expectedPaymentDealtWith","exppayyes","exppayno","exppaypending","checked","indexOf","source","startdate","enddate","rowFilter","numberOfExpPayYes","numberOfSourceFunder","numberOfSourceCalculated","numberOfSourceManual","groupstatus","table","groupHeader","toggleExpandGroup","onDetailToggle","SingleSelectionComponent","TemplateRefTemplatesComponent","editTmpl","hdrTpl","camelCase","str","replace","trim","c","toUpperCase","deCamelCase","match","DatatableGroupHeaderDirective","toggle","_templateInput","_templateQuery","read","ScrollbarHelper","getWidth","outer","createElement","visibility","msOverflowStyle","body","appendChild","widthNoScroll","offsetWidth","overflow","inner","widthWithScroll","parentNode","removeChild","FooterDemoComponent","environment","production","DynamicHeightComponent","expanded","floor","random","DataTableBodyRowComponent","differs","scrollbarHelper","cd","treeStatus","activate","treeAction","_groupStyles","center","right","_element","_rowDiffer","find","create","diff","markForCheck","colGroup","calcStylesByGroup","widths","_columnGroupWidths","offsetX","bodyWidth","parseInt","innerWidth","totalDiff","total","offsetDiff","cellIndex","rowElement","keyCode","isTargetRow","isAction","down","up","val","_columns","colsByPin","_columnsByPin","recalculateColumns","buildStylesByGroup","colByPin","_innerWidth","_offsetX","cls","isSelected","rowClass","res","keys","k","displayCheck","cssClass","columnsTotalWidths","onKeyDown","onMouseenter","DataTablePagerComponent","change","_count","_page","_size","page","totalPages","selectPage","pages","startPage","endPage","maxSize","isMaxSized","min","num","number","text","calcPages","count","size","prevPage","nextPage","host","pagerLeftArrowIcon","pagerRightArrowIcon","pagerPreviousIcon","pagerNextIcon","ColumnPinningComponent","DataTableSelectionComponent","select","selectEnabled","chkbox","selectionType","checkbox","multi","multiClick","shiftKey","prevIndex","getRowSelectedIdx","bind","ctrlKey","metaKey","selectCheck","selectRow","onKeyboardFocus","shouldFocus","isCellSelection","cellElement","focusRow","focusCell","nextRowElement","getPrevNextRow","focus","parentElement","focusElement","previousElementSibling","nextElementSibling","children","nextCellElement","getElementsByClassName","rowId","rowIdentity","findIndex","r","id","SummaryRowInlineHtmlComponent","enableSummary","summaryPosition","fullName","split","filteredCells","sum","TabsDemoComponent","tab1","tab2","tab3","BootstrapThemeComponent","FilterBarComponent","updateFilter","ColumnFlexComponent","DatatableComponent","dimensionsHelper","columnChangesService","configuration","scrollbarV","scrollbarH","columnMode","standard","footerHeight","externalPaging","externalSorting","sorts","cssClasses","sortAscending","sortDescending","sortUnset","pagerLeftArrow","pagerRightArrow","pagerPrevious","pagerNext","messages","emptyMessage","totalMessage","selectedMessage","groupExpansionDefault","selectAllRowsOnPage","virtualization","summaryRow","summaryHeight","scroll","reorder","resize","tableContextmenu","rowCount","_offset","_subscriptions","_groupRowsBy","key","rowDiffer","recalculate","sortInternalRows","requestAnimationFrame","columnTemplates","v","translateColumns","listenForColumnInputChanges","arr","toArray","_internalColumns","originalArray","groupBy","i","item","addGroup","Array","from","_internalRows","treeFromRelation","treeToRelation","recalculatePages","recalculateDims","forceIdx","allowBleed","force","flex","dims","getDimensions","bodyHeight","calcPageSize","calcRowCount","next","detectChanges","bodyComponent","updateOffsetY","groupedRows","header","newValue","idx","$$oldWidth","prevValue","prevCol","movedCol","first","indexes","last","allSelected","_rows","columnInputChanges$","notifyOnChanges","groupArrayBy","_limit","_columnTemplates","allRowsSelected","rowsOnPage","onBodyPage","onRowContextmenu","onBodySelect","onBodyScroll","onTreeAction","templateUrl","encapsulation","None","targetMarkerTemplate","groupRowsBy","trackByProp","isFixedHeader","isFixedRow","isVertScroll","isVirtualized","isHorScroll","isSelectable","isCheckboxSelection","isSingleSelection","isMultiSelection","isMultiClickSelection","rowDetail","footer","headerComponent","onWindowResize","MultipleTablesComponent","columns1","columns2","rows1","gender","company","rows2","PagingScrollingNoVirtualizationComponent","pageNumber","setPage","pageInfo","pagedData","CheckboxSelectionComponent","MultiClickSelectionComponent","HorzVertScrolling","Page","totalElements","DataTableBodyCellComponent","isFocused","onCheckboxChangeFn","onCheckboxChange","activateFn","cellContext","checkValueUpdates","clear","userPipe","transform","sanitizedValue","stripHtml","isTargetCell","s","html","levelIndent","treeLevelIndent","level","_group","_rowHeight","_isSelected","_expanded","_rowIndex","_column","_row","_sorts","calcSortDir","status","_treeStatus","cellClass","sortDir","minWidth","maxWidth","columnCssClasses","onFocus","onBlur","onClick","onDblClick","ColumnToggleComponent","allColumns","isChecked","DataTableColumnCellTreeToggle","CellSelectionComponent","defaultSumFunc","cellsWithValues","some","noopSumFunc","DataTableSummaryRowComponent","updateInternalColumns","updateValues","cellsFromSingleColumn","sumFunc","getSummaryFunction","VisibilityDirective","zone","isVisible","visible","runCheck","run","check","offsetHeight","onVisibilityChange","runOutsideAngular","DataTableFooterComponent","selectedCount","footerTemplate","ServerPagingComponent","DataTableColumnHeaderDirective","columnContextmenu","DataTableHeaderComponent","_styleByGroup","destroyed","newIndex","getColumn","isTarget","targetMarkerContext","initialIndex","oldColumn","newColumn","concat","leftColumnCount","centerColumnCount","calcNewSorts","setStylesByGroup","_headerHeight","onColumnReordered","onTargetChanged","sortAscendingIcon","sortDescendingIcon","sortUnsetIcon","dealsWithGroup","headerWidth","ResponsiveComponent","toggleExpandRow","onPage","SortingComparatorComponent","companyComparator","MultiDisableSelectionComponent","AppComponent","location","version","state","path","provide","useClass","cache","testStyle","prefix","window","getComputedStyle","documentElement","prototype","call","join","pre","dom","RegExp","lowercase","css","js","substr","getVendorPrefixedName","property","DatatableRowDetailDirective","FullScreenTreeComponent","lastIndex","parentId","ClientTreeComponent","SortType","columnsByPin","ret","frozenLeft","frozenRight","columnGroupWidths","all","columnTotalWidth","totalWidth","columnsTotalWidth","columnsByPinArr","colsByPinArr","MultiSelectionComponent","DataTableColumnCellDirective","AppModule","forRoot","declarations","imports","bootstrap","ServerSortingComponent","loading","localeCompare","onSort","ClickType","OrderableDirective","targetChanged","differ","updateSubscriptions","draggables","diffs","createMapDiffs","previousValue","onDragStart","onDragging","onDragEnd","forEachAddedItem","forEachRemovedItem","positions","dragger","elm","offsetLeft","toString","prevPos","lastDraggingIndex","targets","elementsFromPoint","pos","acc","curr","descendants","ClientSortingComponent","DataTableHeaderCellComponent","sortFn","selectFn","$event","sortClass","calcSortClass","_allRowsSelected","headerClass","checkboxable","headerCheckboxable","onContextmenu","rowContextmenu","DataTableBodyComponent","detailToggle","rowHeightsCache","rowIndexes","WeakMap","rowExpansions","getDetailRowHeight","rowTrackingFn","getRowIndex","listener","toggleRowExpansion","toggleAllRows","updateIndexes","updateRows","scroller","query","setOffset","scrollYPos","scrollXPos","updatePage","direction","maxRowsPerGroup","g","_idx","getRowAndDetailHeight","getRowHeight","getRowExpanded","position","clearCache","Set","initCache","detailRowHeight","externalVirtual","viewPortFirstRowIndex","offsetScroll","getAdjustedViewPortIndex","rowExpandedIdx","getRowExpandedIdx","currentIndex","recalcLayout","refreshRowHeightCache","_pageSize","_rowCount","_bodyHeight","FullScreenComponent","RowCssComponent","age","BasicAutoComponent","CorporateEmployee","VirtualPagingComponent","start","SummaryRowSimpleComponent","avgAge","onPositionSelectChange","ClientPagingComponent","VirtualScrollComponent","SortDirection","InlineTemplatesComponent","joke","optionalGetterForProp","groupRowsByParents","to","nodeById","l","node","TreeNode","uniqIDs","toValue","parent","fromValue","resolvedRows","flatten","f","recursive","child","apply","arguments","DatatableGroupHeaderTemplateDirective","RowDetailsComponent","DataTableColumnDirective","isFirstChange","onInputChange","_cellTemplateInput","_cellTemplateQuery","_headerTemplateInput","_headerTemplateQuery","_treeToggleTemplateInput","_treeToggleTemplateQuery","flexGrow","DefaultSortingComponent","DatatableFooterDirective","InlineEditComponent","selectRows","comparefn","selectedIndex","selectRowsBetween","reverse","greater","lesser","range","end","pow","getTotalFlexGrow","totalFlexGrow","adjustColumnWidths","expectedWidth","columnsWidth","colsByGroup","scaleColumns","attr","hasMinWidth","remainingWidth","widthPerFlexPoint","newWidth","forceFillColumnWidths","startIdx","defaultColWidth","columnsToResize","additionWidthPerColumn","exceedsWindow","contentWidth","getContentWidth","columnsProcessed","remainingWidthLimit","newSize","removeProcessedColumns","emptyStringGetter","getterForProp","numericIndexGetter","deepValueGetter","shallowValueGetter","fieldName","Keys","ColumnStandardComponent","SummaryRowCustomTemplateComponent","nameSummaryCell","SummaryRowServerPagingComponent","getGenderSummary","DatatableRowDetailTemplateDirective","DataTableFooterTemplateDirective","ContextmenuType","RxDemoComponent","subscriber","complete","NgxDatatableModule","ngModule","useValue","exports","LiveDataComponent","active","updated","updateRandom","rowNum","randomNum","cellNum","newRow","stop","mydatatable","routes","AppRoutingModule","relativeLinkResolution","ColumnChangesService","columnInputChanges","asObservable","RowHeightCache","treeArray","details","isFn","isDetailFn","Error","n","currentRowHeight","scrollY","calcRowIndex","atRowIndex","byRowHeight","atIndex","atIndexA","atIndexB","dataLength","highestBit","blockSize","nextPos","getPagedData","jsonObj","employee","backfaceVisibility","hasCSSTransforms","hasCSS3DTransforms","ua","navigator","userAgent","isSafari","test","translateXY","ScrollerComponent","ngZone","renderer","prevScrollYPos","prevScrollXPos","_scrollEventListener","onScrolled","addEventListener","removeEventListener","scrollTop","currentTarget","scrollLeft","updateOffset","scrollHeight","scrollWidth","elements","previousPointerEvents","elementFromPoint","getPropertyValue","priority","getPropertyPriority","setProperty","throttle","func","wait","options","context","args","previous","later","leading","remaining","trailing","throttleable","innerDecorator","descriptor","configurable","enumerable","getter","defineProperty","ResizeableDirective","resizeEnabled","resizing","renderer2","resizeHandle","addClass","destroyNode","closed","clientWidth","isHandle","initialWidth","mouseDownScreenX","screenX","e","movementX","overMinWidth","underMaxWidth","DataTableRowWrapperComponent","groupContext","rowContext","err","error","webpackEmptyAsyncContext","Promise","resolve","then","code","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'datatable-progress',\r\n  template: `\r\n    <div class=\"progress-linear\" role=\"progressbar\">\r\n      <div class=\"container\">\r\n        <div class=\"bar\"></div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ProgressBarComponent {}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'basic-fixed-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Fix Row Height\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/basic-fixed.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material striped\"\r\n        [rows]=\"rows\"\r\n        [columns]=\"columns\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        [rowHeight]=\"50\"\r\n      >\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class BasicFixedComponent {\r\n  rows = [];\r\n  columns = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'contextmenu-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Context Menu Event\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/contextmenu.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div class=\"info\">\r\n        <p>\r\n          <strong>Note:</strong> ngx-datatable does not provide a context menu feature. This demonstrates how you would\r\n          access the <code>contextmenu</code> event to display your own custom context menu.\r\n        </p>\r\n        <p *ngIf=\"rawEvent\">\r\n          <strong>Mouse position:</strong> <code>(x: {{ rawEvent?.x }}, y: {{ rawEvent?.y }})</code>\r\n        </p>\r\n        <p *ngIf=\"contextmenuRow\"><strong>Row:</strong> {{ contextmenuRow?.name }}</p>\r\n        <p *ngIf=\"contextmenuColumn\">\r\n          <strong>Header:</strong> name: {{ contextmenuColumn?.name }} prop: {{ contextmenuColumn?.prop }}\r\n        </p>\r\n      </div>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows\"\r\n        [columns]=\"columns\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n        (tableContextmenu)=\"onTableContextMenu($event)\"\r\n      >\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class ContextMenuDemoComponent {\r\n  rows = [];\r\n\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }, { name: 'Company' }];\r\n\r\n  rawEvent: any;\r\n  contextmenuRow: any;\r\n  contextmenuColumn: any;\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  onTableContextMenu(contextMenuEvent) {\r\n    console.log(contextMenuEvent);\r\n\r\n    this.rawEvent = contextMenuEvent.event;\r\n    if (contextMenuEvent.type === 'body') {\r\n      this.contextmenuRow = contextMenuEvent.content;\r\n      this.contextmenuColumn = undefined;\r\n    } else {\r\n      this.contextmenuColumn = contextMenuEvent.content;\r\n      this.contextmenuRow = undefined;\r\n    }\r\n\r\n    contextMenuEvent.event.preventDefault();\r\n    contextMenuEvent.event.stopPropagation();\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n}\r\n","import { Directive, Input, Output, EventEmitter, HostBinding, HostListener, OnDestroy } from '@angular/core';\r\nimport { Observable, Subscription, fromEvent } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { MouseEvent } from '../events';\r\n\r\n@Directive({ selector: '[long-press]' })\r\nexport class LongPressDirective implements OnDestroy {\r\n  @Input() pressEnabled: boolean = true;\r\n  @Input() pressModel: any;\r\n  @Input() duration: number = 500;\r\n\r\n  @Output() longPressStart: EventEmitter<any> = new EventEmitter();\r\n  @Output() longPressing: EventEmitter<any> = new EventEmitter();\r\n  @Output() longPressEnd: EventEmitter<any> = new EventEmitter();\r\n\r\n  pressing: boolean;\r\n  isLongPressing: boolean;\r\n  timeout: any;\r\n  mouseX: number = 0;\r\n  mouseY: number = 0;\r\n\r\n  subscription: Subscription;\r\n\r\n  @HostBinding('class.press')\r\n  get press(): boolean {\r\n    return this.pressing;\r\n  }\r\n\r\n  @HostBinding('class.longpress')\r\n  get isLongPress(): boolean {\r\n    return this.isLongPressing;\r\n  }\r\n\r\n  @HostListener('mousedown', ['$event'])\r\n  onMouseDown(event: MouseEvent): void {\r\n    // don't do right/middle clicks\r\n    if (event.which !== 1 || !this.pressEnabled) return;\r\n\r\n    // don't start drag if its on resize handle\r\n    const target = <HTMLElement>event.target;\r\n    if (target.classList.contains('resize-handle')) return;\r\n\r\n    this.mouseX = event.clientX;\r\n    this.mouseY = event.clientY;\r\n\r\n    this.pressing = true;\r\n    this.isLongPressing = false;\r\n\r\n    const mouseup = fromEvent(document, 'mouseup');\r\n    this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup());\r\n\r\n    this.timeout = setTimeout(() => {\r\n      this.isLongPressing = true;\r\n      this.longPressStart.emit({\r\n        event,\r\n        model: this.pressModel\r\n      });\r\n\r\n      this.subscription.add(\r\n        fromEvent(document, 'mousemove')\r\n          .pipe(takeUntil(mouseup))\r\n          .subscribe((mouseEvent: MouseEvent) => this.onMouseMove(mouseEvent))\r\n      );\r\n\r\n      this.loop(event);\r\n    }, this.duration);\r\n\r\n    this.loop(event);\r\n  }\r\n\r\n  onMouseMove(event: MouseEvent): void {\r\n    if (this.pressing && !this.isLongPressing) {\r\n      const xThres = Math.abs(event.clientX - this.mouseX) > 10;\r\n      const yThres = Math.abs(event.clientY - this.mouseY) > 10;\r\n\r\n      if (xThres || yThres) {\r\n        this.endPress();\r\n      }\r\n    }\r\n  }\r\n\r\n  loop(event: MouseEvent): void {\r\n    if (this.isLongPressing) {\r\n      this.timeout = setTimeout(() => {\r\n        this.longPressing.emit({\r\n          event,\r\n          model: this.pressModel\r\n        });\r\n        this.loop(event);\r\n      }, 50);\r\n    }\r\n  }\r\n\r\n  endPress(): void {\r\n    clearTimeout(this.timeout);\r\n    this.isLongPressing = false;\r\n    this.pressing = false;\r\n    this._destroySubscription();\r\n\r\n    this.longPressEnd.emit({\r\n      model: this.pressModel\r\n    });\r\n  }\r\n\r\n  onMouseup(): void {\r\n    this.endPress();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._destroySubscription();\r\n  }\r\n\r\n  private _destroySubscription(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n      this.subscription = undefined;\r\n    }\r\n  }\r\n}\r\n","import { camelCase, deCamelCase } from './camel-case';\r\nimport { id } from './id';\r\nimport { getterForProp } from './column-prop-getters';\r\nimport { TableColumn } from '../types/table-column.type';\r\nimport { DataTableColumnDirective } from '../components/columns/column.directive';\r\n\r\n/**\r\n * Sets the column defaults\r\n */\r\nexport function setColumnDefaults(columns: TableColumn[]) {\r\n  if (!columns) return;\r\n\r\n  // Only one column should hold the tree view\r\n  // Thus if multiple columns are provided with\r\n  // isTreeColumn as true we take only the first one\r\n  let treeColumnFound: boolean = false;\r\n\r\n  for (const column of columns) {\r\n    if (!column.$$id) {\r\n      column.$$id = id();\r\n    }\r\n\r\n    // prop can be numeric; zero is valid not a missing prop\r\n    // translate name => prop\r\n    if (isNullOrUndefined(column.prop) && column.name) {\r\n      column.prop = camelCase(column.name);\r\n    }\r\n\r\n    if (!column.$$valueGetter) {\r\n      column.$$valueGetter = getterForProp(column.prop);\r\n    }\r\n\r\n    // format props if no name passed\r\n    if (!isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\r\n      column.name = deCamelCase(String(column.prop));\r\n    }\r\n\r\n    if (isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\r\n      column.name = ''; // Fixes IE and Edge displaying `null`\r\n    }\r\n\r\n    if (!column.hasOwnProperty('resizeable')) {\r\n      column.resizeable = true;\r\n    }\r\n\r\n    if (!column.hasOwnProperty('sortable')) {\r\n      column.sortable = true;\r\n    }\r\n\r\n    if (!column.hasOwnProperty('draggable')) {\r\n      column.draggable = true;\r\n    }\r\n\r\n    if (!column.hasOwnProperty('canAutoResize')) {\r\n      column.canAutoResize = true;\r\n    }\r\n\r\n    if (!column.hasOwnProperty('width')) {\r\n      column.width = 150;\r\n    }\r\n\r\n    if (!column.hasOwnProperty('isTreeColumn')) {\r\n      column.isTreeColumn = false;\r\n    } else {\r\n      if (column.isTreeColumn && !treeColumnFound) {\r\n        // If the first column with isTreeColumn is true found\r\n        // we mark that treeCoulmn is found\r\n        treeColumnFound = true;\r\n      } else {\r\n        // After that isTreeColumn property for any other column\r\n        // will be set as false\r\n        column.isTreeColumn = false;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function isNullOrUndefined<T>(value: T | null | undefined): value is null | undefined {\r\n  return value === null || value === undefined;\r\n}\r\n\r\n/**\r\n * Translates templates definitions to objects\r\n */\r\nexport function translateTemplates(templates: DataTableColumnDirective[]): any[] {\r\n  const result: any[] = [];\r\n  for (const temp of templates) {\r\n    const col: any = {};\r\n\r\n    const props = Object.getOwnPropertyNames(temp);\r\n    for (const prop of props) {\r\n      col[prop] = temp[prop];\r\n    }\r\n\r\n    if (temp.headerTemplate) {\r\n      col.headerTemplate = temp.headerTemplate;\r\n    }\r\n\r\n    if (temp.cellTemplate) {\r\n      col.cellTemplate = temp.cellTemplate;\r\n    }\r\n\r\n    if (temp.summaryFunc) {\r\n      col.summaryFunc = temp.summaryFunc;\r\n    }\r\n\r\n    if (temp.summaryTemplate) {\r\n      col.summaryTemplate = temp.summaryTemplate;\r\n    }\r\n\r\n    result.push(col);\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\n\r\n/**\r\n * Gets the width of the scrollbar.  Nesc for windows\r\n * http://stackoverflow.com/a/13382873/888165\r\n */\r\n@Injectable()\r\nexport class DimensionsHelper {\r\n  getDimensions(element: Element): ClientRect {\r\n    return element.getBoundingClientRect();\r\n  }\r\n}\r\n","import { Component, ElementRef, Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { CorporateEmployee } from './model/corporate-employee';\r\n\r\nimport data from 'src/assets/data/company.json';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\nconst companyData = data as any[];\r\n\r\nclass PagedData<T> {\r\n  data: T[];\r\n}\r\n\r\n/**\r\n * A server used to mock a paged data result from a server\r\n */\r\n@Injectable()\r\nexport class MockServerResultsService {\r\n  public getResults(offset: number, limit: number): Observable<PagedData<CorporateEmployee>> {\r\n    return of(companyData.slice(offset, offset + limit)).pipe(\r\n      delay(new Date(Date.now() + 500)),\r\n      map(d => ({ data: d }))\r\n    );\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'server-scrolling-demo',\r\n  providers: [MockServerResultsService],\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Server-side Scrolling\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/paging/scrolling-server.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material server-scrolling-demo\"\r\n        [rows]=\"rows\"\r\n        [columns]=\"[{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }]\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"headerHeight\"\r\n        [rowHeight]=\"rowHeight\"\r\n        [loadingIndicator]=\"isLoading\"\r\n        [scrollbarV]=\"true\"\r\n        (scroll)=\"onScroll($event.offsetY)\"\r\n      ></ngx-datatable>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./scrolling-server.component.css']\r\n})\r\nexport class ServerScrollingComponent {\r\n  readonly headerHeight = 50;\r\n  readonly rowHeight = 50;\r\n  readonly pageLimit = 10;\r\n\r\n  rows: CorporateEmployee[] = [];\r\n  isLoading: boolean;\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor(private serverResultsService: MockServerResultsService, private el: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.onScroll(0);\r\n  }\r\n\r\n  onScroll(offsetY: number) {\r\n    // total height of all rows in the viewport\r\n    const viewHeight = this.el.nativeElement.getBoundingClientRect().height - this.headerHeight;\r\n\r\n    // check if we scrolled to the end of the viewport\r\n    if (!this.isLoading && offsetY + viewHeight >= this.rows.length * this.rowHeight) {\r\n      // total number of results to load\r\n      let limit = this.pageLimit;\r\n\r\n      // check if we haven't fetched any results yet\r\n      if (this.rows.length === 0) {\r\n        // calculate the number of rows that fit within viewport\r\n        const pageSize = Math.ceil(viewHeight / this.rowHeight);\r\n\r\n        // change the limit to pageSize such that we fill the first page entirely\r\n        // (otherwise, we won't be able to scroll past it)\r\n        limit = Math.max(pageSize, this.pageLimit);\r\n      }\r\n      this.loadPage(limit);\r\n    }\r\n  }\r\n\r\n  private loadPage(limit: number) {\r\n    // set the loading flag, which serves two purposes:\r\n    // 1) it prevents the same page from being loaded twice\r\n    // 2) it enables display of the loading indicator\r\n    this.isLoading = true;\r\n\r\n    this.serverResultsService.getResults(this.rows.length, limit).subscribe(results => {\r\n      const rows = [...this.rows, ...results.data];\r\n      this.rows = rows;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'basic-dark-theme-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Dark Theme\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/dark-theme.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"dark\"\r\n        [rows]=\"rows\"\r\n        [loadingIndicator]=\"loadingIndicator\"\r\n        [columns]=\"columns\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"40\"\r\n        [summaryRow]=\"true\"\r\n        [footerHeight]=\"40\"\r\n        [limit]=\"10\"\r\n        rowHeight=\"auto\"\r\n        [reorderable]=\"reorderable\"\r\n      >\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class DarkThemeComponent {\r\n  rows = [];\r\n  loadingIndicator = true;\r\n  reorderable = true;\r\n\r\n  columns = [\r\n    { prop: 'name', summaryFunc: () => null },\r\n    { name: 'Gender', summaryFunc: cells => this.summaryForGender(cells) },\r\n    { name: 'Company', summaryFunc: () => null }\r\n  ];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n      setTimeout(() => {\r\n        this.loadingIndicator = false;\r\n      }, 1500);\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  private summaryForGender(cells: string[]) {\r\n    const males = cells.filter(cell => cell === 'male').length;\r\n    const females = cells.filter(cell => cell === 'female').length;\r\n\r\n    return `males: ${males}, females: ${females}`;\r\n  }\r\n}\r\n","import { getterForProp } from './column-prop-getters';\r\nimport { SortType } from '../types/sort.type';\r\nimport { SortDirection } from '../types/sort-direction.type';\r\nimport { SortPropDir } from '../types/sort-prop-dir.type';\r\n/**\r\n * Gets the next sort direction\r\n */\r\nexport function nextSortDir(sortType: SortType, current: SortDirection): SortDirection | undefined {\r\n  if (sortType === SortType.single) {\r\n    if (current === SortDirection.asc) {\r\n      return SortDirection.desc;\r\n    } else {\r\n      return SortDirection.asc;\r\n    }\r\n  } else {\r\n    if (!current) {\r\n      return SortDirection.asc;\r\n    } else if (current === SortDirection.asc) {\r\n      return SortDirection.desc;\r\n    } else if (current === SortDirection.desc) {\r\n      return undefined;\r\n    }\r\n    // avoid TS7030: Not all code paths return a value.\r\n    return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Adapted from fueld-ui on 6/216\r\n * https://github.com/FuelInteractive/fuel-ui/tree/master/src/pipes/OrderBy\r\n */\r\nexport function orderByComparator(a: any, b: any): number {\r\n  if (a === null || typeof a === 'undefined') a = 0;\r\n  if (b === null || typeof b === 'undefined') b = 0;\r\n  if (a instanceof Date && b instanceof Date) {\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n  } else if (isNaN(parseFloat(a)) || !isFinite(a) || isNaN(parseFloat(b)) || !isFinite(b)) {\r\n    // Convert to string in case of a=0 or b=0\r\n    a = String(a);\r\n    b = String(b);\r\n    // Isn't a number so lowercase the string to properly compare\r\n    if (a.toLowerCase() < b.toLowerCase()) return -1;\r\n    if (a.toLowerCase() > b.toLowerCase()) return 1;\r\n  } else {\r\n    // Parse strings as numbers to compare properly\r\n    if (parseFloat(a) < parseFloat(b)) return -1;\r\n    if (parseFloat(a) > parseFloat(b)) return 1;\r\n  }\r\n\r\n  // equal each other\r\n  return 0;\r\n}\r\n\r\n/**\r\n * creates a shallow copy of the `rows` input and returns the sorted copy. this function\r\n * does not sort the `rows` argument in place\r\n */\r\nexport function sortRows(rows: any[], columns: any[], dirs: SortPropDir[]): any[] {\r\n  if (!rows) return [];\r\n  if (!dirs || !dirs.length || !columns) return [...rows];\r\n\r\n  /**\r\n   * record the row ordering of results from prior sort operations (if applicable)\r\n   * this is necessary to guarantee stable sorting behavior\r\n   */\r\n  const rowToIndexMap = new Map<any, number>();\r\n  rows.forEach((row, index) => rowToIndexMap.set(row, index));\r\n\r\n  const temp = [...rows];\r\n  const cols = columns.reduce((obj, col) => {\r\n    if (col.comparator && typeof col.comparator === 'function') {\r\n      obj[col.prop] = col.comparator;\r\n    }\r\n    return obj;\r\n  }, {});\r\n\r\n  // cache valueGetter and compareFn so that they\r\n  // do not need to be looked-up in the sort function body\r\n  const cachedDirs = dirs.map(dir => {\r\n    const prop = dir.prop;\r\n    return {\r\n      prop,\r\n      dir: dir.dir,\r\n      valueGetter: getterForProp(prop),\r\n      compareFn: cols[prop] || orderByComparator\r\n    };\r\n  });\r\n\r\n  return temp.sort(function (rowA: any, rowB: any) {\r\n    for (const cachedDir of cachedDirs) {\r\n      // Get property and valuegetters for column to be sorted\r\n      const { prop, valueGetter } = cachedDir;\r\n      // Get A and B cell values from rows based on properties of the columns\r\n      const propA = valueGetter(rowA, prop);\r\n      const propB = valueGetter(rowB, prop);\r\n\r\n      // Compare function gets five parameters:\r\n      // Two cell values to be compared as propA and propB\r\n      // Two rows corresponding to the cells as rowA and rowB\r\n      // Direction of the sort for this column as SortDirection\r\n      // Compare can be a standard JS comparison function (a,b) => -1|0|1\r\n      // as additional parameters are silently ignored. The whole row and sort\r\n      // direction enable more complex sort logic.\r\n      const comparison =\r\n        cachedDir.dir !== SortDirection.desc\r\n          ? cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir)\r\n          : -cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir);\r\n\r\n      // Don't return 0 yet in case of needing to sort by next property\r\n      if (comparison !== 0) return comparison;\r\n    }\r\n\r\n    if (!(rowToIndexMap.has(rowA) && rowToIndexMap.has(rowB))) return 0;\r\n\r\n    /**\r\n     * all else being equal, preserve original order of the rows (stable sort)\r\n     */\r\n    return rowToIndexMap.get(rowA) < rowToIndexMap.get(rowB) ? -1 : 1;\r\n  });\r\n}\r\n","export enum SelectionType {\r\n  single = 'single',\r\n  multi = 'multi',\r\n  multiClick = 'multiClick',\r\n  cell = 'cell',\r\n  checkbox = 'checkbox'\r\n}\r\n","/*\r\n * Public API Surface of ngx-datatable\r\n */\r\n\r\n// components\r\nexport * from './lib/ngx-datatable.module';\r\nexport * from './lib/components/datatable.component';\r\nexport * from './lib/components/header/header.component';\r\nexport * from './lib/components/header/header-cell.component';\r\nexport * from './lib/components/body/body.component';\r\nexport * from './lib/components/body/body-cell.component';\r\nexport * from './lib/components/body/body-row.component';\r\nexport * from './lib/components/body/progress-bar.component';\r\nexport * from './lib/components/body/scroller.component';\r\nexport * from './lib/components/body/body-row-wrapper.component';\r\nexport * from './lib/components/body/selection.component';\r\nexport * from './lib/components/body/body-group-header.directive';\r\nexport * from './lib/components/body/body-group-header-template.directive';\r\nexport * from './lib/components/body/summary/summary-row.component';\r\nexport * from './lib/components/footer/footer.component';\r\nexport * from './lib/components/footer/pager.component';\r\nexport * from './lib/components/footer/footer.directive';\r\nexport * from './lib/components/footer/footer-template.directive';\r\nexport * from './lib/components/columns/column.directive';\r\nexport * from './lib/components/columns/column-header.directive';\r\nexport * from './lib/components/columns/column-cell.directive';\r\nexport * from './lib/components/columns/tree.directive';\r\nexport * from './lib/components/row-detail/row-detail.directive';\r\nexport * from './lib/components/row-detail/row-detail-template.directive';\r\n\r\n// directives\r\nexport * from './lib/directives/draggable.directive';\r\nexport * from './lib/directives/long-press.directive';\r\nexport * from './lib/directives/orderable.directive';\r\nexport * from './lib/directives/resizeable.directive';\r\nexport * from './lib/directives/visibility.directive';\r\n\r\n// services\r\nexport * from './lib/services/scrollbar-helper.service';\r\nexport * from './lib/services/dimensions-helper.service';\r\nexport * from './lib/services/column-changes.service';\r\n\r\n// types\r\nexport * from './lib/types/column-mode.type';\r\nexport * from './lib/types/sort.type';\r\nexport * from './lib/types/sort-direction.type';\r\nexport * from './lib/types/selection.type';\r\nexport * from './lib/types/click.type';\r\nexport * from './lib/types/table-column.type';\r\nexport * from './lib/types/sort-prop-dir.type';\r\nexport * from './lib/types/contextmenu.type';\r\n\r\n// utils\r\nexport * from './lib/utils/id';\r\nexport * from './lib/utils/column';\r\nexport * from './lib/utils/column-prop-getters';\r\nexport * from './lib/utils/camel-case';\r\nexport * from './lib/utils/keys';\r\nexport * from './lib/utils/math';\r\nexport * from './lib/utils/prefixes';\r\nexport * from './lib/utils/selection';\r\nexport * from './lib/utils/translate';\r\nexport * from './lib/utils/throttle';\r\nexport * from './lib/utils/sort';\r\nexport * from './lib/utils/row-height-cache';\r\nexport * from './lib/utils/column-helper';\r\nexport * from './lib/utils/elm-from-point';\r\nexport * from './lib/utils/tree';\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'column-force-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Force Fill Column Width Distribution\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/columns/column-force.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n        [rows]=\"rows\"\r\n      >\r\n        <ngx-datatable-column name=\"Name\" [width]=\"100\">\r\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n            {{ value }}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" [width]=\"100\">\r\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n            {{ value }}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\" [width]=\"300\">\r\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n            {{ value }}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class ColumnForceComponent {\r\n  rows = [];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'chkbox-selection-template-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Custom Checkbox Selection\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-chkbox-template.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n        <small>\r\n          <a href=\"javascript:void(0)\" (click)=\"add()\">Add</a> |\r\n          <a href=\"javascript:void(0)\" (click)=\"update()\">Update</a> |\r\n          <a href=\"javascript:void(0)\" (click)=\"remove()\">Remove</a>\r\n        </small>\r\n      </h3>\r\n      <div style=\"float:left;width:75%\">\r\n        <ngx-datatable\r\n          style=\"width: 90%\"\r\n          class=\"material\"\r\n          [rows]=\"rows\"\r\n          [columnMode]=\"ColumnMode.force\"\r\n          [headerHeight]=\"50\"\r\n          [footerHeight]=\"50\"\r\n          rowHeight=\"auto\"\r\n          [limit]=\"5\"\r\n          [selected]=\"selected\"\r\n          [selectionType]=\"SelectionType.checkbox\"\r\n          (activate)=\"onActivate($event)\"\r\n          (select)=\"onSelect($event)\"\r\n        >\r\n          <ngx-datatable-column\r\n            [width]=\"30\"\r\n            [sortable]=\"false\"\r\n            [canAutoResize]=\"false\"\r\n            [draggable]=\"false\"\r\n            [resizeable]=\"false\"\r\n          >\r\n            <ng-template\r\n              ngx-datatable-header-template\r\n              let-value=\"value\"\r\n              let-allRowsSelected=\"allRowsSelected\"\r\n              let-selectFn=\"selectFn\"\r\n            >\r\n              <input type=\"checkbox\" [checked]=\"allRowsSelected\" (change)=\"selectFn(!allRowsSelected)\" />\r\n            </ng-template>\r\n            <ng-template\r\n              ngx-datatable-cell-template\r\n              let-value=\"value\"\r\n              let-isSelected=\"isSelected\"\r\n              let-onCheckboxChangeFn=\"onCheckboxChangeFn\"\r\n            >\r\n              <input type=\"checkbox\" [checked]=\"isSelected\" (change)=\"onCheckboxChangeFn($event)\" />\r\n            </ng-template>\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Company\"></ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class=\"selected-column\">\r\n        <h4>\r\n          Selections <small>({{ selected?.length }})</small>\r\n        </h4>\r\n        <ul>\r\n          <li *ngFor=\"let sel of selected\">\r\n            {{ sel.name }}\r\n          </li>\r\n          <li *ngIf=\"!selected?.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class CustomCheckboxSelectionComponent {\r\n  rows = [];\r\n  selected = [];\r\n\r\n  ColumnMode = ColumnMode;\r\n  SelectionType = SelectionType;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }) {\r\n    console.log('Select Event', selected, this.selected);\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n  }\r\n\r\n  onActivate(event) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n  add() {\r\n    this.selected.push(this.rows[1], this.rows[3]);\r\n  }\r\n\r\n  update() {\r\n    this.selected = [this.rows[1], this.rows[3]];\r\n  }\r\n\r\n  remove() {\r\n    this.selected = [];\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'column-reorder-demo',\r\n  styles: [\r\n    `\r\n      .icon {\r\n        position: absolute;\r\n      }\r\n      .datatable-icon-down {\r\n        top: 0px;\r\n      }\r\n      .datatable-icon-up {\r\n        top: 40px;\r\n      }\r\n      .dragFromLeft .icon {\r\n        left: -13px;\r\n      }\r\n    `\r\n  ],\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Reorder Column\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/columns/column-reorder.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows\"\r\n        [loadingIndicator]=\"loadingIndicator\"\r\n        [columns]=\"columns\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n        [reorderable]=\"reorderable\"\r\n        [swapColumns]=\"swapColumns\"\r\n        [targetMarkerTemplate]=\"targetMarkerTemplate\"\r\n      >\r\n      </ngx-datatable>\r\n      <ng-template #targetMarkerTemplate let-class=\"class\">\r\n        <div [ngClass]=\"class\">\r\n          <div class=\"icon datatable-icon-down\"></div>\r\n          <div class=\"icon datatable-icon-up\"></div>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  `\r\n})\r\nexport class ColumnReorderComponent {\r\n  rows = [];\r\n  loadingIndicator = true;\r\n  reorderable = true;\r\n  swapColumns = false;\r\n\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }, { name: 'Company', sortable: false }];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n      setTimeout(() => {\r\n        this.loadingIndicator = false;\r\n      }, 1500);\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, Output, EventEmitter, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Subscription, fromEvent } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n/**\r\n * Draggable Directive for Angular2\r\n *\r\n * Inspiration:\r\n *   https://github.com/AngularClass/angular2-examples/blob/master/rx-draggable/directives/draggable.ts\r\n *   http://stackoverflow.com/questions/35662530/how-to-implement-drag-and-drop-in-angular2\r\n *\r\n */\r\n@Directive({ selector: '[draggable]' })\r\nexport class DraggableDirective implements OnDestroy, OnChanges {\r\n  @Input() dragEventTarget: any;\r\n  @Input() dragModel: any;\r\n  @Input() dragX: boolean = true;\r\n  @Input() dragY: boolean = true;\r\n\r\n  @Output() dragStart: EventEmitter<any> = new EventEmitter();\r\n  @Output() dragging: EventEmitter<any> = new EventEmitter();\r\n  @Output() dragEnd: EventEmitter<any> = new EventEmitter();\r\n\r\n  element: HTMLElement;\r\n  isDragging: boolean = false;\r\n  subscription: Subscription;\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['dragEventTarget'] && changes['dragEventTarget'].currentValue && this.dragModel.dragging) {\r\n      this.onMousedown(changes['dragEventTarget'].currentValue);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._destroySubscription();\r\n  }\r\n\r\n  onMouseup(event: MouseEvent): void {\r\n    if (!this.isDragging) return;\r\n\r\n    this.isDragging = false;\r\n    this.element.classList.remove('dragging');\r\n\r\n    if (this.subscription) {\r\n      this._destroySubscription();\r\n      this.dragEnd.emit({\r\n        event,\r\n        element: this.element,\r\n        model: this.dragModel\r\n      });\r\n    }\r\n  }\r\n\r\n  onMousedown(event: MouseEvent): void {\r\n    // we only want to drag the inner header text\r\n    const isDragElm = (<HTMLElement>event.target).classList.contains('draggable');\r\n\r\n    if (isDragElm && (this.dragX || this.dragY)) {\r\n      event.preventDefault();\r\n      this.isDragging = true;\r\n\r\n      const mouseDownPos = { x: event.clientX, y: event.clientY };\r\n\r\n      const mouseup = fromEvent(document, 'mouseup');\r\n      this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup(ev));\r\n\r\n      const mouseMoveSub = fromEvent(document, 'mousemove')\r\n        .pipe(takeUntil(mouseup))\r\n        .subscribe((ev: MouseEvent) => this.move(ev, mouseDownPos));\r\n\r\n      this.subscription.add(mouseMoveSub);\r\n\r\n      this.dragStart.emit({\r\n        event,\r\n        element: this.element,\r\n        model: this.dragModel\r\n      });\r\n    }\r\n  }\r\n\r\n  move(event: MouseEvent, mouseDownPos: { x: number; y: number }): void {\r\n    if (!this.isDragging) return;\r\n\r\n    const x = event.clientX - mouseDownPos.x;\r\n    const y = event.clientY - mouseDownPos.y;\r\n\r\n    if (this.dragX) this.element.style.left = `${x}px`;\r\n    if (this.dragY) this.element.style.top = `${y}px`;\r\n\r\n    this.element.classList.add('dragging');\r\n\r\n    this.dragging.emit({\r\n      event,\r\n      element: this.element,\r\n      model: this.dragModel\r\n    });\r\n  }\r\n\r\n  private _destroySubscription(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n      this.subscription = undefined;\r\n    }\r\n  }\r\n}\r\n","import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { NgStyle } from '@angular/common';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'row-grouping-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Row Grouping\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/row-grouping.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        #myTable\r\n        class=\"material expandable\"\r\n        [rows]=\"rows\"\r\n        [groupRowsBy]=\"'age'\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [scrollbarH]=\"true\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        [rowHeight]=\"40\"\r\n        [limit]=\"4\"\r\n        [groupExpansionDefault]=\"true\"\r\n      >\r\n        <!-- Group Header Template -->\r\n        <ngx-datatable-group-header [rowHeight]=\"50\" #myGroupHeader (toggle)=\"onDetailToggle($event)\">\r\n          <ng-template let-group=\"group\" let-expanded=\"expanded\" ngx-datatable-group-header-template>\r\n            <div style=\"padding-left:5px;\">\r\n              <a\r\n                href=\"#\"\r\n                [class.datatable-icon-right]=\"!expanded\"\r\n                [class.datatable-icon-down]=\"expanded\"\r\n                title=\"Expand/Collapse Group\"\r\n                (click)=\"toggleExpandGroup(group)\"\r\n              >\r\n                <b>Age: {{ group.value[0].age }}</b>\r\n              </a>\r\n            </div>\r\n          </ng-template>\r\n        </ngx-datatable-group-header>\r\n\r\n        <!-- Row Column Template -->\r\n        <ngx-datatable-column name=\"Exp. Pay.\" prop=\"\" editable=\"true\" frozenLeft=\"True\">\r\n          <ng-template\r\n            ngx-datatable-cell-template\r\n            let-rowIndex=\"rowIndex\"\r\n            let-value=\"value\"\r\n            let-row=\"row\"\r\n            let-group=\"group\"\r\n          >\r\n            <label for=\"ep1{{ rowIndex }}\" class=\"datatable-checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"ep1{{ rowIndex }}\"\r\n                name=\"{{ rowIndex }}\"\r\n                value=\"0\"\r\n                class=\"expectedpayment\"\r\n                (change)=\"checkGroup($event, row, rowIndex, group)\"\r\n                [checked]=\"row.exppayyes === 1\"\r\n              />\r\n            </label>\r\n            <label for=\"ep2{{ rowIndex }}\" class=\"datatable-checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"ep2{{ rowIndex }}\"\r\n                name=\"{{ rowIndex }}\"\r\n                value=\"1\"\r\n                class=\"expectedpayment2\"\r\n                (change)=\"checkGroup($event, row, rowIndex, group)\"\r\n                [checked]=\"row.exppayno === 1\"\r\n              />\r\n            </label>\r\n            <label for=\"ep3{{ rowIndex }}\" class=\"datatable-checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"ep3{{ rowIndex }}\"\r\n                name=\"{{ rowIndex }}\"\r\n                value=\"2\"\r\n                class=\"expectedpayment3\"\r\n                (change)=\"checkGroup($event, row, rowIndex, group)\"\r\n                [checked]=\"row.exppaypending === 1\"\r\n              />\r\n            </label>\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n\r\n        <ngx-datatable-column name=\"Source\" prop=\"source\" editable=\"false\" frozenLeft=\"True\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Name\" prop=\"name\" editable=\"true\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" prop=\"gender\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\" prop=\"age\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Comment\" prop=\"comment\">\r\n          <ng-template\r\n            ngx-datatable-cell-template\r\n            let-rowIndex=\"rowIndex\"\r\n            let-value=\"value\"\r\n            let-row=\"row\"\r\n            let-group=\"group\"\r\n            let-rowHeight=\"rowHeight\"\r\n          >\r\n            <input\r\n              autofocus\r\n              (blur)=\"updateValue($event, 'comment', rowIndex)\"\r\n              type=\"text\"\r\n              name=\"comment\"\r\n              [value]=\"value\"\r\n            />\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class RowGroupingComponent {\r\n  @ViewChild('myTable') table: any;\r\n\r\n  funder = [];\r\n  calculated = [];\r\n  pending = [];\r\n  groups = [];\r\n\r\n  editing = {};\r\n  rows = [];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/forRowGrouping.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  getGroupRowHeight(group, rowHeight) {\r\n    let style = {};\r\n\r\n    style = {\r\n      height: group.length * 40 + 'px',\r\n      width: '100%'\r\n    };\r\n\r\n    return style;\r\n  }\r\n\r\n  checkGroup(event, row, rowIndex, group) {\r\n    let groupStatus = 'Pending';\r\n    let expectedPaymentDealtWith = true;\r\n\r\n    row.exppayyes = 0;\r\n    row.exppayno = 0;\r\n    row.exppaypending = 0;\r\n\r\n    if (event.target.checked) {\r\n      if (event.target.value === '0') {\r\n        // expected payment yes selected\r\n        row.exppayyes = 1;\r\n      } else if (event.target.value === '1') {\r\n        // expected payment yes selected\r\n        row.exppayno = 1;\r\n      } else if (event.target.value === '2') {\r\n        // expected payment yes selected\r\n        row.exppaypending = 1;\r\n      }\r\n    }\r\n\r\n    if (group.length === 2) {\r\n      // There are only 2 lines in a group\r\n      // tslint:disable-next-line:max-line-length\r\n      if (\r\n        ['Calculated', 'Funder'].indexOf(group[0].source) > -1 &&\r\n        ['Calculated', 'Funder'].indexOf(group[1].source) > -1\r\n      ) {\r\n        // Sources are funder and calculated\r\n        // tslint:disable-next-line:max-line-length\r\n        if (group[0].startdate === group[1].startdate && group[0].enddate === group[1].enddate) {\r\n          // Start dates and end dates match\r\n          for (let index = 0; index < group.length; index++) {\r\n            if (group[index].source !== row.source) {\r\n              if (event.target.value === '0') {\r\n                // expected payment yes selected\r\n                group[index].exppayyes = 0;\r\n                group[index].exppaypending = 0;\r\n                group[index].exppayno = 1;\r\n              }\r\n            }\r\n\r\n            if (group[index].exppayyes === 0 && group[index].exppayno === 0 && group[index].exppaypending === 0) {\r\n              expectedPaymentDealtWith = false;\r\n            }\r\n            console.log('expectedPaymentDealtWith', expectedPaymentDealtWith);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      for (let index = 0; index < group.length; index++) {\r\n        if (group[index].exppayyes === 0 && group[index].exppayno === 0 && group[index].exppaypending === 0) {\r\n          expectedPaymentDealtWith = false;\r\n        }\r\n        console.log('expectedPaymentDealtWith', expectedPaymentDealtWith);\r\n      }\r\n    }\r\n\r\n    // check if there is a pending selected payment or a row that does not have any expected payment selected\r\n    if (\r\n      group.filter(rowFilter => rowFilter.exppaypending === 1).length === 0 &&\r\n      group.filter(rowFilter => rowFilter.exppaypending === 0 && rowFilter.exppayyes === 0 && rowFilter.exppayno === 0)\r\n        .length === 0\r\n    ) {\r\n      console.log('expected payment dealt with');\r\n\r\n      // check if can set the group status\r\n      const numberOfExpPayYes = group.filter(rowFilter => rowFilter.exppayyes === 1).length;\r\n      const numberOfSourceFunder = group.filter(rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Funder')\r\n        .length;\r\n      const numberOfSourceCalculated = group.filter(\r\n        rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Calculated'\r\n      ).length;\r\n      const numberOfSourceManual = group.filter(rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Manual')\r\n        .length;\r\n\r\n      console.log('numberOfExpPayYes', numberOfExpPayYes);\r\n      console.log('numberOfSourceFunder', numberOfSourceFunder);\r\n      console.log('numberOfSourceCalculated', numberOfSourceCalculated);\r\n      console.log('numberOfSourceManual', numberOfSourceManual);\r\n\r\n      if (numberOfExpPayYes > 0) {\r\n        if (numberOfExpPayYes === numberOfSourceFunder) {\r\n          groupStatus = 'Funder Selected';\r\n        } else if (numberOfExpPayYes === numberOfSourceCalculated) {\r\n          groupStatus = 'Calculated Selected';\r\n        } else if (numberOfExpPayYes === numberOfSourceManual) {\r\n          groupStatus = 'Manual Selected';\r\n        } else {\r\n          groupStatus = 'Hybrid Selected';\r\n        }\r\n      }\r\n    }\r\n\r\n    group[0].groupstatus = groupStatus;\r\n  }\r\n\r\n  updateValue(event, cell, rowIndex) {\r\n    this.editing[rowIndex + '-' + cell] = false;\r\n    this.rows[rowIndex][cell] = event.target.value;\r\n    this.rows = [...this.rows];\r\n  }\r\n\r\n  toggleExpandGroup(group) {\r\n    console.log('Toggled Expand Group!', group);\r\n    this.table.groupHeader.toggleExpandGroup(group);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'single-selection-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Single Row Selection\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-single.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div style=\"float:left;width:75%\">\r\n        <div class=\"info\">\r\n          <p>This demonstrates a simple single selection table with the 3rd row selected by default.</p>\r\n        </div>\r\n\r\n        <ngx-datatable\r\n          class=\"material\"\r\n          [rows]=\"rows\"\r\n          [columnMode]=\"ColumnMode.force\"\r\n          [columns]=\"columns\"\r\n          [headerHeight]=\"50\"\r\n          [footerHeight]=\"50\"\r\n          rowHeight=\"auto\"\r\n          [limit]=\"5\"\r\n          [selected]=\"selected\"\r\n          [selectionType]=\"SelectionType.single\"\r\n          (activate)=\"onActivate($event)\"\r\n          (select)=\"onSelect($event)\"\r\n        >\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class=\"selected-column\">\r\n        <h4>Selections</h4>\r\n        <ul>\r\n          <li *ngFor=\"let sel of selected\">\r\n            {{ sel.name }}\r\n          </li>\r\n          <li *ngIf=\"!selected.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class SingleSelectionComponent {\r\n  rows = [];\r\n\r\n  selected = [];\r\n\r\n  columns: any[] = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\r\n\r\n  ColumnMode = ColumnMode;\r\n  SelectionType = SelectionType;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.selected = [data[2]];\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }) {\r\n    console.log('Select Event', selected, this.selected);\r\n  }\r\n\r\n  onActivate(event) {\r\n    console.log('Activate Event', event);\r\n  }\r\n}\r\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'template-ref-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        TemplateRef via Column Property\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/templates/template-obj.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows\"\r\n        [columns]=\"columns\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n      >\r\n      </ngx-datatable>\r\n\r\n      <ng-template #hdrTpl let-column=\"column\"> <strong>Fancy</strong>: {{ column.name }} !! </ng-template>\r\n\r\n      <ng-template #editTmpl let-row=\"row\" let-value=\"value\">\r\n        <img *ngIf=\"value === 'male'\" width=\"150\" src=\"https://media.giphy.com/media/I8nepxWwlEuqI/giphy.gif\" />\r\n        <img *ngIf=\"value === 'female'\" width=\"150\" src=\"https://media.giphy.com/media/sxSVG3XHf7yww/giphy.gif\" />\r\n      </ng-template>\r\n    </div>\r\n  `\r\n})\r\nexport class TemplateRefTemplatesComponent {\r\n  @ViewChild('editTmpl', { static: true }) editTmpl: TemplateRef<any>;\r\n  @ViewChild('hdrTpl', { static: true }) hdrTpl: TemplateRef<any>;\r\n\r\n  rows = [];\r\n  columns = [];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.columns = [\r\n      {\r\n        cellTemplate: this.editTmpl,\r\n        headerTemplate: this.hdrTpl,\r\n        name: 'Gender'\r\n      }\r\n    ];\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n}\r\n","/**\r\n * Converts strings from something to camel case\r\n * http://stackoverflow.com/questions/10425287/convert-dash-separated-string-to-camelcase\r\n */\r\nexport function camelCase(str: string): string {\r\n  // Replace special characters with a space\r\n  str = str.replace(/[^a-zA-Z0-9 ]/g, ' ');\r\n  // put a space before an uppercase letter\r\n  str = str.replace(/([a-z](?=[A-Z]))/g, '$1 ');\r\n\r\n  // Lower case first character and some other stuff\r\n  str = str\r\n    .replace(/([^a-zA-Z0-9 ])|^[0-9]+/g, '')\r\n    .trim()\r\n    .toLowerCase();\r\n\r\n  // uppercase characters preceded by a space or number\r\n  str = str.replace(/([ 0-9]+)([a-zA-Z])/g, function (a, b, c) {\r\n    return b.trim() + c.toUpperCase();\r\n  });\r\n\r\n  return str;\r\n}\r\n\r\n/**\r\n * Converts strings from camel case to words\r\n * http://stackoverflow.com/questions/7225407/convert-camelcasetext-to-camel-case-text\r\n */\r\nexport function deCamelCase(str: string): string {\r\n  return str.replace(/([A-Z])/g, match => ` ${match}`).replace(/^./, match => match.toUpperCase());\r\n}\r\n","import { Input, Output, EventEmitter, Directive, TemplateRef, ContentChild } from '@angular/core';\r\nimport { DatatableGroupHeaderTemplateDirective } from './body-group-header-template.directive';\r\n\r\n@Directive({ selector: 'ngx-datatable-group-header' })\r\nexport class DatatableGroupHeaderDirective {\r\n  /**\r\n   * Row height is required when virtual scroll is enabled.\r\n   */\r\n  @Input() rowHeight: number | ((group?: any, index?: number) => number) = 0;\r\n\r\n  @Input('template')\r\n  _templateInput: TemplateRef<any>;\r\n\r\n  @ContentChild(DatatableGroupHeaderTemplateDirective, { read: TemplateRef, static: true })\r\n  _templateQuery: TemplateRef<any>;\r\n\r\n  get template(): TemplateRef<any> {\r\n    return this._templateInput || this._templateQuery;\r\n  }\r\n\r\n  /**\r\n   * Track toggling of group visibility\r\n   */\r\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Toggle the expansion of a group\r\n   */\r\n  toggleExpandGroup(group: any): void {\r\n    this.toggle.emit({\r\n      type: 'group',\r\n      value: group\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Expand all groups\r\n   */\r\n  expandAllGroups(): void {\r\n    this.toggle.emit({\r\n      type: 'all',\r\n      value: true\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Collapse all groups\r\n   */\r\n  collapseAllGroups(): void {\r\n    this.toggle.emit({\r\n      type: 'all',\r\n      value: false\r\n    });\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n/**\r\n * Gets the width of the scrollbar.  Nesc for windows\r\n * http://stackoverflow.com/a/13382873/888165\r\n */\r\n@Injectable()\r\nexport class ScrollbarHelper {\r\n  width: number = this.getWidth();\r\n\r\n  constructor(@Inject(DOCUMENT) private document: any) {}\r\n\r\n  getWidth(): number {\r\n    const outer = this.document.createElement('div');\r\n    outer.style.visibility = 'hidden';\r\n    outer.style.width = '100px';\r\n    outer.style.msOverflowStyle = 'scrollbar';\r\n    this.document.body.appendChild(outer);\r\n\r\n    const widthNoScroll = outer.offsetWidth;\r\n    outer.style.overflow = 'scroll';\r\n\r\n    const inner = this.document.createElement('div');\r\n    inner.style.width = '100%';\r\n    outer.appendChild(inner);\r\n\r\n    const widthWithScroll = inner.offsetWidth;\r\n    outer.parentNode.removeChild(outer);\r\n\r\n    return widthNoScroll - widthWithScroll;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'footer-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Custom Footer\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/footer.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows\"\r\n        [columns]=\"columns\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [footerHeight]=\"100\"\r\n        [headerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n      >\r\n        <ngx-datatable-footer *ngIf=\"true\">\r\n          <ng-template\r\n            ngx-datatable-footer-template\r\n            let-rowCount=\"rowCount\"\r\n            let-pageSize=\"pageSize\"\r\n            let-selectedCount=\"selectedCount\"\r\n            let-curPage=\"curPage\"\r\n            let-offset=\"offset\"\r\n          >\r\n            <div style=\"padding: 5px 10px\">\r\n              <div><strong>Summary</strong>: Gender: Female</div>\r\n              <hr style=\"width:100%\" />\r\n              <div>Rows: {{ rowCount }} | Size: {{ pageSize }} | Current: {{ curPage }} | Offset: {{ offset }}</div>\r\n            </div>\r\n          </ng-template>\r\n        </ngx-datatable-footer>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class FooterDemoComponent {\r\n  rows = [];\r\n\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }, { name: 'Company' }];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'dynamic-height-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Dynamic Height w/ Virtual Scrolling\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/dynamic-height.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        [rowHeight]=\"getRowHeight\"\r\n        [scrollbarV]=\"true\"\r\n      >\r\n        <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Row Height\" prop=\"height\"></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class DynamicHeightComponent {\r\n  rows = [];\r\n  expanded = {};\r\n  timeout: any;\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      const rows = JSON.parse(req.response).splice(0, 100);\r\n\r\n      for (const row of rows) {\r\n        row.height = Math.floor(Math.random() * 80) + 50;\r\n      }\r\n\r\n      cb(rows);\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  getRowHeight(row) {\r\n    console.log('ROW', row);\r\n    if (!row) {\r\n      return 50;\r\n    }\r\n    if (row.height === undefined) {\r\n      return 50;\r\n    }\r\n    return row.height;\r\n  }\r\n}\r\n","import {\n  Component,\n  Input,\n  HostBinding,\n  ElementRef,\n  Output,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  EventEmitter,\n  HostListener,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  DoCheck,\n  SkipSelf\n} from '@angular/core';\n\nimport { TreeStatus } from './body-cell.component';\nimport { columnsByPin, columnGroupWidths, columnsByPinArr } from '../../utils/column';\nimport { Keys } from '../../utils/keys';\nimport { ScrollbarHelper } from '../../services/scrollbar-helper.service';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-body-row',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div\n      *ngFor=\"let colGroup of _columnsByPin; let i = index; trackBy: trackByGroups\"\n      class=\"datatable-row-{{ colGroup.type }} datatable-row-group\"\n      [ngStyle]=\"_groupStyles[colGroup.type]\"\n    >\n      <datatable-body-cell\n        role=\"cell\"\n        *ngFor=\"let column of colGroup.columns; let ii = index; trackBy: columnTrackingFn\"\n        tabindex=\"-1\"\n        [row]=\"row\"\n        [group]=\"group\"\n        [expanded]=\"expanded\"\n        [isSelected]=\"isSelected\"\n        [rowIndex]=\"rowIndex\"\n        [column]=\"column\"\n        [rowHeight]=\"rowHeight\"\n        [displayCheck]=\"displayCheck\"\n        [treeStatus]=\"treeStatus\"\n        (activate)=\"onActivate($event, ii)\"\n        (treeAction)=\"onTreeAction()\"\n      >\n      </datatable-body-cell>\n    </div>\n  `\n})\nexport class DataTableBodyRowComponent implements DoCheck {\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n    this.recalculateColumns(val);\n    this.buildStylesByGroup();\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input() set innerWidth(val: number) {\n    if (this._columns) {\n      const colByPin = columnsByPin(this._columns);\n      this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n    }\n\n    this._innerWidth = val;\n    this.recalculateColumns();\n    this.buildStylesByGroup();\n  }\n\n  get innerWidth(): number {\n    return this._innerWidth;\n  }\n\n  @Input() expanded: boolean;\n  @Input() rowClass: any;\n  @Input() row: any;\n  @Input() group: any;\n  @Input() isSelected: boolean;\n  @Input() rowIndex: number;\n  @Input() displayCheck: any;\n  @Input() treeStatus: TreeStatus = 'collapsed';\n\n  @Input()\n  set offsetX(val: number) {\n    this._offsetX = val;\n    this.buildStylesByGroup();\n  }\n  get offsetX() {\n    return this._offsetX;\n  }\n\n  @HostBinding('class')\n  get cssClass() {\n    let cls = 'datatable-body-row';\n    if (this.isSelected) {\n      cls += ' active';\n    }\n    if (this.rowIndex % 2 !== 0) {\n      cls += ' datatable-row-odd';\n    }\n    if (this.rowIndex % 2 === 0) {\n      cls += ' datatable-row-even';\n    }\n\n    if (this.rowClass) {\n      const res = this.rowClass(this.row);\n      if (typeof res === 'string') {\n        cls += ` ${res}`;\n      } else if (typeof res === 'object') {\n        const keys = Object.keys(res);\n        for (const k of keys) {\n          if (res[k] === true) {\n            cls += ` ${k}`;\n          }\n        }\n      }\n    }\n\n    return cls;\n  }\n\n  @HostBinding('style.height.px')\n  @Input()\n  rowHeight: number;\n\n  @HostBinding('style.width.px')\n  get columnsTotalWidths(): string {\n    return this._columnGroupWidths.total;\n  }\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  _element: any;\n  _columnGroupWidths: any;\n  _columnsByPin: any;\n  _offsetX: number;\n  _columns: any[];\n  _innerWidth: number;\n  _groupStyles: { [prop: string]: {} } = {\n    left: {},\n    center: {},\n    right: {}\n  };\n\n  private _rowDiffer: KeyValueDiffer<{}, {}>;\n\n  constructor(\n    private differs: KeyValueDiffers,\n    @SkipSelf() private scrollbarHelper: ScrollbarHelper,\n    private cd: ChangeDetectorRef,\n    element: ElementRef\n  ) {\n    this._element = element.nativeElement;\n    this._rowDiffer = differs.find({}).create();\n  }\n\n  ngDoCheck(): void {\n    if (this._rowDiffer.diff(this.row)) {\n      this.cd.markForCheck();\n    }\n  }\n\n  trackByGroups(index: number, colGroup: any): any {\n    return colGroup.type;\n  }\n\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  buildStylesByGroup() {\n    this._groupStyles.left = this.calcStylesByGroup('left');\n    this._groupStyles.center = this.calcStylesByGroup('center');\n    this._groupStyles.right = this.calcStylesByGroup('right');\n    this.cd.markForCheck();\n  }\n\n  calcStylesByGroup(group: string) {\n    const widths = this._columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'left') {\n      translateXY(styles, offsetX, 0);\n    } else if (group === 'right') {\n      const bodyWidth = parseInt(this.innerWidth + '', 0);\n      const totalDiff = widths.total - bodyWidth;\n      const offsetDiff = totalDiff - offsetX;\n      const offset = (offsetDiff + this.scrollbarHelper.width) * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n\n  onActivate(event: any, index: number): void {\n    event.cellIndex = index;\n    event.rowElement = this._element;\n    this.activate.emit(event);\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isTargetRow = event.target === this._element;\n\n    const isAction =\n      keyCode === Keys.return ||\n      keyCode === Keys.down ||\n      keyCode === Keys.up ||\n      keyCode === Keys.left ||\n      keyCode === Keys.right;\n\n    if (isAction && isTargetRow) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.activate.emit({\n        type: 'keydown',\n        event,\n        row: this.row,\n        rowElement: this._element\n      });\n    }\n  }\n\n  @HostListener('mouseenter', ['$event'])\n  onMouseenter(event: any): void {\n    this.activate.emit({\n      type: 'mouseenter',\n      event,\n      row: this.row,\n      rowElement: this._element\n    });\n  }\n\n  recalculateColumns(val: any[] = this.columns): void {\n    this._columns = val;\n    const colsByPin = columnsByPin(this._columns);\n    this._columnsByPin = columnsByPinArr(this._columns);\n    this._columnGroupWidths = columnGroupWidths(colsByPin, this._columns);\n  }\n\n  onTreeAction() {\n    this.treeAction.emit();\n  }\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'datatable-pager',\r\n  template: `\r\n    <ul class=\"pager\">\r\n      <li [class.disabled]=\"!canPrevious()\">\r\n        <a role=\"button\" aria-label=\"go to first page\" href=\"javascript:void(0)\" (click)=\"selectPage(1)\">\r\n          <i class=\"{{ pagerPreviousIcon }}\"></i>\r\n        </a>\r\n      </li>\r\n      <li [class.disabled]=\"!canPrevious()\">\r\n        <a role=\"button\" aria-label=\"go to previous page\" href=\"javascript:void(0)\" (click)=\"prevPage()\">\r\n          <i class=\"{{ pagerLeftArrowIcon }}\"></i>\r\n        </a>\r\n      </li>\r\n      <li\r\n        role=\"button\"\r\n        [attr.aria-label]=\"'page ' + pg.number\"\r\n        class=\"pages\"\r\n        *ngFor=\"let pg of pages\"\r\n        [class.active]=\"pg.number === page\"\r\n      >\r\n        <a href=\"javascript:void(0)\" (click)=\"selectPage(pg.number)\">\r\n          {{ pg.text }}\r\n        </a>\r\n      </li>\r\n      <li [class.disabled]=\"!canNext()\">\r\n        <a role=\"button\" aria-label=\"go to next page\" href=\"javascript:void(0)\" (click)=\"nextPage()\">\r\n          <i class=\"{{ pagerRightArrowIcon }}\"></i>\r\n        </a>\r\n      </li>\r\n      <li [class.disabled]=\"!canNext()\">\r\n        <a role=\"button\" aria-label=\"go to last page\" href=\"javascript:void(0)\" (click)=\"selectPage(totalPages)\">\r\n          <i class=\"{{ pagerNextIcon }}\"></i>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  `,\r\n  host: {\r\n    class: 'datatable-pager'\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DataTablePagerComponent {\r\n  @Input() pagerLeftArrowIcon: string;\r\n  @Input() pagerRightArrowIcon: string;\r\n  @Input() pagerPreviousIcon: string;\r\n  @Input() pagerNextIcon: string;\r\n\r\n  @Input()\r\n  set size(val: number) {\r\n    this._size = val;\r\n    this.pages = this.calcPages();\r\n  }\r\n\r\n  get size(): number {\r\n    return this._size;\r\n  }\r\n\r\n  @Input()\r\n  set count(val: number) {\r\n    this._count = val;\r\n    this.pages = this.calcPages();\r\n  }\r\n\r\n  get count(): number {\r\n    return this._count;\r\n  }\r\n\r\n  @Input()\r\n  set page(val: number) {\r\n    this._page = val;\r\n    this.pages = this.calcPages();\r\n  }\r\n\r\n  get page(): number {\r\n    return this._page;\r\n  }\r\n\r\n  get totalPages(): number {\r\n    const count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\r\n    return Math.max(count || 0, 1);\r\n  }\r\n\r\n  @Output() change: EventEmitter<any> = new EventEmitter();\r\n\r\n  _count: number = 0;\r\n  _page: number = 1;\r\n  _size: number = 0;\r\n  pages: any;\r\n\r\n  canPrevious(): boolean {\r\n    return this.page > 1;\r\n  }\r\n\r\n  canNext(): boolean {\r\n    return this.page < this.totalPages;\r\n  }\r\n\r\n  prevPage(): void {\r\n    this.selectPage(this.page - 1);\r\n  }\r\n\r\n  nextPage(): void {\r\n    this.selectPage(this.page + 1);\r\n  }\r\n\r\n  selectPage(page: number): void {\r\n    if (page > 0 && page <= this.totalPages && page !== this.page) {\r\n      this.page = page;\r\n\r\n      this.change.emit({\r\n        page\r\n      });\r\n    }\r\n  }\r\n\r\n  calcPages(page?: number): any[] {\r\n    const pages = [];\r\n    let startPage = 1;\r\n    let endPage = this.totalPages;\r\n    const maxSize = 5;\r\n    const isMaxSized = maxSize < this.totalPages;\r\n\r\n    page = page || this.page;\r\n\r\n    if (isMaxSized) {\r\n      startPage = page - Math.floor(maxSize / 2);\r\n      endPage = page + Math.floor(maxSize / 2);\r\n\r\n      if (startPage < 1) {\r\n        startPage = 1;\r\n        endPage = Math.min(startPage + maxSize - 1, this.totalPages);\r\n      } else if (endPage > this.totalPages) {\r\n        startPage = Math.max(this.totalPages - maxSize + 1, 1);\r\n        endPage = this.totalPages;\r\n      }\r\n    }\r\n\r\n    for (let num = startPage; num <= endPage; num++) {\r\n      pages.push({\r\n        number: num,\r\n        text: <string>(<any>num)\r\n      });\r\n    }\r\n\r\n    return pages;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'column-pinning-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Column Pinning\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/columns/pinning.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        [rowHeight]=\"50\"\r\n        [scrollbarV]=\"true\"\r\n        [scrollbarH]=\"true\"\r\n        [rows]=\"rows\"\r\n      >\r\n        <ngx-datatable-column name=\"Name\" [width]=\"300\" [frozenLeft]=\"true\"> </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\"> </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\"> </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"City\" [width]=\"150\" prop=\"address.city\"> </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"State\" [width]=\"300\" prop=\"address.state\" [frozenRight]=\"true\">\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class ColumnPinningComponent {\r\n  rows = [];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { SelectionType } from '../../types/selection.type';\r\nimport { selectRowsBetween, selectRows } from '../../utils/selection';\r\nimport { Keys } from '../../utils/keys';\r\n\r\nexport interface Model {\r\n  type: string;\r\n  event: MouseEvent | KeyboardEvent;\r\n  row: any;\r\n  rowElement: any;\r\n  cellElement: any;\r\n  cellIndex: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'datatable-selection',\r\n  template: ` <ng-content></ng-content> `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DataTableSelectionComponent {\r\n  @Input() rows: any[];\r\n  @Input() selected: any[];\r\n  @Input() selectEnabled: boolean;\r\n  @Input() selectionType: SelectionType;\r\n  @Input() rowIdentity: any;\r\n  @Input() selectCheck: any;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() select: EventEmitter<any> = new EventEmitter();\r\n\r\n  prevIndex: number;\r\n\r\n  selectRow(event: KeyboardEvent | MouseEvent, index: number, row: any): void {\r\n    if (!this.selectEnabled) return;\r\n\r\n    const chkbox = this.selectionType === SelectionType.checkbox;\r\n    const multi = this.selectionType === SelectionType.multi;\r\n    const multiClick = this.selectionType === SelectionType.multiClick;\r\n    let selected: any[] = [];\r\n\r\n    if (multi || chkbox || multiClick) {\r\n      if (event.shiftKey) {\r\n        selected = selectRowsBetween([], this.rows, index, this.prevIndex, this.getRowSelectedIdx.bind(this));\r\n      } else if (event.ctrlKey || event.metaKey || multiClick || chkbox) {\r\n        selected = selectRows([...this.selected], row, this.getRowSelectedIdx.bind(this));\r\n      } else {\r\n        selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\r\n      }\r\n    } else {\r\n      selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\r\n    }\r\n\r\n    if (typeof this.selectCheck === 'function') {\r\n      selected = selected.filter(this.selectCheck.bind(this));\r\n    }\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n\r\n    this.prevIndex = index;\r\n\r\n    this.select.emit({\r\n      selected\r\n    });\r\n  }\r\n\r\n  onActivate(model: Model, index: number): void {\r\n    const { type, event, row } = model;\r\n    const chkbox = this.selectionType === SelectionType.checkbox;\r\n    const select = (!chkbox && (type === 'click' || type === 'dblclick')) || (chkbox && type === 'checkbox');\r\n\r\n    if (select) {\r\n      this.selectRow(event, index, row);\r\n    } else if (type === 'keydown') {\r\n      if ((<KeyboardEvent>event).keyCode === Keys.return) {\r\n        this.selectRow(event, index, row);\r\n      } else {\r\n        this.onKeyboardFocus(model);\r\n      }\r\n    }\r\n    this.activate.emit(model);\r\n  }\r\n\r\n  onKeyboardFocus(model: Model): void {\r\n    const { keyCode } = <KeyboardEvent>model.event;\r\n    const shouldFocus = keyCode === Keys.up || keyCode === Keys.down || keyCode === Keys.right || keyCode === Keys.left;\r\n\r\n    if (shouldFocus) {\r\n      const isCellSelection = this.selectionType === SelectionType.cell;\r\n\r\n      if (!model.cellElement || !isCellSelection) {\r\n        this.focusRow(model.rowElement, keyCode);\r\n      } else if (isCellSelection) {\r\n        this.focusCell(model.cellElement, model.rowElement, keyCode, model.cellIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  focusRow(rowElement: any, keyCode: number): void {\r\n    const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\r\n    if (nextRowElement) nextRowElement.focus();\r\n  }\r\n\r\n  getPrevNextRow(rowElement: any, keyCode: number): any {\r\n    const parentElement = rowElement.parentElement;\r\n\r\n    if (parentElement) {\r\n      let focusElement: HTMLElement;\r\n      if (keyCode === Keys.up) {\r\n        focusElement = parentElement.previousElementSibling;\r\n      } else if (keyCode === Keys.down) {\r\n        focusElement = parentElement.nextElementSibling;\r\n      }\r\n\r\n      if (focusElement && focusElement.children.length) {\r\n        return focusElement.children[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  focusCell(cellElement: any, rowElement: any, keyCode: number, cellIndex: number): void {\r\n    let nextCellElement: HTMLElement;\r\n\r\n    if (keyCode === Keys.left) {\r\n      nextCellElement = cellElement.previousElementSibling;\r\n    } else if (keyCode === Keys.right) {\r\n      nextCellElement = cellElement.nextElementSibling;\r\n    } else if (keyCode === Keys.up || keyCode === Keys.down) {\r\n      const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\r\n      if (nextRowElement) {\r\n        const children = nextRowElement.getElementsByClassName('datatable-body-cell');\r\n        if (children.length) nextCellElement = children[cellIndex];\r\n      }\r\n    }\r\n\r\n    if (nextCellElement) nextCellElement.focus();\r\n  }\r\n\r\n  getRowSelected(row: any): boolean {\r\n    return this.getRowSelectedIdx(row, this.selected) > -1;\r\n  }\r\n\r\n  getRowSelectedIdx(row: any, selected: any[]): number {\r\n    if (!selected || !selected.length) return -1;\r\n\r\n    const rowId = this.rowIdentity(row);\r\n    return selected.findIndex(r => {\r\n      const id = this.rowIdentity(r);\r\n      return id === rowId;\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'summary-row-inline-html',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Inline HTML template\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/summary/summary-row-inline-html.component.ts\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [summaryRow]=\"enableSummary\"\r\n        [summaryPosition]=\"summaryPosition\"\r\n        [summaryHeight]=\"100\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n        [rows]=\"rows\"\r\n      >\r\n        <ngx-datatable-column prop=\"name\" [summaryTemplate]=\"nameSummaryCell\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" [summaryFunc]=\"summaryForGender\"></ngx-datatable-column>\r\n        <ngx-datatable-column prop=\"age\" [summaryFunc]=\"avgAge\"></ngx-datatable-column>\r\n      </ngx-datatable>\r\n      <ng-template #nameSummaryCell>\r\n        <div class=\"name-container\">\r\n          <div class=\"chip\" *ngFor=\"let name of getNames()\">\r\n            <span class=\"chip-content\">{{ name }}</span>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  `\r\n})\r\nexport class SummaryRowInlineHtmlComponent {\r\n  rows = [];\r\n\r\n  enableSummary = true;\r\n  summaryPosition = 'top';\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  getNames(): string[] {\r\n    return this.rows.map(row => row.name).map(fullName => fullName.split(' ')[1]);\r\n  }\r\n\r\n  summaryForGender(cells: string[]) {\r\n    const males = cells.filter(cell => cell === 'male').length;\r\n    const females = cells.filter(cell => cell === 'female').length;\r\n\r\n    return `males: ${males}, females: ${females}`;\r\n  }\r\n\r\n  avgAge(cells: number[]): number {\r\n    const filteredCells = cells.filter(cell => !!cell);\r\n    return filteredCells.reduce((sum, cell) => (sum += cell), 0) / filteredCells.length;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'tabs-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Hidden By Default\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/tabs.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n\r\n      <div style=\"width:75%;margin:0 auto\">\r\n        <div>\r\n          <button type=\"button\" (click)=\"tab1 = true; tab2 = false; tab3 = false\">Nothing</button>\r\n          <button type=\"button\" (click)=\"tab2 = true; tab1 = false; tab3 = false\">Hidden</button>\r\n          <button type=\"button\" (click)=\"tab3 = true; tab1 = false; tab2 = false\">NgIf</button>\r\n        </div>\r\n\r\n        <div [hidden]=\"!tab1\">\r\n          <p>Click a button to toggle table visibilities</p>\r\n        </div>\r\n\r\n        <div [hidden]=\"!tab2\">\r\n          <h4>hidden Table</h4>\r\n          <ngx-datatable\r\n            class=\"material\"\r\n            [rows]=\"rows\"\r\n            [columnMode]=\"ColumnMode.force\"\r\n            [headerHeight]=\"50\"\r\n            [footerHeight]=\"50\"\r\n            [rowHeight]=\"50\"\r\n            [scrollbarV]=\"true\"\r\n          >\r\n            <ngx-datatable-column name=\"Name\" [width]=\"200\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Gender\" [width]=\"300\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Age\" [width]=\"80\"></ngx-datatable-column>\r\n          </ngx-datatable>\r\n        </div>\r\n\r\n        <div *ngIf=\"tab3\">\r\n          <h4>ngIf Table</h4>\r\n          <ngx-datatable\r\n            class=\"material\"\r\n            [rows]=\"rows\"\r\n            [columnMode]=\"ColumnMode.force\"\r\n            [headerHeight]=\"50\"\r\n            [footerHeight]=\"50\"\r\n            [rowHeight]=\"50\"\r\n            [scrollbarV]=\"true\"\r\n          >\r\n            <ngx-datatable-column name=\"Name\" [width]=\"200\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Gender\" [width]=\"300\"></ngx-datatable-column>\r\n            <ngx-datatable-column name=\"Age\" [width]=\"80\"></ngx-datatable-column>\r\n          </ngx-datatable>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class TabsDemoComponent {\r\n  rows = [];\r\n\r\n  tab1 = true;\r\n  tab2 = false;\r\n  tab3 = false;\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'basic-bootstrap-theme-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Bootstrap Theme\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/bootstrap.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"bootstrap\"\r\n        [rows]=\"rows\"\r\n        [loadingIndicator]=\"loadingIndicator\"\r\n        [columns]=\"columns\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"40\"\r\n        [summaryRow]=\"true\"\r\n        [summaryPosition]=\"'bottom'\"\r\n        [footerHeight]=\"40\"\r\n        [limit]=\"10\"\r\n        rowHeight=\"auto\"\r\n        [reorderable]=\"reorderable\"\r\n      >\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class BootstrapThemeComponent {\r\n  rows = [];\r\n  loadingIndicator = true;\r\n  reorderable = true;\r\n\r\n  columns = [\r\n    { prop: 'name', summaryFunc: () => null },\r\n    { name: 'Gender', summaryFunc: cells => this.summaryForGender(cells) },\r\n    { name: 'Company', summaryFunc: () => null }\r\n  ];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n      setTimeout(() => {\r\n        this.loadingIndicator = false;\r\n      }, 1500);\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  private summaryForGender(cells: string[]) {\r\n    const males = cells.filter(cell => cell === 'male').length;\r\n    const females = cells.filter(cell => cell === 'female').length;\r\n\r\n    return `males: ${males}, females: ${females}`;\r\n  }\r\n}\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { DatatableComponent } from '../../../projects/swimlane/ngx-datatable/src/lib/components/datatable.component';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'filter-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Client-side Search and Filtering\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/filter.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <input\r\n        type=\"text\"\r\n        style=\"padding:8px;margin:15px auto;width:30%;\"\r\n        placeholder=\"Type to filter the name column...\"\r\n        (keyup)=\"updateFilter($event)\"\r\n      />\r\n      <ngx-datatable\r\n        #table\r\n        class=\"material\"\r\n        [columns]=\"columns\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n        [limit]=\"10\"\r\n        [rows]=\"rows\"\r\n      >\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class FilterBarComponent {\r\n  rows = [];\r\n\r\n  temp = [];\r\n\r\n  columns = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\r\n  @ViewChild(DatatableComponent) table: DatatableComponent;\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      // cache our list\r\n      this.temp = [...data];\r\n\r\n      // push our inital complete list\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  updateFilter(event) {\r\n    const val = event.target.value.toLowerCase();\r\n\r\n    // filter our data\r\n    const temp = this.temp.filter(function (d) {\r\n      return d.name.toLowerCase().indexOf(val) !== -1 || !val;\r\n    });\r\n\r\n    // update the rows\r\n    this.rows = temp;\r\n    // Whenever the filter changes, always go back to the first page\r\n    this.table.offset = 0;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'column-flex-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Flex Column Width Distribution\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/columns/column-flex.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [columnMode]=\"ColumnMode.flex\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n        [rows]=\"rows\"\r\n      >\r\n        <ngx-datatable-column name=\"Name\" [flexGrow]=\"3\">\r\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n            {{ value }}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" [flexGrow]=\"1\">\r\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n            {{ value }}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\" [flexGrow]=\"1\">\r\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n            {{ value }}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class ColumnFlexComponent {\r\n  rows = [];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n}\r\n","<div role=\"table\" visibilityObserver (visible)=\"recalculate()\">\n  <datatable-header\n    role=\"rowgroup\"\n    *ngIf=\"headerHeight\"\n    [sorts]=\"sorts\"\n    [sortType]=\"sortType\"\n    [scrollbarH]=\"scrollbarH\"\n    [innerWidth]=\"_innerWidth\"\n    [offsetX]=\"_offsetX | async\"\n    [dealsWithGroup]=\"groupedRows !== undefined\"\n    [columns]=\"_internalColumns\"\n    [headerHeight]=\"headerHeight\"\n    [reorderable]=\"reorderable\"\n    [targetMarkerTemplate]=\"targetMarkerTemplate\"\n    [sortAscendingIcon]=\"cssClasses.sortAscending\"\n    [sortDescendingIcon]=\"cssClasses.sortDescending\"\n    [sortUnsetIcon]=\"cssClasses.sortUnset\"\n    [allRowsSelected]=\"allRowsSelected\"\n    [selectionType]=\"selectionType\"\n    (sort)=\"onColumnSort($event)\"\n    (resize)=\"onColumnResize($event)\"\n    (reorder)=\"onColumnReorder($event)\"\n    (select)=\"onHeaderSelect($event)\"\n    (columnContextmenu)=\"onColumnContextmenu($event)\"\n  >\n  </datatable-header>\n  <datatable-body\n    role=\"rowgroup\"\n    [groupRowsBy]=\"groupRowsBy\"\n    [groupedRows]=\"groupedRows\"\n    [rows]=\"_internalRows\"\n    [groupExpansionDefault]=\"groupExpansionDefault\"\n    [scrollbarV]=\"scrollbarV\"\n    [scrollbarH]=\"scrollbarH\"\n    [virtualization]=\"virtualization\"\n    [loadingIndicator]=\"loadingIndicator\"\n    [externalPaging]=\"externalPaging\"\n    [rowHeight]=\"rowHeight\"\n    [rowCount]=\"rowCount\"\n    [offset]=\"offset\"\n    [trackByProp]=\"trackByProp\"\n    [columns]=\"_internalColumns\"\n    [pageSize]=\"pageSize\"\n    [offsetX]=\"_offsetX | async\"\n    [rowDetail]=\"rowDetail\"\n    [groupHeader]=\"groupHeader\"\n    [selected]=\"selected\"\n    [innerWidth]=\"_innerWidth\"\n    [bodyHeight]=\"bodyHeight\"\n    [selectionType]=\"selectionType\"\n    [emptyMessage]=\"messages.emptyMessage\"\n    [rowIdentity]=\"rowIdentity\"\n    [rowClass]=\"rowClass\"\n    [selectCheck]=\"selectCheck\"\n    [displayCheck]=\"displayCheck\"\n    [summaryRow]=\"summaryRow\"\n    [summaryHeight]=\"summaryHeight\"\n    [summaryPosition]=\"summaryPosition\"\n    (page)=\"onBodyPage($event)\"\n    (activate)=\"activate.emit($event)\"\n    (rowContextmenu)=\"onRowContextmenu($event)\"\n    (select)=\"onBodySelect($event)\"\n    (scroll)=\"onBodyScroll($event)\"\n    (treeAction)=\"onTreeAction($event)\"\n  >\n  </datatable-body>\n  <datatable-footer\n    *ngIf=\"footerHeight\"\n    [rowCount]=\"rowCount\"\n    [pageSize]=\"pageSize\"\n    [offset]=\"offset\"\n    [footerHeight]=\"footerHeight\"\n    [footerTemplate]=\"footer\"\n    [totalMessage]=\"messages.totalMessage\"\n    [pagerLeftArrowIcon]=\"cssClasses.pagerLeftArrow\"\n    [pagerRightArrowIcon]=\"cssClasses.pagerRightArrow\"\n    [pagerPreviousIcon]=\"cssClasses.pagerPrevious\"\n    [selectedCount]=\"selected.length\"\n    [selectedMessage]=\"!!selectionType && messages.selectedMessage\"\n    [pagerNextIcon]=\"cssClasses.pagerNext\"\n    (page)=\"onFooterPage($event)\"\n  >\n  </datatable-footer>\n</div>\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  ElementRef,\r\n  EventEmitter,\r\n  ViewChild,\r\n  HostListener,\r\n  ContentChildren,\r\n  OnInit,\r\n  QueryList,\r\n  AfterViewInit,\r\n  HostBinding,\r\n  ContentChild,\r\n  DoCheck,\r\n  KeyValueDiffers,\r\n  KeyValueDiffer,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  SkipSelf,\r\n  Optional,\r\n  Inject\r\n} from '@angular/core';\r\n\r\nimport { DatatableGroupHeaderDirective } from './body/body-group-header.directive';\r\n\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { INgxDatatableConfig } from '../ngx-datatable.module';\r\nimport { groupRowsByParents, optionalGetterForProp } from '../utils/tree';\r\nimport { TableColumn } from '../types/table-column.type';\r\nimport { setColumnDefaults, translateTemplates } from '../utils/column-helper';\r\nimport { ColumnMode } from '../types/column-mode.type';\r\nimport { SelectionType } from '../types/selection.type';\r\nimport { SortType } from '../types/sort.type';\r\nimport { ContextmenuType } from '../types/contextmenu.type';\r\nimport { DataTableColumnDirective } from './columns/column.directive';\r\nimport { DatatableRowDetailDirective } from './row-detail/row-detail.directive';\r\nimport { DatatableFooterDirective } from './footer/footer.directive';\r\nimport { DataTableBodyComponent } from './body/body.component';\r\nimport { DataTableHeaderComponent } from './header/header.component';\r\nimport { ScrollbarHelper } from '../services/scrollbar-helper.service';\r\nimport { ColumnChangesService } from '../services/column-changes.service';\r\nimport { DimensionsHelper } from '../services/dimensions-helper.service';\r\nimport { throttleable } from '../utils/throttle';\r\nimport { forceFillColumnWidths, adjustColumnWidths } from '../utils/math';\r\nimport { sortRows } from '../utils/sort';\r\n\r\n@Component({\r\n  selector: 'ngx-datatable',\r\n  templateUrl: './datatable.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  styleUrls: ['./datatable.component.scss'],\r\n  host: {\r\n    class: 'ngx-datatable'\r\n  }\r\n})\r\nexport class DatatableComponent implements OnInit, DoCheck, AfterViewInit {\r\n  /**\r\n   * Template for the target marker of drag target columns.\r\n   */\r\n  @Input() targetMarkerTemplate: any;\r\n\r\n  /**\r\n   * Rows that are displayed in the table.\r\n   */\r\n  @Input() set rows(val: any) {\r\n    this._rows = val;\r\n\r\n    if (val) {\r\n      this._internalRows = [...val];\r\n    }\r\n\r\n    // auto sort on new updates\r\n    if (!this.externalSorting) {\r\n      this.sortInternalRows();\r\n    }\r\n\r\n    // auto group by parent on new update\r\n    this._internalRows = groupRowsByParents(\r\n      this._internalRows,\r\n      optionalGetterForProp(this.treeFromRelation),\r\n      optionalGetterForProp(this.treeToRelation)\r\n    );\r\n\r\n    // recalculate sizes/etc\r\n    this.recalculate();\r\n\r\n    if (this._rows && this._groupRowsBy) {\r\n      // If a column has been specified in _groupRowsBy created a new array with the data grouped by that row\r\n      this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\r\n    }\r\n\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Gets the rows.\r\n   */\r\n  get rows(): any {\r\n    return this._rows;\r\n  }\r\n\r\n  /**\r\n   * This attribute allows the user to set the name of the column to group the data with\r\n   */\r\n  @Input() set groupRowsBy(val: string) {\r\n    if (val) {\r\n      this._groupRowsBy = val;\r\n      if (this._rows && this._groupRowsBy) {\r\n        // cretes a new array with the data grouped\r\n        this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\r\n      }\r\n    }\r\n  }\r\n\r\n  get groupRowsBy() {\r\n    return this._groupRowsBy;\r\n  }\r\n\r\n  /**\r\n   * This attribute allows the user to set a grouped array in the following format:\r\n   *  [\r\n   *    {groupid=1} [\r\n   *      {id=1 name=\"test1\"},\r\n   *      {id=2 name=\"test2\"},\r\n   *      {id=3 name=\"test3\"}\r\n   *    ]},\r\n   *    {groupid=2>[\r\n   *      {id=4 name=\"test4\"},\r\n   *      {id=5 name=\"test5\"},\r\n   *      {id=6 name=\"test6\"}\r\n   *    ]}\r\n   *  ]\r\n   */\r\n  @Input() groupedRows: any[];\r\n\r\n  /**\r\n   * Columns to be displayed.\r\n   */\r\n  @Input() set columns(val: TableColumn[]) {\r\n    if (val) {\r\n      this._internalColumns = [...val];\r\n      setColumnDefaults(this._internalColumns);\r\n      this.recalculateColumns();\r\n    }\r\n\r\n    this._columns = val;\r\n  }\r\n\r\n  /**\r\n   * Get the columns.\r\n   */\r\n  get columns(): TableColumn[] {\r\n    return this._columns;\r\n  }\r\n\r\n  /**\r\n   * List of row objects that should be\r\n   * represented as selected in the grid.\r\n   * Default value: `[]`\r\n   */\r\n  @Input() selected: any[] = [];\r\n\r\n  /**\r\n   * Enable vertical scrollbars\r\n   */\r\n  @Input() scrollbarV: boolean = false;\r\n\r\n  /**\r\n   * Enable horz scrollbars\r\n   */\r\n  @Input() scrollbarH: boolean = false;\r\n\r\n  /**\r\n   * The row height; which is necessary\r\n   * to calculate the height for the lazy rendering.\r\n   */\r\n  @Input() rowHeight: number | 'auto' | ((row?: any) => number) = 30;\r\n\r\n  /**\r\n   * Type of column width distribution formula.\r\n   * Example: flex, force, standard\r\n   */\r\n  @Input() columnMode: ColumnMode | keyof typeof ColumnMode = ColumnMode.standard;\r\n\r\n  /**\r\n   * The minimum header height in pixels.\r\n   * Pass a falsey for no header\r\n   */\r\n  @Input() headerHeight: number = 30;\r\n\r\n  /**\r\n   * The minimum footer height in pixels.\r\n   * Pass falsey for no footer\r\n   */\r\n  @Input() footerHeight: number = 0;\r\n\r\n  /**\r\n   * If the table should use external paging\r\n   * otherwise its assumed that all data is preloaded.\r\n   */\r\n  @Input() externalPaging: boolean = false;\r\n\r\n  /**\r\n   * If the table should use external sorting or\r\n   * the built-in basic sorting.\r\n   */\r\n  @Input() externalSorting: boolean = false;\r\n\r\n  /**\r\n   * The page size to be shown.\r\n   * Default value: `undefined`\r\n   */\r\n  @Input() set limit(val: number | undefined) {\r\n    this._limit = val;\r\n\r\n    // recalculate sizes/etc\r\n    this.recalculate();\r\n  }\r\n\r\n  /**\r\n   * Gets the limit.\r\n   */\r\n  get limit(): number | undefined {\r\n    return this._limit;\r\n  }\r\n\r\n  /**\r\n   * The total count of all rows.\r\n   * Default value: `0`\r\n   */\r\n  @Input() set count(val: number) {\r\n    this._count = val;\r\n\r\n    // recalculate sizes/etc\r\n    this.recalculate();\r\n  }\r\n\r\n  /**\r\n   * Gets the count.\r\n   */\r\n  get count(): number {\r\n    return this._count;\r\n  }\r\n\r\n  /**\r\n   * The current offset ( page - 1 ) shown.\r\n   * Default value: `0`\r\n   */\r\n  @Input() set offset(val: number) {\r\n    this._offset = val;\r\n  }\r\n  get offset(): number {\r\n    return Math.max(Math.min(this._offset, Math.ceil(this.rowCount / this.pageSize) - 1), 0);\r\n  }\r\n\r\n  /**\r\n   * Show the linear loading bar.\r\n   * Default value: `false`\r\n   */\r\n  @Input() loadingIndicator: boolean = false;\r\n\r\n  /**\r\n   * Type of row selection. Options are:\r\n   *\r\n   *  - `single`\r\n   *  - `multi`\r\n   *  - `checkbox`\r\n   *  - `multiClick`\r\n   *  - `cell`\r\n   *\r\n   * For no selection pass a `falsey`.\r\n   * Default value: `undefined`\r\n   */\r\n  @Input() selectionType: SelectionType;\r\n\r\n  /**\r\n   * Enable/Disable ability to re-order columns\r\n   * by dragging them.\r\n   */\r\n  @Input() reorderable: boolean = true;\r\n\r\n  /**\r\n   * Swap columns on re-order columns or\r\n   * move them.\r\n   */\r\n  @Input() swapColumns: boolean = true;\r\n\r\n  /**\r\n   * The type of sorting\r\n   */\r\n  @Input() sortType: SortType = SortType.single;\r\n\r\n  /**\r\n   * Array of sorted columns by property and type.\r\n   * Default value: `[]`\r\n   */\r\n  @Input() sorts: any[] = [];\r\n\r\n  /**\r\n   * Css class overrides\r\n   */\r\n  @Input() cssClasses: any = {\r\n    sortAscending: 'datatable-icon-up',\r\n    sortDescending: 'datatable-icon-down',\r\n    sortUnset: 'datatable-icon-sort-unset',\r\n    pagerLeftArrow: 'datatable-icon-left',\r\n    pagerRightArrow: 'datatable-icon-right',\r\n    pagerPrevious: 'datatable-icon-prev',\r\n    pagerNext: 'datatable-icon-skip'\r\n  };\r\n\r\n  /**\r\n   * Message overrides for localization\r\n   *\r\n   * emptyMessage     [default] = 'No data to display'\r\n   * totalMessage     [default] = 'total'\r\n   * selectedMessage  [default] = 'selected'\r\n   */\r\n  @Input() messages: any = {\r\n    // Message to show when array is presented\r\n    // but contains no values\r\n    emptyMessage: 'No data to display',\r\n\r\n    // Footer total message\r\n    totalMessage: 'total',\r\n\r\n    // Footer selected message\r\n    selectedMessage: 'selected'\r\n  };\r\n\r\n  /**\r\n   * Row specific classes.\r\n   * Similar implementation to ngClass.\r\n   *\r\n   *  [rowClass]=\"'first second'\"\r\n   *  [rowClass]=\"{ 'first': true, 'second': true, 'third': false }\"\r\n   */\r\n  @Input() rowClass: any;\r\n\r\n  /**\r\n   * A boolean/function you can use to check whether you want\r\n   * to select a particular row based on a criteria. Example:\r\n   *\r\n   *    (selection) => {\r\n   *      return selection !== 'Ethel Price';\r\n   *    }\r\n   */\r\n  @Input() selectCheck: any;\r\n\r\n  /**\r\n   * A function you can use to check whether you want\r\n   * to show the checkbox for a particular row based on a criteria. Example:\r\n   *\r\n   *    (row, column, value) => {\r\n   *      return row.name !== 'Ethel Price';\r\n   *    }\r\n   */\r\n  @Input() displayCheck: (row: any, column?: any, value?: any) => boolean;\r\n\r\n  /**\r\n   * A boolean you can use to set the detault behaviour of rows and groups\r\n   * whether they will start expanded or not. If ommited the default is NOT expanded.\r\n   *\r\n   */\r\n  @Input() groupExpansionDefault: boolean = false;\r\n\r\n  /**\r\n   * Property to which you can use for custom tracking of rows.\r\n   * Example: 'name'\r\n   */\r\n  @Input() trackByProp: string;\r\n\r\n  /**\r\n   * Property to which you can use for determining select all\r\n   * rows on current page or not.\r\n   *\r\n   * @memberOf DatatableComponent\r\n   */\r\n  @Input() selectAllRowsOnPage = false;\r\n\r\n  /**\r\n   * A flag for row virtualization on / off\r\n   */\r\n  @Input() virtualization: boolean = true;\r\n\r\n  /**\r\n   * Tree from relation\r\n   */\r\n  @Input() treeFromRelation: string;\r\n\r\n  /**\r\n   * Tree to relation\r\n   */\r\n  @Input() treeToRelation: string;\r\n\r\n  /**\r\n   * A flag for switching summary row on / off\r\n   */\r\n  @Input() summaryRow: boolean = false;\r\n\r\n  /**\r\n   * A height of summary row\r\n   */\r\n  @Input() summaryHeight: number = 30;\r\n\r\n  /**\r\n   * A property holds a summary row position: top/bottom\r\n   */\r\n  @Input() summaryPosition: string = 'top';\r\n\r\n  /**\r\n   * Body was scrolled typically in a `scrollbarV:true` scenario.\r\n   */\r\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * A cell or row was focused via keyboard or mouse click.\r\n   */\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * A cell or row was selected.\r\n   */\r\n  @Output() select: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Column sort was invoked.\r\n   */\r\n  @Output() sort: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * The table was paged either triggered by the pager or the body scroll.\r\n   */\r\n  @Output() page: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Columns were re-ordered.\r\n   */\r\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Column was resized.\r\n   */\r\n  @Output() resize: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * The context menu was invoked on the table.\r\n   * type indicates whether the header or the body was clicked.\r\n   * content contains either the column or the row that was clicked.\r\n   */\r\n  @Output() tableContextmenu = new EventEmitter<{ event: MouseEvent; type: ContextmenuType; content: any }>(false);\r\n\r\n  /**\r\n   * A row was expanded ot collapsed for tree\r\n   */\r\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * CSS class applied if the header height if fixed height.\r\n   */\r\n  @HostBinding('class.fixed-header')\r\n  get isFixedHeader(): boolean {\r\n    const headerHeight: number | string = this.headerHeight;\r\n    return typeof headerHeight === 'string' ? <string>headerHeight !== 'auto' : true;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to the root element if\r\n   * the row heights are fixed heights.\r\n   */\r\n  @HostBinding('class.fixed-row')\r\n  get isFixedRow(): boolean {\r\n    return this.rowHeight !== 'auto';\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to root element if\r\n   * vertical scrolling is enabled.\r\n   */\r\n  @HostBinding('class.scroll-vertical')\r\n  get isVertScroll(): boolean {\r\n    return this.scrollbarV;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to root element if\r\n   * virtualization is enabled.\r\n   */\r\n  @HostBinding('class.virtualized')\r\n  get isVirtualized(): boolean {\r\n    return this.virtualization;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to the root element\r\n   * if the horziontal scrolling is enabled.\r\n   */\r\n  @HostBinding('class.scroll-horz')\r\n  get isHorScroll(): boolean {\r\n    return this.scrollbarH;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to root element is selectable.\r\n   */\r\n  @HostBinding('class.selectable')\r\n  get isSelectable(): boolean {\r\n    return this.selectionType !== undefined;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to root is checkbox selection.\r\n   */\r\n  @HostBinding('class.checkbox-selection')\r\n  get isCheckboxSelection(): boolean {\r\n    return this.selectionType === SelectionType.checkbox;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to root if cell selection.\r\n   */\r\n  @HostBinding('class.cell-selection')\r\n  get isCellSelection(): boolean {\r\n    return this.selectionType === SelectionType.cell;\r\n  }\r\n\r\n  /**\r\n   * CSS class applied to root if single select.\r\n   */\r\n  @HostBinding('class.single-selection')\r\n  get isSingleSelection(): boolean {\r\n    return this.selectionType === SelectionType.single;\r\n  }\r\n\r\n  /**\r\n   * CSS class added to root element if mulit select\r\n   */\r\n  @HostBinding('class.multi-selection')\r\n  get isMultiSelection(): boolean {\r\n    return this.selectionType === SelectionType.multi;\r\n  }\r\n\r\n  /**\r\n   * CSS class added to root element if mulit click select\r\n   */\r\n  @HostBinding('class.multi-click-selection')\r\n  get isMultiClickSelection(): boolean {\r\n    return this.selectionType === SelectionType.multiClick;\r\n  }\r\n\r\n  /**\r\n   * Column templates gathered from `ContentChildren`\r\n   * if described in your markup.\r\n   */\r\n  @ContentChildren(DataTableColumnDirective)\r\n  set columnTemplates(val: QueryList<DataTableColumnDirective>) {\r\n    this._columnTemplates = val;\r\n    this.translateColumns(val);\r\n  }\r\n\r\n  /**\r\n   * Returns the column templates.\r\n   */\r\n  get columnTemplates(): QueryList<DataTableColumnDirective> {\r\n    return this._columnTemplates;\r\n  }\r\n\r\n  /**\r\n   * Row Detail templates gathered from the ContentChild\r\n   */\r\n  @ContentChild(DatatableRowDetailDirective)\r\n  rowDetail: DatatableRowDetailDirective;\r\n\r\n  /**\r\n   * Group Header templates gathered from the ContentChild\r\n   */\r\n  @ContentChild(DatatableGroupHeaderDirective)\r\n  groupHeader: DatatableGroupHeaderDirective;\r\n\r\n  /**\r\n   * Footer template gathered from the ContentChild\r\n   */\r\n  @ContentChild(DatatableFooterDirective)\r\n  footer: DatatableFooterDirective;\r\n\r\n  /**\r\n   * Reference to the body component for manually\r\n   * invoking functions on the body.\r\n   */\r\n  @ViewChild(DataTableBodyComponent)\r\n  bodyComponent: DataTableBodyComponent;\r\n\r\n  /**\r\n   * Reference to the header component for manually\r\n   * invoking functions on the header.\r\n   *\r\n   * @memberOf DatatableComponent\r\n   */\r\n  @ViewChild(DataTableHeaderComponent)\r\n  headerComponent: DataTableHeaderComponent;\r\n\r\n  /**\r\n   * Returns if all rows are selected.\r\n   */\r\n  get allRowsSelected(): boolean {\r\n    let allRowsSelected = this.rows && this.selected && this.selected.length === this.rows.length;\r\n\r\n    if (this.bodyComponent && this.selectAllRowsOnPage) {\r\n      const indexes = this.bodyComponent.indexes;\r\n      const rowsOnPage = indexes.last - indexes.first;\r\n      allRowsSelected = this.selected.length === rowsOnPage;\r\n    }\r\n\r\n    return this.selected && this.rows && this.rows.length !== 0 && allRowsSelected;\r\n  }\r\n\r\n  element: HTMLElement;\r\n  _innerWidth: number;\r\n  pageSize: number;\r\n  bodyHeight: number;\r\n  rowCount: number = 0;\r\n  rowDiffer: KeyValueDiffer<{}, {}>;\r\n\r\n  _offsetX = new BehaviorSubject(0);\r\n  _limit: number | undefined;\r\n  _count: number = 0;\r\n  _offset: number = 0;\r\n  _rows: any[];\r\n  _groupRowsBy: string;\r\n  _internalRows: any[];\r\n  _internalColumns: TableColumn[];\r\n  _columns: TableColumn[];\r\n  _columnTemplates: QueryList<DataTableColumnDirective>;\r\n  _subscriptions: Subscription[] = [];\r\n\r\n  constructor(\r\n    @SkipSelf() private scrollbarHelper: ScrollbarHelper,\r\n    @SkipSelf() private dimensionsHelper: DimensionsHelper,\r\n    private cd: ChangeDetectorRef,\r\n    element: ElementRef,\r\n    differs: KeyValueDiffers,\r\n    private columnChangesService: ColumnChangesService,\r\n    @Optional() @Inject('configuration') private configuration: INgxDatatableConfig\r\n  ) {\r\n    // get ref to elm for measuring\r\n    this.element = element.nativeElement;\r\n    this.rowDiffer = differs.find({}).create();\r\n\r\n    // apply global settings from Module.forRoot\r\n    if (this.configuration && this.configuration.messages) {\r\n      this.messages = { ...this.configuration.messages };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Lifecycle hook that is called after data-bound\r\n   * properties of a directive are initialized.\r\n   */\r\n  ngOnInit(): void {\r\n    // need to call this immediatly to size\r\n    // if the table is hidden the visibility\r\n    // listener will invoke this itself upon show\r\n    this.recalculate();\r\n  }\r\n\r\n  /**\r\n   * Lifecycle hook that is called after a component's\r\n   * view has been fully initialized.\r\n   */\r\n  ngAfterViewInit(): void {\r\n    if (!this.externalSorting) {\r\n      this.sortInternalRows();\r\n    }\r\n\r\n    // this has to be done to prevent the change detection\r\n    // tree from freaking out because we are readjusting\r\n    if (typeof requestAnimationFrame === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    requestAnimationFrame(() => {\r\n      this.recalculate();\r\n\r\n      // emit page for virtual server-side kickoff\r\n      if (this.externalPaging && this.scrollbarV) {\r\n        this.page.emit({\r\n          count: this.count,\r\n          pageSize: this.pageSize,\r\n          limit: this.limit,\r\n          offset: 0\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Lifecycle hook that is called after a component's\r\n   * content has been fully initialized.\r\n   */\r\n  ngAfterContentInit() {\r\n    this.columnTemplates.changes.subscribe(v => this.translateColumns(v));\r\n    this.listenForColumnInputChanges();\r\n  }\r\n\r\n  /**\r\n   * This will be used when displaying or selecting rows.\r\n   * when tracking/comparing them, we'll use the value of this fn,\r\n   *\r\n   * (`fn(x) === fn(y)` instead of `x === y`)\r\n   */\r\n  @Input() rowIdentity: (x: any) => any = (x: any) => {\r\n    if (this._groupRowsBy) {\r\n      // each group in groupedRows are stored as {key, value: [rows]},\r\n      // where key is the groupRowsBy index\r\n      return x.key;\r\n    } else {\r\n      return x;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Translates the templates to the column objects\r\n   */\r\n  translateColumns(val: any) {\r\n    if (val) {\r\n      const arr = val.toArray();\r\n      if (arr.length) {\r\n        this._internalColumns = translateTemplates(arr);\r\n        setColumnDefaults(this._internalColumns);\r\n        this.recalculateColumns();\r\n        this.sortInternalRows();\r\n        this.cd.markForCheck();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a map with the data grouped by the user choice of grouping index\r\n   *\r\n   * @param originalArray the original array passed via parameter\r\n   * @param groupByIndex  the index of the column to group the data by\r\n   */\r\n  groupArrayBy(originalArray: any, groupBy: any) {\r\n    // create a map to hold groups with their corresponding results\r\n    const map = new Map();\r\n    let i: number = 0;\r\n\r\n    originalArray.forEach((item: any) => {\r\n      const key = item[groupBy];\r\n      if (!map.has(key)) {\r\n        map.set(key, [item]);\r\n      } else {\r\n        map.get(key).push(item);\r\n      }\r\n      i++;\r\n    });\r\n\r\n    const addGroup = (key: any, value: any) => {\r\n      return { key, value };\r\n    };\r\n\r\n    // convert map back to a simple array of objects\r\n    return Array.from(map, x => addGroup(x[0], x[1]));\r\n  }\r\n\r\n  /*\r\n   * Lifecycle hook that is called when Angular dirty checks a directive.\r\n   */\r\n  ngDoCheck(): void {\r\n    if (this.rowDiffer.diff(this.rows)) {\r\n      if (!this.externalSorting) {\r\n        this.sortInternalRows();\r\n      } else {\r\n        this._internalRows = [...this.rows];\r\n      }\r\n\r\n      // auto group by parent on new update\r\n      this._internalRows = groupRowsByParents(\r\n        this._internalRows,\r\n        optionalGetterForProp(this.treeFromRelation),\r\n        optionalGetterForProp(this.treeToRelation)\r\n      );\r\n\r\n      this.recalculatePages();\r\n      this.cd.markForCheck();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recalc's the sizes of the grid.\r\n   *\r\n   * Updated automatically on changes to:\r\n   *\r\n   *  - Columns\r\n   *  - Rows\r\n   *  - Paging related\r\n   *\r\n   * Also can be manually invoked or upon window resize.\r\n   */\r\n  recalculate(): void {\r\n    this.recalculateDims();\r\n    this.recalculateColumns();\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Window resize handler to update sizes.\r\n   */\r\n  @HostListener('window:resize')\r\n  @throttleable(5)\r\n  onWindowResize(): void {\r\n    this.recalculate();\r\n  }\r\n\r\n  /**\r\n   * Recalulcates the column widths based on column width\r\n   * distribution mode and scrollbar offsets.\r\n   */\r\n  recalculateColumns(\r\n    columns: any[] = this._internalColumns,\r\n    forceIdx: number = -1,\r\n    allowBleed: boolean = this.scrollbarH\r\n  ): any[] | undefined {\r\n    if (!columns) return undefined;\r\n\r\n    let width = this._innerWidth;\r\n    if (this.scrollbarV) {\r\n      width = width - this.scrollbarHelper.width;\r\n    }\r\n\r\n    if (this.columnMode === ColumnMode.force) {\r\n      forceFillColumnWidths(columns, width, forceIdx, allowBleed);\r\n    } else if (this.columnMode === ColumnMode.flex) {\r\n      adjustColumnWidths(columns, width);\r\n    }\r\n\r\n    return columns;\r\n  }\r\n\r\n  /**\r\n   * Recalculates the dimensions of the table size.\r\n   * Internally calls the page size and row count calcs too.\r\n   *\r\n   */\r\n  recalculateDims(): void {\r\n    const dims = this.dimensionsHelper.getDimensions(this.element);\r\n    this._innerWidth = Math.floor(dims.width);\r\n\r\n    if (this.scrollbarV) {\r\n      let height = dims.height;\r\n      if (this.headerHeight) height = height - this.headerHeight;\r\n      if (this.footerHeight) height = height - this.footerHeight;\r\n      this.bodyHeight = height;\r\n    }\r\n\r\n    this.recalculatePages();\r\n  }\r\n\r\n  /**\r\n   * Recalculates the pages after a update.\r\n   */\r\n  recalculatePages(): void {\r\n    this.pageSize = this.calcPageSize();\r\n    this.rowCount = this.calcRowCount();\r\n  }\r\n\r\n  /**\r\n   * Body triggered a page event.\r\n   */\r\n  onBodyPage({ offset }: any): void {\r\n    // Avoid pagination caming from body events like scroll when the table\r\n    // has no virtualization and the external paging is enable.\r\n    // This means, let's the developer handle pagination by my him(her) self\r\n    if (this.externalPaging && !this.virtualization) {\r\n      return;\r\n    }\r\n\r\n    this.offset = offset;\r\n\r\n    this.page.emit({\r\n      count: this.count,\r\n      pageSize: this.pageSize,\r\n      limit: this.limit,\r\n      offset: this.offset\r\n    });\r\n  }\r\n\r\n  /**\r\n   * The body triggered a scroll event.\r\n   */\r\n  onBodyScroll(event: MouseEvent): void {\r\n    this._offsetX.next(event.offsetX);\r\n    this.scroll.emit(event);\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * The footer triggered a page event.\r\n   */\r\n  onFooterPage(event: any) {\r\n    this.offset = event.page - 1;\r\n    this.bodyComponent.updateOffsetY(this.offset);\r\n\r\n    this.page.emit({\r\n      count: this.count,\r\n      pageSize: this.pageSize,\r\n      limit: this.limit,\r\n      offset: this.offset\r\n    });\r\n\r\n    if (this.selectAllRowsOnPage) {\r\n      this.selected = [];\r\n      this.select.emit({\r\n        selected: this.selected\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recalculates the sizes of the page\r\n   */\r\n  calcPageSize(val: any[] = this.rows): number {\r\n    // Keep the page size constant even if the row has been expanded.\r\n    // This is because an expanded row is still considered to be a child of\r\n    // the original row.  Hence calculation would use rowHeight only.\r\n    if (this.scrollbarV && this.virtualization) {\r\n      const size = Math.ceil(this.bodyHeight / (this.rowHeight as number));\r\n      return Math.max(size, 0);\r\n    }\r\n\r\n    // if limit is passed, we are paging\r\n    if (this.limit !== undefined) {\r\n      return this.limit;\r\n    }\r\n\r\n    // otherwise use row length\r\n    if (val) {\r\n      return val.length;\r\n    }\r\n\r\n    // other empty :(\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Calculates the row count.\r\n   */\r\n  calcRowCount(val: any[] = this.rows): number {\r\n    if (!this.externalPaging) {\r\n      if (!val) return 0;\r\n\r\n      if (this.groupedRows) {\r\n        return this.groupedRows.length;\r\n      } else if (this.treeFromRelation != null && this.treeToRelation != null) {\r\n        return this._internalRows.length;\r\n      } else {\r\n        return val.length;\r\n      }\r\n    }\r\n\r\n    return this.count;\r\n  }\r\n\r\n  /**\r\n   * The header triggered a contextmenu event.\r\n   */\r\n  onColumnContextmenu({ event, column }: any): void {\r\n    this.tableContextmenu.emit({ event, type: ContextmenuType.header, content: column });\r\n  }\r\n\r\n  /**\r\n   * The body triggered a contextmenu event.\r\n   */\r\n  onRowContextmenu({ event, row }: any): void {\r\n    this.tableContextmenu.emit({ event, type: ContextmenuType.body, content: row });\r\n  }\r\n\r\n  /**\r\n   * The header triggered a column resize event.\r\n   */\r\n  onColumnResize({ column, newValue }: any): void {\r\n    /* Safari/iOS 10.2 workaround */\r\n    if (column === undefined) {\r\n      return;\r\n    }\r\n\r\n    let idx: number;\r\n    const cols = this._internalColumns.map((c, i) => {\r\n      c = { ...c };\r\n\r\n      if (c.$$id === column.$$id) {\r\n        idx = i;\r\n        c.width = newValue;\r\n\r\n        // set this so we can force the column\r\n        // width distribution to be to this value\r\n        c.$$oldWidth = newValue;\r\n      }\r\n\r\n      return c;\r\n    });\r\n\r\n    this.recalculateColumns(cols, idx);\r\n    this._internalColumns = cols;\r\n\r\n    this.resize.emit({\r\n      column,\r\n      newValue\r\n    });\r\n  }\r\n\r\n  /**\r\n   * The header triggered a column re-order event.\r\n   */\r\n  onColumnReorder({ column, newValue, prevValue }: any): void {\r\n    const cols = this._internalColumns.map(c => {\r\n      return { ...c };\r\n    });\r\n\r\n    if (this.swapColumns) {\r\n      const prevCol = cols[newValue];\r\n      cols[newValue] = column;\r\n      cols[prevValue] = prevCol;\r\n    } else {\r\n      if (newValue > prevValue) {\r\n        const movedCol = cols[prevValue];\r\n        for (let i = prevValue; i < newValue; i++) {\r\n          cols[i] = cols[i + 1];\r\n        }\r\n        cols[newValue] = movedCol;\r\n      } else {\r\n        const movedCol = cols[prevValue];\r\n        for (let i = prevValue; i > newValue; i--) {\r\n          cols[i] = cols[i - 1];\r\n        }\r\n        cols[newValue] = movedCol;\r\n      }\r\n    }\r\n\r\n    this._internalColumns = cols;\r\n\r\n    this.reorder.emit({\r\n      column,\r\n      newValue,\r\n      prevValue\r\n    });\r\n  }\r\n\r\n  /**\r\n   * The header triggered a column sort event.\r\n   */\r\n  onColumnSort(event: any): void {\r\n    // clean selected rows\r\n    if (this.selectAllRowsOnPage) {\r\n      this.selected = [];\r\n      this.select.emit({\r\n        selected: this.selected\r\n      });\r\n    }\r\n\r\n    this.sorts = event.sorts;\r\n\r\n    // this could be optimized better since it will resort\r\n    // the rows again on the 'push' detection...\r\n    if (this.externalSorting === false) {\r\n      // don't use normal setter so we don't resort\r\n      this.sortInternalRows();\r\n    }\r\n\r\n    // auto group by parent on new update\r\n    this._internalRows = groupRowsByParents(\r\n      this._internalRows,\r\n      optionalGetterForProp(this.treeFromRelation),\r\n      optionalGetterForProp(this.treeToRelation)\r\n    );\r\n\r\n    // Always go to first page when sorting to see the newly sorted data\r\n    this.offset = 0;\r\n    this.bodyComponent.updateOffsetY(this.offset);\r\n    this.sort.emit(event);\r\n  }\r\n\r\n  /**\r\n   * Toggle all row selection\r\n   */\r\n  onHeaderSelect(event: any): void {\r\n    if (this.bodyComponent && this.selectAllRowsOnPage) {\r\n      // before we splice, chk if we currently have all selected\r\n      const first = this.bodyComponent.indexes.first;\r\n      const last = this.bodyComponent.indexes.last;\r\n      const allSelected = this.selected.length === last - first;\r\n\r\n      // remove all existing either way\r\n      this.selected = [];\r\n\r\n      // do the opposite here\r\n      if (!allSelected) {\r\n        this.selected.push(...this._internalRows.slice(first, last));\r\n      }\r\n    } else {\r\n      // before we splice, chk if we currently have all selected\r\n      const allSelected = this.selected.length === this.rows.length;\r\n      // remove all existing either way\r\n      this.selected = [];\r\n      // do the opposite here\r\n      if (!allSelected) {\r\n        this.selected.push(...this.rows);\r\n      }\r\n    }\r\n\r\n    this.select.emit({\r\n      selected: this.selected\r\n    });\r\n  }\r\n\r\n  /**\r\n   * A row was selected from body\r\n   */\r\n  onBodySelect(event: any): void {\r\n    this.select.emit(event);\r\n  }\r\n\r\n  /**\r\n   * A row was expanded or collapsed for tree\r\n   */\r\n  onTreeAction(event: any) {\r\n    const row = event.row;\r\n    // TODO: For duplicated items this will not work\r\n    const rowIndex = this._rows.findIndex(r => r[this.treeToRelation] === event.row[this.treeToRelation]);\r\n    this.treeAction.emit({ row, rowIndex });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._subscriptions.forEach(subscription => subscription.unsubscribe());\r\n  }\r\n\r\n  /**\r\n   * listen for changes to input bindings of all DataTableColumnDirective and\r\n   * trigger the columnTemplates.changes observable to emit\r\n   */\r\n  private listenForColumnInputChanges(): void {\r\n    this._subscriptions.push(\r\n      this.columnChangesService.columnInputChanges$.subscribe(() => {\r\n        if (this.columnTemplates) {\r\n          this.columnTemplates.notifyOnChanges();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private sortInternalRows(): void {\r\n    this._internalRows = sortRows(this._internalRows, this._internalColumns, this.sorts);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'multiple-tables-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Multiple Tables\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/multiple.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows1\"\r\n        [columns]=\"columns1\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"0\"\r\n        [rowHeight]=\"100\"\r\n      >\r\n      </ngx-datatable>\r\n      <br />\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows2\"\r\n        [columns]=\"columns2\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n      >\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class MultipleTablesComponent {\r\n  columns1 = [{ prop: 'name' }, { name: 'Gender' }, { name: 'Company' }];\r\n\r\n  columns2 = [{ prop: 'name', name: 'Name' }, { name: 'Gender' }];\r\n\r\n  rows1 = [\r\n    { name: 'Larry', gender: 'Male', company: 'Cisco' },\r\n    { name: 'Lauren', gender: 'Female', company: 'HP' }\r\n  ];\r\n\r\n  rows2 = [\r\n    { name: 'Callie', gender: 'Female' },\r\n    { name: 'Maggie', gender: 'Female' }\r\n  ];\r\n\r\n  ColumnMode = ColumnMode;\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MockServerResultsService } from './mock-server-results-service';\r\nimport { CorporateEmployee } from './model/corporate-employee';\r\nimport { Page } from './model/page';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'paging-scrolling-novirtualization-demo',\r\n  providers: [MockServerResultsService],\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Server-side Paging\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/paging/paging-scrolling-novirtualization.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows\"\r\n        [columns]=\"[{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }]\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n        [scrollbarV]=\"true\"\r\n        [virtualization]=\"false\"\r\n        [externalPaging]=\"true\"\r\n        [count]=\"page.totalElements\"\r\n        [offset]=\"page.pageNumber\"\r\n        [limit]=\"page.size\"\r\n        (page)=\"setPage($event)\"\r\n      >\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class PagingScrollingNoVirtualizationComponent {\r\n  page = new Page();\r\n  rows = new Array<CorporateEmployee>();\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor(private serverResultsService: MockServerResultsService) {\r\n    this.page.pageNumber = 0;\r\n    this.page.size = 20;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setPage({ offset: 0 });\r\n  }\r\n\r\n  /**\r\n   * Populate the table with new data based on the page number\r\n   * @param page The page to select\r\n   */\r\n  setPage(pageInfo) {\r\n    this.page.pageNumber = pageInfo.offset;\r\n    this.serverResultsService.getResults(this.page).subscribe(pagedData => {\r\n      this.page = pagedData.page;\r\n      this.rows = pagedData.data;\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'chkbox-selection-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Checkbox Selection\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-chkbox.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n        <small>\r\n          <a href=\"javascript:void(0)\" (click)=\"add()\">Add</a> |\r\n          <a href=\"javascript:void(0)\" (click)=\"update()\">Update</a> |\r\n          <a href=\"javascript:void(0)\" (click)=\"remove()\">Remove</a>\r\n        </small>\r\n      </h3>\r\n      <div style=\"float:left;width:75%\">\r\n        <ngx-datatable\r\n          style=\"width: 90%\"\r\n          class=\"material\"\r\n          [rows]=\"rows\"\r\n          [columnMode]=\"ColumnMode.force\"\r\n          [headerHeight]=\"50\"\r\n          [footerHeight]=\"50\"\r\n          rowHeight=\"auto\"\r\n          [limit]=\"5\"\r\n          [selected]=\"selected\"\r\n          [selectionType]=\"SelectionType.checkbox\"\r\n          [selectAllRowsOnPage]=\"false\"\r\n          [displayCheck]=\"displayCheck\"\r\n          (activate)=\"onActivate($event)\"\r\n          (select)=\"onSelect($event)\"\r\n        >\r\n          <ngx-datatable-column\r\n            [width]=\"30\"\r\n            [sortable]=\"false\"\r\n            [canAutoResize]=\"false\"\r\n            [draggable]=\"false\"\r\n            [resizeable]=\"false\"\r\n            [headerCheckboxable]=\"true\"\r\n            [checkboxable]=\"true\"\r\n          >\r\n          </ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n          <ngx-datatable-column name=\"Company\"></ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class=\"selected-column\">\r\n        <h4>\r\n          Selections <small>({{ selected?.length }})</small>\r\n        </h4>\r\n        <ul>\r\n          <li *ngFor=\"let sel of selected\">\r\n            {{ sel.name }}\r\n          </li>\r\n          <li *ngIf=\"!selected?.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class CheckboxSelectionComponent {\r\n  rows = [];\r\n  selected = [];\r\n\r\n  ColumnMode = ColumnMode;\r\n  SelectionType = SelectionType;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }) {\r\n    console.log('Select Event', selected, this.selected);\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n  }\r\n\r\n  onActivate(event) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n  add() {\r\n    this.selected.push(this.rows[1], this.rows[3]);\r\n  }\r\n\r\n  update() {\r\n    this.selected = [this.rows[1], this.rows[3]];\r\n  }\r\n\r\n  remove() {\r\n    this.selected = [];\r\n  }\r\n\r\n  displayCheck(row) {\r\n    return row.name !== 'Ethel Price';\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'multi-click-selection-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Multi Click Selection\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-multi-click.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div style=\"float:left;width:75%\">\r\n        <div class=\"info\">\r\n          <p>This demonstrates multi selection table, where any click event causes a selection.</p>\r\n        </div>\r\n\r\n        <ngx-datatable\r\n          class=\"material\"\r\n          [rows]=\"rows\"\r\n          [columnMode]=\"ColumnMode.force\"\r\n          [columns]=\"columns\"\r\n          [headerHeight]=\"50\"\r\n          [footerHeight]=\"50\"\r\n          rowHeight=\"auto\"\r\n          [limit]=\"5\"\r\n          [selected]=\"selected\"\r\n          [selectionType]=\"SelectionType.multiClick\"\r\n          (activate)=\"onActivate($event)\"\r\n          (select)=\"onSelect($event)\"\r\n        >\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class=\"selected-column\">\r\n        <h4>Selections</h4>\r\n        <ul>\r\n          <li *ngFor=\"let sel of selected\">\r\n            {{ sel.name }}\r\n          </li>\r\n          <li *ngIf=\"!selected.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class MultiClickSelectionComponent {\r\n  rows = [];\r\n\r\n  selected = [];\r\n\r\n  columns: any[] = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\r\n\r\n  ColumnMode = ColumnMode;\r\n  SelectionType = SelectionType;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }) {\r\n    console.log('Select Event', selected, this.selected);\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n  }\r\n\r\n  onActivate(event) {\r\n    console.log('Activate Event', event);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'horz-vert-scrolling-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Horizontal and Vertical Scrolling\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/scrolling.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows\"\r\n        columnMode=\"force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"0\"\r\n        [rowHeight]=\"50\"\r\n        [scrollbarV]=\"true\"\r\n        [scrollbarH]=\"true\"\r\n      >\r\n        <ngx-datatable-column name=\"Name\" [width]=\"300\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"City\" [width]=\"300\" prop=\"address.city\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"State\" [width]=\"300\" prop=\"address.state\"></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class HorzVertScrolling {\r\n  rows = [];\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n}\r\n","/**\r\n * An object used to get page information from the server\r\n */\r\nexport class Page {\r\n  // The number of elements in the page\r\n  size: number = 0;\r\n  // The total number of elements\r\n  totalElements: number = 0;\r\n  // The total number of pages\r\n  totalPages: number = 0;\r\n  // The current page number\r\n  pageNumber: number = 0;\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  PipeTransform,\r\n  HostBinding,\r\n  ViewChild,\r\n  ChangeDetectorRef,\r\n  Output,\r\n  EventEmitter,\r\n  HostListener,\r\n  ElementRef,\r\n  ViewContainerRef,\r\n  OnDestroy,\r\n  DoCheck,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { TableColumn } from '../../types/table-column.type';\r\nimport { SortDirection } from '../../types/sort-direction.type';\r\nimport { Keys } from '../../utils/keys';\r\n\r\nexport type TreeStatus = 'collapsed' | 'expanded' | 'loading' | 'disabled';\r\n\r\n@Component({\r\n  selector: 'datatable-body-cell',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div class=\"datatable-body-cell-label\" [style.margin-left.px]=\"calcLeftMargin(column, row)\">\r\n      <label\r\n        *ngIf=\"column.checkboxable && (!displayCheck || displayCheck(row, column, value))\"\r\n        class=\"datatable-checkbox\"\r\n      >\r\n        <input type=\"checkbox\" [checked]=\"isSelected\" (click)=\"onCheckboxChange($event)\" />\r\n      </label>\r\n      <ng-container *ngIf=\"column.isTreeColumn\">\r\n        <button\r\n          *ngIf=\"!column.treeToggleTemplate\"\r\n          class=\"datatable-tree-button\"\r\n          [disabled]=\"treeStatus === 'disabled'\"\r\n          (click)=\"onTreeAction()\"\r\n        >\r\n          <span>\r\n            <i *ngIf=\"treeStatus === 'loading'\" class=\"icon datatable-icon-collapse\"></i>\r\n            <i *ngIf=\"treeStatus === 'collapsed'\" class=\"icon datatable-icon-up\"></i>\r\n            <i *ngIf=\"treeStatus === 'expanded' || treeStatus === 'disabled'\" class=\"icon datatable-icon-down\"></i>\r\n          </span>\r\n        </button>\r\n        <ng-template\r\n          *ngIf=\"column.treeToggleTemplate\"\r\n          [ngTemplateOutlet]=\"column.treeToggleTemplate\"\r\n          [ngTemplateOutletContext]=\"{ cellContext: cellContext }\"\r\n        >\r\n        </ng-template>\r\n      </ng-container>\r\n\r\n      <span *ngIf=\"!column.cellTemplate\" [title]=\"sanitizedValue\" [innerHTML]=\"value\"> </span>\r\n      <ng-template\r\n        #cellTemplate\r\n        *ngIf=\"column.cellTemplate\"\r\n        [ngTemplateOutlet]=\"column.cellTemplate\"\r\n        [ngTemplateOutletContext]=\"cellContext\"\r\n      >\r\n      </ng-template>\r\n    </div>\r\n  `\r\n})\r\nexport class DataTableBodyCellComponent implements DoCheck, OnDestroy {\r\n  @Input() displayCheck: (row: any, column?: TableColumn, value?: any) => boolean;\r\n\r\n  @Input() set group(group: any) {\r\n    this._group = group;\r\n    this.cellContext.group = group;\r\n    this.checkValueUpdates();\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  get group() {\r\n    return this._group;\r\n  }\r\n\r\n  @Input() set rowHeight(val: number) {\r\n    this._rowHeight = val;\r\n    this.cellContext.rowHeight = val;\r\n    this.checkValueUpdates();\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  get rowHeight() {\r\n    return this._rowHeight;\r\n  }\r\n\r\n  @Input() set isSelected(val: boolean) {\r\n    this._isSelected = val;\r\n    this.cellContext.isSelected = val;\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  get isSelected(): boolean {\r\n    return this._isSelected;\r\n  }\r\n\r\n  @Input() set expanded(val: boolean) {\r\n    this._expanded = val;\r\n    this.cellContext.expanded = val;\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  get expanded(): boolean {\r\n    return this._expanded;\r\n  }\r\n\r\n  @Input() set rowIndex(val: number) {\r\n    this._rowIndex = val;\r\n    this.cellContext.rowIndex = val;\r\n    this.checkValueUpdates();\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  get rowIndex(): number {\r\n    return this._rowIndex;\r\n  }\r\n\r\n  @Input() set column(column: TableColumn) {\r\n    this._column = column;\r\n    this.cellContext.column = column;\r\n    this.checkValueUpdates();\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  get column(): TableColumn {\r\n    return this._column;\r\n  }\r\n\r\n  @Input() set row(row: any) {\r\n    this._row = row;\r\n    this.cellContext.row = row;\r\n    this.checkValueUpdates();\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  get row(): any {\r\n    return this._row;\r\n  }\r\n\r\n  @Input() set sorts(val: any[]) {\r\n    this._sorts = val;\r\n    this.calcSortDir = this.calcSortDir(val);\r\n  }\r\n\r\n  get sorts(): any[] {\r\n    return this._sorts;\r\n  }\r\n\r\n  @Input() set treeStatus(status: TreeStatus) {\r\n    if (status !== 'collapsed' && status !== 'expanded' && status !== 'loading' && status !== 'disabled') {\r\n      this._treeStatus = 'collapsed';\r\n    } else {\r\n      this._treeStatus = status;\r\n    }\r\n    this.cellContext.treeStatus = this._treeStatus;\r\n    this.checkValueUpdates();\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  get treeStatus(): TreeStatus {\r\n    return this._treeStatus;\r\n  }\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ViewChild('cellTemplate', { read: ViewContainerRef, static: true })\r\n  cellTemplate: ViewContainerRef;\r\n\r\n  @HostBinding('class')\r\n  get columnCssClasses(): any {\r\n    let cls = 'datatable-body-cell';\r\n    if (this.column.cellClass) {\r\n      if (typeof this.column.cellClass === 'string') {\r\n        cls += ' ' + this.column.cellClass;\r\n      } else if (typeof this.column.cellClass === 'function') {\r\n        const res = this.column.cellClass({\r\n          row: this.row,\r\n          group: this.group,\r\n          column: this.column,\r\n          value: this.value,\r\n          rowHeight: this.rowHeight\r\n        });\r\n\r\n        if (typeof res === 'string') {\r\n          cls += ' ' + res;\r\n        } else if (typeof res === 'object') {\r\n          const keys = Object.keys(res);\r\n          for (const k of keys) {\r\n            if (res[k] === true) {\r\n              cls += ` ${k}`;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (!this.sortDir) {\r\n      cls += ' sort-active';\r\n    }\r\n    if (this.isFocused) {\r\n      cls += ' active';\r\n    }\r\n    if (this.sortDir === SortDirection.asc) {\r\n      cls += ' sort-asc';\r\n    }\r\n    if (this.sortDir === SortDirection.desc) {\r\n      cls += ' sort-desc';\r\n    }\r\n\r\n    return cls;\r\n  }\r\n\r\n  @HostBinding('style.width.px')\r\n  get width(): number {\r\n    return this.column.width;\r\n  }\r\n\r\n  @HostBinding('style.minWidth.px')\r\n  get minWidth(): number {\r\n    return this.column.minWidth;\r\n  }\r\n\r\n  @HostBinding('style.maxWidth.px')\r\n  get maxWidth(): number {\r\n    return this.column.maxWidth;\r\n  }\r\n\r\n  @HostBinding('style.height')\r\n  get height(): string | number {\r\n    const height = this.rowHeight;\r\n    if (isNaN(height)) {\r\n      return height;\r\n    }\r\n    return height + 'px';\r\n  }\r\n\r\n  sanitizedValue: any;\r\n  value: any;\r\n  sortDir: SortDirection;\r\n  isFocused = false;\r\n  onCheckboxChangeFn = this.onCheckboxChange.bind(this);\r\n  activateFn = this.activate.emit.bind(this.activate);\r\n\r\n  cellContext: any;\r\n\r\n  private _isSelected: boolean;\r\n  private _sorts: any[];\r\n  private _column: TableColumn;\r\n  private _row: any;\r\n  private _group: any;\r\n  private _rowHeight: number;\r\n  private _rowIndex: number;\r\n  private _expanded: boolean;\r\n  private _element: any;\r\n  private _treeStatus: TreeStatus;\r\n\r\n  constructor(element: ElementRef, private cd: ChangeDetectorRef) {\r\n    this.cellContext = {\r\n      onCheckboxChangeFn: this.onCheckboxChangeFn,\r\n      activateFn: this.activateFn,\r\n      row: this.row,\r\n      group: this.group,\r\n      value: this.value,\r\n      column: this.column,\r\n      rowHeight: this.rowHeight,\r\n      isSelected: this.isSelected,\r\n      rowIndex: this.rowIndex,\r\n      treeStatus: this.treeStatus,\r\n      onTreeAction: this.onTreeAction.bind(this)\r\n    };\r\n\r\n    this._element = element.nativeElement;\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    this.checkValueUpdates();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.cellTemplate) {\r\n      this.cellTemplate.clear();\r\n    }\r\n  }\r\n\r\n  checkValueUpdates(): void {\r\n    let value = '';\r\n\r\n    if (!this.row || !this.column) {\r\n      value = '';\r\n    } else {\r\n      const val = this.column.$$valueGetter(this.row, this.column.prop);\r\n      const userPipe: PipeTransform = this.column.pipe;\r\n\r\n      if (userPipe) {\r\n        value = userPipe.transform(val);\r\n      } else if (value !== undefined) {\r\n        value = val;\r\n      }\r\n    }\r\n\r\n    if (this.value !== value) {\r\n      this.value = value;\r\n      this.cellContext.value = value;\r\n      this.sanitizedValue = value !== null && value !== undefined ? this.stripHtml(value) : value;\r\n      this.cd.markForCheck();\r\n    }\r\n  }\r\n\r\n  @HostListener('focus')\r\n  onFocus(): void {\r\n    this.isFocused = true;\r\n  }\r\n\r\n  @HostListener('blur')\r\n  onBlur(): void {\r\n    this.isFocused = false;\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(event: MouseEvent): void {\r\n    this.activate.emit({\r\n      type: 'click',\r\n      event,\r\n      row: this.row,\r\n      group: this.group,\r\n      rowHeight: this.rowHeight,\r\n      column: this.column,\r\n      value: this.value,\r\n      cellElement: this._element\r\n    });\r\n  }\r\n\r\n  @HostListener('dblclick', ['$event'])\r\n  onDblClick(event: MouseEvent): void {\r\n    this.activate.emit({\r\n      type: 'dblclick',\r\n      event,\r\n      row: this.row,\r\n      group: this.group,\r\n      rowHeight: this.rowHeight,\r\n      column: this.column,\r\n      value: this.value,\r\n      cellElement: this._element\r\n    });\r\n  }\r\n\r\n  @HostListener('keydown', ['$event'])\r\n  onKeyDown(event: KeyboardEvent): void {\r\n    const keyCode = event.keyCode;\r\n    const isTargetCell = event.target === this._element;\r\n\r\n    const isAction =\r\n      keyCode === Keys.return ||\r\n      keyCode === Keys.down ||\r\n      keyCode === Keys.up ||\r\n      keyCode === Keys.left ||\r\n      keyCode === Keys.right;\r\n\r\n    if (isAction && isTargetCell) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      this.activate.emit({\r\n        type: 'keydown',\r\n        event,\r\n        row: this.row,\r\n        group: this.group,\r\n        rowHeight: this.rowHeight,\r\n        column: this.column,\r\n        value: this.value,\r\n        cellElement: this._element\r\n      });\r\n    }\r\n  }\r\n\r\n  onCheckboxChange(event: any): void {\r\n    this.activate.emit({\r\n      type: 'checkbox',\r\n      event,\r\n      row: this.row,\r\n      group: this.group,\r\n      rowHeight: this.rowHeight,\r\n      column: this.column,\r\n      value: this.value,\r\n      cellElement: this._element,\r\n      treeStatus: 'collapsed'\r\n    });\r\n  }\r\n\r\n  calcSortDir(sorts: any[]): any {\r\n    if (!sorts) {\r\n      return;\r\n    }\r\n\r\n    const sort = sorts.find((s: any) => {\r\n      return s.prop === this.column.prop;\r\n    });\r\n\r\n    if (sort) {\r\n      return sort.dir;\r\n    }\r\n  }\r\n\r\n  stripHtml(html: string): string {\r\n    if (!html.replace) {\r\n      return html;\r\n    }\r\n    return html.replace(/<\\/?[^>]+(>|$)/g, '');\r\n  }\r\n\r\n  onTreeAction() {\r\n    this.treeAction.emit(this.row);\r\n  }\r\n\r\n  calcLeftMargin(column: any, row: any) {\r\n    const levelIndent = column.treeLevelIndent != null ? column.treeLevelIndent : 50;\r\n    return column.isTreeColumn ? row.level * levelIndent : 0;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'column-toggle-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Column Toggling\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/columns/column-toggle.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div style=\"float:left;width:75%\">\r\n        <ngx-datatable\r\n          class=\"material\"\r\n          [rows]=\"rows\"\r\n          [columnMode]=\"ColumnMode.force\"\r\n          [headerHeight]=\"50\"\r\n          [footerHeight]=\"50\"\r\n          rowHeight=\"auto\"\r\n        >\r\n          <ngx-datatable-column *ngFor=\"let col of columns\" [name]=\"col.name\"> </ngx-datatable-column>\r\n        </ngx-datatable>\r\n      </div>\r\n      <div class=\"selected-column\">\r\n        <h4>Available Columns</h4>\r\n        <ul>\r\n          <li *ngFor=\"let col of allColumns\">\r\n            <input type=\"checkbox\" [id]=\"col.name\" (click)=\"toggle(col)\" [checked]=\"isChecked(col)\" />\r\n            <label [attr.for]=\"col.name\">{{ col.name }}</label>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class ColumnToggleComponent {\r\n  rows = [\r\n    {\r\n      name: 'Claudine Neal',\r\n      gender: 'female',\r\n      company: 'Sealoud'\r\n    },\r\n    {\r\n      name: 'Beryl Rice',\r\n      gender: 'female',\r\n      company: 'Velity'\r\n    }\r\n  ];\r\n\r\n  columns = [{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }];\r\n\r\n  allColumns = [{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  toggle(col) {\r\n    const isChecked = this.isChecked(col);\r\n\r\n    if (isChecked) {\r\n      this.columns = this.columns.filter(c => {\r\n        return c.name !== col.name;\r\n      });\r\n    } else {\r\n      this.columns = [...this.columns, col];\r\n    }\r\n  }\r\n\r\n  isChecked(col) {\r\n    return (\r\n      this.columns.find(c => {\r\n        return c.name === col.name;\r\n      }) !== undefined\r\n    );\r\n  }\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({ selector: '[ngx-datatable-tree-toggle]' })\r\nexport class DataTableColumnCellTreeToggle {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'cell-selection-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Cell Selection\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-cell.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material selection-cell\"\r\n        [rows]=\"rows\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [columns]=\"columns\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        [rowHeight]=\"50\"\r\n        [selected]=\"selected\"\r\n        [selectionType]=\"SelectionType.cell\"\r\n        (select)=\"onSelect($event)\"\r\n        (activate)=\"onActivate($event)\"\r\n      >\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class CellSelectionComponent {\r\n  rows: any[] = [];\r\n  selected: any[] = [];\r\n  columns: any[] = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\r\n\r\n  ColumnMode = ColumnMode;\r\n  SelectionType = SelectionType;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect(event) {\r\n    console.log('Event: select', event, this.selected);\r\n  }\r\n\r\n  onActivate(event) {\r\n    console.log('Event: activate', event);\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, PipeTransform, TemplateRef } from '@angular/core';\r\n\r\nexport interface ISummaryColumn {\r\n  summaryFunc?: (cells: any[]) => any;\r\n  summaryTemplate?: TemplateRef<any>;\r\n\r\n  prop: string;\r\n  pipe?: PipeTransform;\r\n}\r\n\r\nfunction defaultSumFunc(cells: any[]): any {\r\n  const cellsWithValues = cells.filter(cell => !!cell);\r\n\r\n  if (!cellsWithValues.length) {\r\n    return null;\r\n  }\r\n  if (cellsWithValues.some(cell => typeof cell !== 'number')) {\r\n    return null;\r\n  }\r\n\r\n  return cellsWithValues.reduce((res, cell) => res + cell);\r\n}\r\n\r\nfunction noopSumFunc(cells: any[]): void {\r\n  return null;\r\n}\r\n\r\n@Component({\r\n  selector: 'datatable-summary-row',\r\n  template: `\r\n    <datatable-body-row\r\n      *ngIf=\"summaryRow && _internalColumns\"\r\n      tabindex=\"-1\"\r\n      [innerWidth]=\"innerWidth\"\r\n      [offsetX]=\"offsetX\"\r\n      [columns]=\"_internalColumns\"\r\n      [rowHeight]=\"rowHeight\"\r\n      [row]=\"summaryRow\"\r\n      [rowIndex]=\"-1\"\r\n    >\r\n    </datatable-body-row>\r\n  `,\r\n  host: {\r\n    class: 'datatable-summary-row'\r\n  }\r\n})\r\nexport class DataTableSummaryRowComponent implements OnChanges {\r\n  @Input() rows: any[];\r\n  @Input() columns: ISummaryColumn[];\r\n\r\n  @Input() rowHeight: number;\r\n  @Input() offsetX: number;\r\n  @Input() innerWidth: number;\r\n\r\n  _internalColumns: ISummaryColumn[];\r\n  summaryRow: any = {};\r\n\r\n  ngOnChanges() {\r\n    if (!this.columns || !this.rows) {\r\n      return;\r\n    }\r\n    this.updateInternalColumns();\r\n    this.updateValues();\r\n  }\r\n\r\n  private updateInternalColumns() {\r\n    this._internalColumns = this.columns.map(col => ({\r\n      ...col,\r\n      cellTemplate: col.summaryTemplate\r\n    }));\r\n  }\r\n\r\n  private updateValues() {\r\n    this.summaryRow = {};\r\n\r\n    this.columns\r\n      .filter(col => !col.summaryTemplate)\r\n      .forEach(col => {\r\n        const cellsFromSingleColumn = this.rows.map(row => row[col.prop]);\r\n        const sumFunc = this.getSummaryFunction(col);\r\n\r\n        this.summaryRow[col.prop] = col.pipe\r\n          ? col.pipe.transform(sumFunc(cellsFromSingleColumn))\r\n          : sumFunc(cellsFromSingleColumn);\r\n      });\r\n  }\r\n\r\n  private getSummaryFunction(column: ISummaryColumn): (a: any[]) => any {\r\n    if (column.summaryFunc === undefined) {\r\n      return defaultSumFunc;\r\n    } else if (column.summaryFunc === null) {\r\n      return noopSumFunc;\r\n    } else {\r\n      return column.summaryFunc;\r\n    }\r\n  }\r\n}\r\n","import { Directive, Output, EventEmitter, ElementRef, HostBinding, NgZone, OnInit, OnDestroy } from '@angular/core';\r\n\r\n/**\r\n * Visibility Observer Directive\r\n *\r\n * Usage:\r\n *\r\n * \t\t<div\r\n * \t\t\tvisibilityObserver\r\n * \t\t\t(visible)=\"onVisible($event)\">\r\n * \t\t</div>\r\n *\r\n */\r\n@Directive({ selector: '[visibilityObserver]' })\r\nexport class VisibilityDirective implements OnInit, OnDestroy {\r\n  @HostBinding('class.visible')\r\n  isVisible: boolean = false;\r\n\r\n  @Output() visible: EventEmitter<any> = new EventEmitter();\r\n\r\n  timeout: any;\r\n\r\n  constructor(private element: ElementRef, private zone: NgZone) {}\r\n\r\n  ngOnInit(): void {\r\n    this.runCheck();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    clearTimeout(this.timeout);\r\n  }\r\n\r\n  onVisibilityChange(): void {\r\n    // trigger zone recalc for columns\r\n    this.zone.run(() => {\r\n      this.isVisible = true;\r\n      this.visible.emit(true);\r\n    });\r\n  }\r\n\r\n  runCheck(): void {\r\n    const check = () => {\r\n      // https://davidwalsh.name/offsetheight-visibility\r\n      const { offsetHeight, offsetWidth } = this.element.nativeElement;\r\n\r\n      if (offsetHeight && offsetWidth) {\r\n        clearTimeout(this.timeout);\r\n        this.onVisibilityChange();\r\n      } else {\r\n        clearTimeout(this.timeout);\r\n        this.zone.runOutsideAngular(() => {\r\n          this.timeout = setTimeout(() => check(), 50);\r\n        });\r\n      }\r\n    };\r\n\r\n    this.timeout = setTimeout(() => check());\r\n  }\r\n}\r\n","import { Component, Output, EventEmitter, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { DatatableFooterDirective } from './footer.directive';\r\n@Component({\r\n  selector: 'datatable-footer',\r\n  template: `\r\n    <div\r\n      class=\"datatable-footer-inner\"\r\n      [ngClass]=\"{ 'selected-count': selectedMessage }\"\r\n      [style.height.px]=\"footerHeight\"\r\n    >\r\n      <ng-template\r\n        *ngIf=\"footerTemplate\"\r\n        [ngTemplateOutlet]=\"footerTemplate.template\"\r\n        [ngTemplateOutletContext]=\"{\r\n          rowCount: rowCount,\r\n          pageSize: pageSize,\r\n          selectedCount: selectedCount,\r\n          curPage: curPage,\r\n          offset: offset\r\n        }\"\r\n      >\r\n      </ng-template>\r\n      <div class=\"page-count\" *ngIf=\"!footerTemplate\">\r\n        <span *ngIf=\"selectedMessage\"> {{ selectedCount?.toLocaleString() }} {{ selectedMessage }} / </span>\r\n        {{ rowCount?.toLocaleString() }} {{ totalMessage }}\r\n      </div>\r\n      <datatable-pager\r\n        *ngIf=\"!footerTemplate\"\r\n        [pagerLeftArrowIcon]=\"pagerLeftArrowIcon\"\r\n        [pagerRightArrowIcon]=\"pagerRightArrowIcon\"\r\n        [pagerPreviousIcon]=\"pagerPreviousIcon\"\r\n        [pagerNextIcon]=\"pagerNextIcon\"\r\n        [page]=\"curPage\"\r\n        [size]=\"pageSize\"\r\n        [count]=\"rowCount\"\r\n        [hidden]=\"!isVisible\"\r\n        (change)=\"page.emit($event)\"\r\n      >\r\n      </datatable-pager>\r\n    </div>\r\n  `,\r\n  host: {\r\n    class: 'datatable-footer'\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DataTableFooterComponent {\r\n  @Input() footerHeight: number;\r\n  @Input() rowCount: number;\r\n  @Input() pageSize: number;\r\n  @Input() offset: number;\r\n  @Input() pagerLeftArrowIcon: string;\r\n  @Input() pagerRightArrowIcon: string;\r\n  @Input() pagerPreviousIcon: string;\r\n  @Input() pagerNextIcon: string;\r\n  @Input() totalMessage: string;\r\n  @Input() footerTemplate: DatatableFooterDirective;\r\n\r\n  @Input() selectedCount: number = 0;\r\n  @Input() selectedMessage: string | boolean;\r\n\r\n  @Output() page: EventEmitter<any> = new EventEmitter();\r\n\r\n  get isVisible(): boolean {\r\n    return this.rowCount / this.pageSize > 1;\r\n  }\r\n\r\n  get curPage(): number {\r\n    return this.offset + 1;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MockServerResultsService } from './mock-server-results-service';\r\nimport { CorporateEmployee } from './model/corporate-employee';\r\nimport { Page } from './model/page';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'server-paging-demo',\r\n  providers: [MockServerResultsService],\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Server-side Paging\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/paging/paging-server.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows\"\r\n        [columns]=\"[{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }]\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n        [externalPaging]=\"true\"\r\n        [count]=\"page.totalElements\"\r\n        [offset]=\"page.pageNumber\"\r\n        [limit]=\"page.size\"\r\n        (page)=\"setPage($event)\"\r\n      >\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class ServerPagingComponent {\r\n  page = new Page();\r\n  rows = new Array<CorporateEmployee>();\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor(private serverResultsService: MockServerResultsService) {\r\n    this.page.pageNumber = 0;\r\n    this.page.size = 20;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setPage({ offset: 0 });\r\n  }\r\n\r\n  /**\r\n   * Populate the table with new data based on the page number\r\n   * @param page The page to select\r\n   */\r\n  setPage(pageInfo) {\r\n    this.page.pageNumber = pageInfo.offset;\r\n    this.serverResultsService.getResults(this.page).subscribe(pagedData => {\r\n      this.page = pagedData.page;\r\n      this.rows = pagedData.data;\r\n    });\r\n  }\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({ selector: '[ngx-datatable-header-template]' })\r\nexport class DataTableColumnHeaderDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  HostBinding,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  OnDestroy\n} from '@angular/core';\nimport { columnsByPin, columnGroupWidths, columnsByPinArr } from '../../utils/column';\nimport { SortType } from '../../types/sort.type';\nimport { SelectionType } from '../../types/selection.type';\nimport { DataTableColumnDirective } from '../columns/column.directive';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-header',\n  template: `\n    <div\n      role=\"row\"\n      orderable\n      (reorder)=\"onColumnReordered($event)\"\n      (targetChanged)=\"onTargetChanged($event)\"\n      [style.width.px]=\"_columnGroupWidths.total\"\n      class=\"datatable-header-inner\"\n    >\n      <div\n        *ngFor=\"let colGroup of _columnsByPin; trackBy: trackByGroups\"\n        [class]=\"'datatable-row-' + colGroup.type\"\n        [ngStyle]=\"_styleByGroup[colGroup.type]\"\n      >\n        <datatable-header-cell\n          role=\"columnheader\"\n          *ngFor=\"let column of colGroup.columns; trackBy: columnTrackingFn\"\n          resizeable\n          [resizeEnabled]=\"column.resizeable\"\n          (resize)=\"onColumnResized($event, column)\"\n          long-press\n          [pressModel]=\"column\"\n          [pressEnabled]=\"reorderable && column.draggable\"\n          (longPressStart)=\"onLongPressStart($event)\"\n          (longPressEnd)=\"onLongPressEnd($event)\"\n          draggable\n          [dragX]=\"reorderable && column.draggable && column.dragging\"\n          [dragY]=\"false\"\n          [dragModel]=\"column\"\n          [dragEventTarget]=\"dragEventTarget\"\n          [headerHeight]=\"headerHeight\"\n          [isTarget]=\"column.isTarget\"\n          [targetMarkerTemplate]=\"targetMarkerTemplate\"\n          [targetMarkerContext]=\"column.targetMarkerContext\"\n          [column]=\"column\"\n          [sortType]=\"sortType\"\n          [sorts]=\"sorts\"\n          [selectionType]=\"selectionType\"\n          [sortAscendingIcon]=\"sortAscendingIcon\"\n          [sortDescendingIcon]=\"sortDescendingIcon\"\n          [sortUnsetIcon]=\"sortUnsetIcon\"\n          [allRowsSelected]=\"allRowsSelected\"\n          (sort)=\"onSort($event)\"\n          (select)=\"select.emit($event)\"\n          (columnContextmenu)=\"columnContextmenu.emit($event)\"\n        >\n        </datatable-header-cell>\n      </div>\n    </div>\n  `,\n  host: {\n    class: 'datatable-header'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableHeaderComponent implements OnDestroy {\n  @Input() sortAscendingIcon: any;\n  @Input() sortDescendingIcon: any;\n  @Input() sortUnsetIcon: any;\n  @Input() scrollbarH: boolean;\n  @Input() dealsWithGroup: boolean;\n  @Input() targetMarkerTemplate: any;\n\n  targetMarkerContext: any;\n\n  @Input() set innerWidth(val: number) {\n    this._innerWidth = val;\n    setTimeout(() => {\n      if (this._columns) {\n        const colByPin = columnsByPin(this._columns);\n        this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n        this.setStylesByGroup();\n      }\n    });\n  }\n\n  get innerWidth(): number {\n    return this._innerWidth;\n  }\n\n  @Input() sorts: any[];\n  @Input() sortType: SortType;\n  @Input() allRowsSelected: boolean;\n  @Input() selectionType: SelectionType;\n  @Input() reorderable: boolean;\n\n  dragEventTarget: any;\n\n  @HostBinding('style.height')\n  @Input()\n  set headerHeight(val: any) {\n    if (val !== 'auto') {\n      this._headerHeight = `${val}px`;\n    } else {\n      this._headerHeight = val;\n    }\n  }\n\n  get headerHeight(): any {\n    return this._headerHeight;\n  }\n\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n\n    const colsByPin = columnsByPin(val);\n    this._columnsByPin = columnsByPinArr(val);\n    setTimeout(() => {\n      this._columnGroupWidths = columnGroupWidths(colsByPin, val);\n      this.setStylesByGroup();\n    });\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input()\n  set offsetX(val: number) {\n    this._offsetX = val;\n    this.setStylesByGroup();\n  }\n  get offsetX() {\n    return this._offsetX;\n  }\n\n  @Output() sort: EventEmitter<any> = new EventEmitter();\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\n  @Output() resize: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() columnContextmenu = new EventEmitter<{ event: MouseEvent; column: any }>(false);\n\n  _columnsByPin: any;\n  _columnGroupWidths: any = {\n    total: 100\n  };\n  _innerWidth: number;\n  _offsetX: number;\n  _columns: any[];\n  _headerHeight: string;\n  _styleByGroup: { [prop: string]: {} } = {\n    left: {},\n    center: {},\n    right: {}\n  };\n\n  private destroyed = false;\n\n  constructor(private cd: ChangeDetectorRef) {}\n\n  ngOnDestroy(): void {\n    this.destroyed = true;\n  }\n\n  onLongPressStart({ event, model }: { event: any; model: any }) {\n    model.dragging = true;\n    this.dragEventTarget = event;\n  }\n\n  onLongPressEnd({ event, model }: { event: any; model: any }) {\n    this.dragEventTarget = event;\n\n    // delay resetting so sort can be\n    // prevented if we were dragging\n    setTimeout(() => {\n      // datatable component creates copies from columns on reorder\n      // set dragging to false on new objects\n      const column = this._columns.find(c => c.$$id === model.$$id);\n      if (column) {\n        column.dragging = false;\n      }\n    }, 5);\n  }\n\n  @HostBinding('style.width')\n  get headerWidth(): string {\n    if (this.scrollbarH) {\n      return this.innerWidth + 'px';\n    }\n\n    return '100%';\n  }\n\n  trackByGroups(index: number, colGroup: any): any {\n    return colGroup.type;\n  }\n\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  onColumnResized(width: number, column: DataTableColumnDirective): void {\n    if (width <= column.minWidth) {\n      width = column.minWidth;\n    } else if (width >= column.maxWidth) {\n      width = column.maxWidth;\n    }\n\n    this.resize.emit({\n      column,\n      prevValue: column.width,\n      newValue: width\n    });\n  }\n\n  onColumnReordered({ prevIndex, newIndex, model }: any): void {\n    const column = this.getColumn(newIndex);\n    column.isTarget = false;\n    column.targetMarkerContext = undefined;\n    this.reorder.emit({\n      column: model,\n      prevValue: prevIndex,\n      newValue: newIndex\n    });\n  }\n\n  onTargetChanged({ prevIndex, newIndex, initialIndex }: any): void {\n    if (prevIndex || prevIndex === 0) {\n      const oldColumn = this.getColumn(prevIndex);\n      oldColumn.isTarget = false;\n      oldColumn.targetMarkerContext = undefined;\n    }\n    if (newIndex || newIndex === 0) {\n      const newColumn = this.getColumn(newIndex);\n      newColumn.isTarget = true;\n\n      if (initialIndex !== newIndex) {\n        newColumn.targetMarkerContext = {\n          class: 'targetMarker '.concat(initialIndex > newIndex ? 'dragFromRight' : 'dragFromLeft')\n        };\n      }\n    }\n  }\n\n  getColumn(index: number): any {\n    const leftColumnCount = this._columnsByPin[0].columns.length;\n    if (index < leftColumnCount) {\n      return this._columnsByPin[0].columns[index];\n    }\n\n    const centerColumnCount = this._columnsByPin[1].columns.length;\n    if (index < leftColumnCount + centerColumnCount) {\n      return this._columnsByPin[1].columns[index - leftColumnCount];\n    }\n\n    return this._columnsByPin[2].columns[index - leftColumnCount - centerColumnCount];\n  }\n\n  onSort({ column, prevValue, newValue }: any): void {\n    // if we are dragging don't sort!\n    if (column.dragging) {\n      return;\n    }\n\n    const sorts = this.calcNewSorts(column, prevValue, newValue);\n    this.sort.emit({\n      sorts,\n      column,\n      prevValue,\n      newValue\n    });\n  }\n\n  calcNewSorts(column: any, prevValue: number, newValue: number): any[] {\n    let idx = 0;\n\n    if (!this.sorts) {\n      this.sorts = [];\n    }\n\n    const sorts = this.sorts.map((s, i) => {\n      s = { ...s };\n      if (s.prop === column.prop) {\n        idx = i;\n      }\n      return s;\n    });\n\n    if (newValue === undefined) {\n      sorts.splice(idx, 1);\n    } else if (prevValue) {\n      sorts[idx].dir = newValue;\n    } else {\n      if (this.sortType === SortType.single) {\n        sorts.splice(0, this.sorts.length);\n      }\n\n      sorts.push({ dir: newValue, prop: column.prop });\n    }\n\n    return sorts;\n  }\n\n  setStylesByGroup() {\n    this._styleByGroup.left = this.calcStylesByGroup('left');\n    this._styleByGroup.center = this.calcStylesByGroup('center');\n    this._styleByGroup.right = this.calcStylesByGroup('right');\n    if (!this.destroyed) {\n      this.cd.detectChanges();\n    }\n  }\n\n  calcStylesByGroup(group: string): any {\n    const widths = this._columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'center') {\n      translateXY(styles, offsetX * -1, 0);\n    } else if (group === 'right') {\n      const totalDiff = widths.total - this.innerWidth;\n      const offset = totalDiff * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n}\n","import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'responsive-demo',\r\n  styles: [\r\n    `\r\n      @media screen and (max-width: 800px) {\r\n        .desktop-hidden {\r\n          display: initial;\r\n        }\r\n        .mobile-hidden {\r\n          display: none;\r\n        }\r\n      }\r\n      @media screen and (min-width: 800px) {\r\n        .desktop-hidden {\r\n          display: none;\r\n        }\r\n        .mobile-hidden {\r\n          display: initial;\r\n        }\r\n      }\r\n    `\r\n  ],\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Responsive Demo\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/responsive.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        #myTable\r\n        class=\"material expandable\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        [rowHeight]=\"50\"\r\n        [scrollbarV]=\"true\"\r\n        [rows]=\"rows\"\r\n        (page)=\"onPage($event)\"\r\n      >\r\n        <!-- Row Detail Template -->\r\n        <ngx-datatable-row-detail [rowHeight]=\"50\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\r\n          <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\r\n            <div style=\"padding-left:60px; font-size:14px\">\r\n              <div>{{ row.gender }}, {{ row.age }}</div>\r\n            </div>\r\n          </ng-template>\r\n        </ngx-datatable-row-detail>\r\n\r\n        <!-- Column Templates -->\r\n        <ngx-datatable-column\r\n          [width]=\"50\"\r\n          [resizeable]=\"false\"\r\n          [sortable]=\"false\"\r\n          [draggable]=\"false\"\r\n          [canAutoResize]=\"false\"\r\n        >\r\n          <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\r\n            <a\r\n              href=\"#\"\r\n              [class.datatable-icon-right]=\"!expanded\"\r\n              [class.datatable-icon-down]=\"expanded\"\r\n              title=\"Expand/Collapse Row\"\r\n              (click)=\"toggleExpandRow(row)\"\r\n              class=\"desktop-hidden\"\r\n            >\r\n            </a>\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n\r\n        <ngx-datatable-column name=\"Name\" [flexGrow]=\"3\" [minWidth]=\"200\">\r\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n            {{ value }}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n\r\n        <ngx-datatable-column name=\"Gender\" [flexGrow]=\"1\">\r\n          <ng-template let-column=\"column\" let-sort=\"sortFn\" ngx-datatable-header-template>\r\n            <span class=\"mobile-hidden\">{{ column.name }}</span>\r\n          </ng-template>\r\n\r\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n            <span class=\"mobile-hidden\">{{ value }}</span>\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n\r\n        <ngx-datatable-column name=\"Age\" [flexGrow]=\"1\">\r\n          <ng-template let-column=\"column\" let-sort=\"sortFn\" ngx-datatable-header-template>\r\n            <span class=\"mobile-hidden\">{{ column.name }}</span>\r\n          </ng-template>\r\n\r\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n            <span class=\"mobile-hidden\">{{ value }}</span>\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n\r\n    <div style=\"margin: 50px;\">\r\n      This demo combines the features used in the <i>Row Detail</i> Rows demo, <i>Flex</i> Column demo, and the\r\n      <i>Inline</i> Templates demo. When your browser is at 800px, the gender and age columns will be hidden and will\r\n      appear in the row detail view.\r\n    </div>\r\n  `,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ResponsiveComponent {\r\n  @ViewChild('myTable') table: any;\r\n\r\n  rows: any[] = [];\r\n  expanded: any = {};\r\n  timeout: any;\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  onPage(event) {\r\n    clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      console.log('paged!', event);\r\n    }, 100);\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'comparator-sorting-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Custom Sorting Comparator\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/sorting/sorting-comparator.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows\"\r\n        [columns]=\"columns\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n      >\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class SortingComparatorComponent {\r\n  rows = [];\r\n\r\n  columns = [\r\n    { name: 'Company', comparator: this.companyComparator.bind(this) },\r\n    { name: 'Name', sortable: false },\r\n    { name: 'Gender', sortable: false }\r\n  ];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      const data = JSON.parse(req.response);\r\n      cb(data.splice(0, 20));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  companyComparator(propA, propB) {\r\n    console.log('Sorting Comparator', propA, propB);\r\n\r\n    // Just a simple sort function comparisoins\r\n    if (propA.toLowerCase() < propB.toLowerCase()) {\r\n      return -1;\r\n    }\r\n    if (propA.toLowerCase() > propB.toLowerCase()) {\r\n      return 1;\r\n    }\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'multidisable-selection-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Selection Callback to Disable Selections\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-disabled.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div style=\"float:left;width:75%\">\r\n        <ngx-datatable\r\n          class=\"material\"\r\n          [rows]=\"rows\"\r\n          [columnMode]=\"ColumnMode.force\"\r\n          [columns]=\"columns\"\r\n          [headerHeight]=\"50\"\r\n          [footerHeight]=\"50\"\r\n          rowHeight=\"auto\"\r\n          [limit]=\"5\"\r\n          [selectCheck]=\"checkSelectable\"\r\n          [selected]=\"selected\"\r\n          [selectionType]=\"SelectionType.multi\"\r\n          (activate)=\"onActivate($event)\"\r\n          (select)=\"onSelect($event)\"\r\n        >\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class=\"selected-column\">\r\n        <h4>Selections</h4>\r\n        <ul>\r\n          <li *ngFor=\"let sel of selected\">\r\n            {{ sel.name }}\r\n          </li>\r\n          <li *ngIf=\"!selected.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class MultiDisableSelectionComponent {\r\n  rows = [];\r\n\r\n  selected = [];\r\n\r\n  columns: any[] = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\r\n\r\n  ColumnMode = ColumnMode;\r\n  SelectionType = SelectionType;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }) {\r\n    console.log('Select Event', selected, this.selected);\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n  }\r\n\r\n  onActivate(event) {\r\n    console.log('Activate Event', event);\r\n  }\r\n\r\n  checkSelectable(event) {\r\n    console.log('Checking if selectable', event);\r\n    return event.name !== 'Ethel Price';\r\n  }\r\n}\r\n","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { LocationStrategy, HashLocationStrategy, Location } from '@angular/common';\r\nimport packageInfo from 'projects/swimlane/ngx-datatable/package.json';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  styleUrls: [\r\n    './app.component.scss',\r\n    '../../projects/swimlane/ngx-datatable/src/lib/themes/material.scss',\r\n    '../../projects/swimlane/ngx-datatable/src/lib/themes/dark.scss',\r\n    '../../projects/swimlane/ngx-datatable/src/lib/themes/bootstrap.scss'\r\n  ],\r\n  providers: [\r\n    Location,\r\n    {\r\n      provide: LocationStrategy,\r\n      useClass: HashLocationStrategy\r\n    }\r\n  ]\r\n})\r\nexport class AppComponent {\r\n  state: any;\r\n\r\n  version = packageInfo.version;\r\n\r\n  constructor(location: Location) {\r\n    this.state = location.path(true);\r\n  }\r\n}\r\n","<div [class.dark]=\"state === 'dark'\">\r\n  <nav>\r\n    <h3>\r\n      ngx-datatable <small>({{ version }})</small>\r\n    </h3>\r\n    <ul class=\"main-ul\">\r\n      <li>\r\n        <h4>Documentation</h4>\r\n        <ul>\r\n          <li>\r\n            <a href=\"https://swimlane.gitbooks.io/ngx-datatable/content/\" target=\"_black\">Online</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://www.gitbook.com/download/pdf/book/swimlane/ngx-datatable\" target=\"_black\">PDF</a>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <h4>Basic</h4>\r\n        <ul>\r\n          <li>\r\n            <a href=\"#virtual-scroll\" (click)=\"state = 'virtual-scroll'\">10k Rows</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#full-screen\" (click)=\"state = 'full-screen'\">Full Screen</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#inline-edit\" (click)=\"state = 'inline-edit'\">Inline Editing</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#horz-vert-scrolling\" (click)=\"state = 'horz-vert-scrolling'\">Horz/Vert Scrolling</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#multiple-tables\" (click)=\"state = 'multiple-tables'\">Multiple Tables</a>\r\n          </li>\r\n          <li><a href=\"#filter\" (click)=\"state = 'filter'\">Filtering</a></li>\r\n          <li>\r\n            <a href=\"#hidden\" (click)=\"state = 'hidden'\">Hidden On Load</a>\r\n          </li>\r\n          <li><a href=\"#live\" (click)=\"state = 'live'\">Live Data</a></li>\r\n          <li><a href=\"#rx\" (click)=\"state = 'rx'\">RxJS</a></li>\r\n          <li>\r\n            <a href=\"#contextmenu\" (click)=\"state = 'contextmenu'\">Context Menu</a>\r\n          </li>\r\n          <li><a href=\"#css\" (click)=\"state = 'css'\">CSS Classes</a></li>\r\n          <li>\r\n            <a href=\"#footer\" (click)=\"state = 'footer'\">Footer Template</a>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <h4>Themes</h4>\r\n        <ul>\r\n          <li><a href=\"#dark\" (click)=\"state = 'dark'\">Dark theme</a></li>\r\n          <li>\r\n            <a href=\"#bootstrap\" (click)=\"state = 'bootstrap'\">Bootstrap theme</a>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <h4>Tree</h4>\r\n        <ul>\r\n          <li>\r\n            <a href=\"#fullscreen-tree\" (click)=\"state = 'fullscreen-tree'\">Full screen Tree</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#client-tree\" (click)=\"state = 'client-tree'\">Client Side Tree</a>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <h4>Rows</h4>\r\n        <ul>\r\n          <li>\r\n            <a href=\"#row-grouping\" (click)=\"state = 'row-grouping'\">Row Grouping</a>\r\n          </li>\r\n          <li><a href=\"#\" (click)=\"state = ''\">Fluid Row Height</a></li>\r\n          <li>\r\n            <a href=\"#basic-fixed\" (click)=\"state = 'basic-fixed'\">Fixed Row Height</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#dynamic\" (click)=\"state = 'dynamic'\">Dynamic Row Height</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#row-details\" (click)=\"state = 'row-details'\">Row Detail</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#responsive\" (click)=\"state = 'responsive'\">Responsive</a>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <h4>Paging</h4>\r\n        <ul>\r\n          <li>\r\n            <a href=\"#client-paging\" (click)=\"state = 'client-paging'\">Client-side</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#server-paging\" (click)=\"state = 'server-paging'\">Server-side</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#paging-scrolling-novirtualization\" (click)=\"state = 'paging-scrolling-novirtualization'\"\r\n              >Scrolling no virtual</a\r\n            >\r\n          </li>\r\n          <li>\r\n            <a href=\"#server-scrolling\" (click)=\"state = 'server-scrolling'\">Scrolling server-side</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#virtual-paging\" (click)=\"state = 'virtual-paging'\">Virtual server-side</a>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <h4>Sorting</h4>\r\n        <ul>\r\n          <li>\r\n            <a href=\"#client-sorting\" (click)=\"state = 'client-sorting'\">Client-side</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#default-sorting\" (click)=\"state = 'default-sorting'\">Default sort</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#server-sorting\" (click)=\"state = 'server-sorting'\">Server-side</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#comparator-sorting\" (click)=\"state = 'comparator-sorting'\">Comparator</a>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <h4>Selection</h4>\r\n        <ul>\r\n          <li>\r\n            <a href=\"#cell-selection\" (click)=\"state = 'cell-selection'\">Cell</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#single-selection\" (click)=\"state = 'single-selection'\">Single Row</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#multi-selection\" (click)=\"state = 'multi-selection'\">Multi Row</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#multi-click-selection\" (click)=\"state = 'multi-click-selection'\">Multi Click Row</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#multidisable-selection\" (click)=\"state = 'multidisable-selection'\">Disable Callback</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#chkbox-selection\" (click)=\"state = 'chkbox-selection'\">Checkbox</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#chkbox-selection-template\" (click)=\"state = 'chkbox-selection-template'\">Custom Checkbox</a>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <h4>Templates</h4>\r\n        <ul>\r\n          <li><a href=\"#inline\" (click)=\"state = 'inline'\">Inline</a></li>\r\n          <li>\r\n            <a href=\"#templateref\" (click)=\"state = 'templateref'\">TemplateRef</a>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <h4>Column</h4>\r\n        <ul>\r\n          <li><a href=\"#flex\" (click)=\"state = 'flex'\">Flex</a></li>\r\n          <li><a href=\"#toggle\" (click)=\"state = 'toggle'\">Toggling</a></li>\r\n          <li><a href=\"#fixed\" (click)=\"state = 'fixed'\">Fixed</a></li>\r\n          <li><a href=\"#force\" (click)=\"state = 'force'\">Force</a></li>\r\n          <li><a href=\"#pinning\" (click)=\"state = 'pinning'\">Pinning</a></li>\r\n          <li><a href=\"#reorder\" (click)=\"state = 'reorder'\">Reorder</a></li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <h4>Summary Row</h4>\r\n        <ul>\r\n          <li>\r\n            <a href=\"#simple-summary\" (click)=\"state = 'simple-summary'\">Simple</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#custom-template-summary\" (click)=\"state = 'custom-template-summary'\">Custom Template</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#paging-summary\" (click)=\"state = 'paging-summary'\">Server-side paging</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#inline-html-summary\" (click)=\"state = 'inline-html-summary'\">Inline HTML</a>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n  <content>\r\n    <!-- Basic -->\r\n    <basic-auto-demo *ngIf=\"!state\"></basic-auto-demo>\r\n    <basic-fixed-demo *ngIf=\"state === 'basic-fixed'\"></basic-fixed-demo>\r\n    <full-screen-demo *ngIf=\"state === 'full-screen'\"></full-screen-demo>\r\n    <inline-edit-demo *ngIf=\"state === 'inline-edit'\"></inline-edit-demo>\r\n    <virtual-scroll-demo *ngIf=\"state === 'virtual-scroll'\"></virtual-scroll-demo>\r\n    <horz-vert-scrolling-demo *ngIf=\"state === 'horz-vert-scrolling'\"></horz-vert-scrolling-demo>\r\n    <multiple-tables-demo *ngIf=\"state === 'multiple-tables'\"></multiple-tables-demo>\r\n    <row-details-demo *ngIf=\"state === 'row-details'\"></row-details-demo>\r\n    <responsive-demo *ngIf=\"state === 'responsive'\"></responsive-demo>\r\n    <filter-demo *ngIf=\"state === 'filter'\"></filter-demo>\r\n    <tabs-demo *ngIf=\"state === 'hidden'\"></tabs-demo>\r\n    <live-data-demo *ngIf=\"state === 'live'\"></live-data-demo>\r\n    <rx-demo *ngIf=\"state === 'rx'\"></rx-demo>\r\n    <contextmenu-demo *ngIf=\"state === 'contextmenu'\"></contextmenu-demo>\r\n    <row-css-demo *ngIf=\"state === 'css'\"></row-css-demo>\r\n    <dynamic-height-demo *ngIf=\"state === 'dynamic'\"></dynamic-height-demo>\r\n    <footer-demo *ngIf=\"state === 'footer'\"></footer-demo>\r\n\r\n    <!-- Themes -->\r\n    <basic-dark-theme-demo *ngIf=\"state === 'dark'\"></basic-dark-theme-demo>\r\n    <basic-bootstrap-theme-demo *ngIf=\"state === 'bootstrap'\"></basic-bootstrap-theme-demo>\r\n\r\n    <!-- Tree -->\r\n    <full-screen-tree-demo *ngIf=\"state === 'fullscreen-tree'\"></full-screen-tree-demo>\r\n    <client-side-tree-demo *ngIf=\"state === 'client-tree'\"></client-side-tree-demo>\r\n\r\n    <!-- Paging -->\r\n    <row-grouping-demo *ngIf=\"state === 'row-grouping'\"></row-grouping-demo>\r\n    <client-paging-demo *ngIf=\"state === 'client-paging'\"></client-paging-demo>\r\n    <server-paging-demo *ngIf=\"state === 'server-paging'\"></server-paging-demo>\r\n    <paging-scrolling-novirtualization-demo\r\n      *ngIf=\"state === 'paging-scrolling-novirtualization'\"\r\n    ></paging-scrolling-novirtualization-demo>\r\n    <server-scrolling-demo *ngIf=\"state === 'server-scrolling'\"></server-scrolling-demo>\r\n    <virtual-paging-demo *ngIf=\"state === 'virtual-paging'\"></virtual-paging-demo>\r\n\r\n    <!-- Sorting -->\r\n    <client-sorting-demo *ngIf=\"state === 'client-sorting'\"></client-sorting-demo>\r\n    <default-sorting-demo *ngIf=\"state === 'default-sorting'\"></default-sorting-demo>\r\n    <server-sorting-demo *ngIf=\"state === 'server-sorting'\"></server-sorting-demo>\r\n    <comparator-sorting-demo *ngIf=\"state === 'comparator-sorting'\"></comparator-sorting-demo>\r\n\r\n    <!-- Selection -->\r\n    <cell-selection-demo *ngIf=\"state === 'cell-selection'\"></cell-selection-demo>\r\n    <single-selection-demo *ngIf=\"state === 'single-selection'\"></single-selection-demo>\r\n    <multi-selection-demo *ngIf=\"state === 'multi-selection'\"></multi-selection-demo>\r\n    <multidisable-selection-demo *ngIf=\"state === 'multidisable-selection'\"></multidisable-selection-demo>\r\n    <chkbox-selection-demo *ngIf=\"state === 'chkbox-selection'\"></chkbox-selection-demo>\r\n    <chkbox-selection-template-demo *ngIf=\"state === 'chkbox-selection-template'\"></chkbox-selection-template-demo>\r\n    <multi-click-selection-demo *ngIf=\"state === 'multi-click-selection'\"></multi-click-selection-demo>\r\n\r\n    <!-- Templates -->\r\n    <template-ref-demo *ngIf=\"state === 'templateref'\"></template-ref-demo>\r\n    <inline-templates-demo *ngIf=\"state === 'inline'\"></inline-templates-demo>\r\n\r\n    <!-- Columns -->\r\n    <column-flex-demo *ngIf=\"state === 'flex'\"></column-flex-demo>\r\n    <column-toggle-demo *ngIf=\"state === 'toggle'\"></column-toggle-demo>\r\n    <column-standard-demo *ngIf=\"state === 'fixed'\"></column-standard-demo>\r\n    <column-force-demo *ngIf=\"state === 'force'\"></column-force-demo>\r\n    <column-pinning-demo *ngIf=\"state === 'pinning'\"></column-pinning-demo>\r\n    <column-reorder-demo *ngIf=\"state === 'reorder'\"></column-reorder-demo>\r\n\r\n    <!-- Summary row -->\r\n    <summary-row-simple-demo *ngIf=\"state === 'simple-summary'\"></summary-row-simple-demo>\r\n    <summary-row-custom-template-demo *ngIf=\"state === 'custom-template-summary'\"> </summary-row-custom-template-demo>\r\n    <summary-row-server-paging-demo *ngIf=\"state === 'paging-summary'\"> </summary-row-server-paging-demo>\r\n    <summary-row-inline-html *ngIf=\"state === 'inline-html-summary'\"></summary-row-inline-html>\r\n  </content>\r\n</div>\r\n","import { camelCase } from './camel-case';\r\n\r\nconst cache = {};\r\nconst testStyle = typeof document !== 'undefined' ? document.createElement('div').style : undefined;\r\n\r\n// Get Prefix\r\n// http://davidwalsh.name/vendor-prefix\r\nconst prefix = (function () {\r\n  const styles = typeof window !== 'undefined' ? window.getComputedStyle(document.documentElement, '') : undefined;\r\n  const match =\r\n    typeof styles !== 'undefined'\r\n      ? Array.prototype.slice\r\n          .call(styles)\r\n          .join('')\r\n          .match(/-(moz|webkit|ms)-/)\r\n      : null;\r\n  const pre = match !== null ? match[1] : undefined;\r\n  // tslint:disable-next-line: tsr-detect-non-literal-regexp\r\n  const dom = typeof pre !== 'undefined' ? 'WebKit|Moz|MS|O'.match(new RegExp('(' + pre + ')', 'i'))[1] : undefined;\r\n\r\n  return dom\r\n    ? {\r\n        dom,\r\n        lowercase: pre,\r\n        css: `-${pre}-`,\r\n        js: pre[0].toUpperCase() + pre.substr(1)\r\n      }\r\n    : undefined;\r\n})();\r\n\r\nexport function getVendorPrefixedName(property: string) {\r\n  const name = camelCase(property);\r\n\r\n  if (!cache[name]) {\r\n    if (prefix !== undefined && testStyle[prefix.css + property] !== undefined) {\r\n      cache[name] = prefix.css + property;\r\n    } else if (testStyle[property] !== undefined) {\r\n      cache[name] = property;\r\n    }\r\n  }\r\n\r\n  return cache[name];\r\n}\r\n","import { Input, Output, EventEmitter, Directive, TemplateRef, ContentChild } from '@angular/core';\r\nimport { DatatableRowDetailTemplateDirective } from './row-detail-template.directive';\r\n\r\n@Directive({ selector: 'ngx-datatable-row-detail' })\r\nexport class DatatableRowDetailDirective {\r\n  /**\r\n   * The detail row height is required especially\r\n   * when virtual scroll is enabled.\r\n   */\r\n  @Input() rowHeight: number | ((row?: any, index?: number) => number) = 0;\r\n\r\n  @Input('template')\r\n  _templateInput: TemplateRef<any>;\r\n\r\n  @ContentChild(DatatableRowDetailTemplateDirective, { read: TemplateRef, static: true })\r\n  _templateQuery: TemplateRef<any>;\r\n\r\n  get template(): TemplateRef<any> {\r\n    return this._templateInput || this._templateQuery;\r\n  }\r\n\r\n  /**\r\n   * Row detail row visbility was toggled.\r\n   */\r\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Toggle the expansion of the row\r\n   */\r\n  toggleExpandRow(row: any): void {\r\n    this.toggle.emit({\r\n      type: 'row',\r\n      value: row\r\n    });\r\n  }\r\n\r\n  /**\r\n   * API method to expand all the rows.\r\n   */\r\n  expandAllRows(): void {\r\n    this.toggle.emit({\r\n      type: 'all',\r\n      value: true\r\n    });\r\n  }\r\n\r\n  /**\r\n   * API method to collapse all the rows.\r\n   */\r\n  collapseAllRows(): void {\r\n    this.toggle.emit({\r\n      type: 'all',\r\n      value: false\r\n    });\r\n  }\r\n}\r\n","import { Page } from './page';\r\n\r\n/**\r\n * An array of data with an associated page object used for paging\r\n */\r\nexport class PagedData<T> {\r\n  data = new Array<T>();\r\n  page = new Page();\r\n}\r\n","import { Component, ChangeDetectorRef } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'full-screen-tree-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Full Screen\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/tree/fullscreen.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material fullscreen\"\r\n        style=\"top: 52px\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"0\"\r\n        [rowHeight]=\"50\"\r\n        [scrollbarV]=\"true\"\r\n        [scrollbarH]=\"true\"\r\n        [rows]=\"rows\"\r\n        [treeFromRelation]=\"'parentId'\"\r\n        [treeToRelation]=\"'id'\"\r\n        (treeAction)=\"onTreeAction($event)\"\r\n      >\r\n        <ngx-datatable-column name=\"Id\" [width]=\"80\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Name\" [isTreeColumn]=\"true\" [width]=\"300\" [treeLevelIndent]=\"20\">\r\n          <ng-template ngx-datatable-tree-toggle let-tree=\"cellContext\">\r\n            <button [disabled]=\"tree.treeStatus === 'disabled'\" (click)=\"tree.onTreeAction()\">\r\n              <span *ngIf=\"tree.treeStatus === 'loading'\">\r\n                ...\r\n              </span>\r\n              <span *ngIf=\"tree.treeStatus === 'collapsed'\">\r\n                ↑\r\n              </span>\r\n              <span *ngIf=\"tree.treeStatus === 'expanded'\">\r\n                ↓\r\n              </span>\r\n              <span *ngIf=\"tree.treeStatus === 'disabled'\">\r\n                ⃠\r\n              </span>\r\n            </button>\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"City\" [width]=\"300\" prop=\"address.city\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"State\" [width]=\"300\" prop=\"address.state\"></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `,\r\n  styles: ['.icon {height: 10px; width: 10px; }', '.disabled {opacity: 0.5; }']\r\n})\r\nexport class FullScreenTreeComponent {\r\n  rows = [];\r\n  lastIndex = 15;\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor(private cd: ChangeDetectorRef) {\r\n    this.fetch(data => {\r\n      data = data.slice(1, this.lastIndex);\r\n      this.rows = data.map(d => {\r\n        d.treeStatus = 'collapsed';\r\n        d.parentId = null;\r\n        return d;\r\n      });\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      setTimeout(() => {\r\n        cb(JSON.parse(req.response));\r\n      }, 500);\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onTreeAction(event: any) {\r\n    const index = event.rowIndex;\r\n    const row = event.row;\r\n    if (row.treeStatus === 'collapsed') {\r\n      row.treeStatus = 'loading';\r\n      this.fetch(data => {\r\n        data = data.slice(this.lastIndex, this.lastIndex + 3).map(d => {\r\n          d.treeStatus = 'collapsed';\r\n          d.parentId = row.id;\r\n          return d;\r\n        });\r\n        this.lastIndex = this.lastIndex + 3;\r\n        row.treeStatus = 'expanded';\r\n        this.rows = [...this.rows, ...data];\r\n        this.cd.detectChanges();\r\n      });\r\n    } else {\r\n      row.treeStatus = 'collapsed';\r\n      this.rows = [...this.rows];\r\n      this.cd.detectChanges();\r\n    }\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'client-side-tree-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Flex Column Width Distribution\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/tree/client-tree.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [columnMode]=\"ColumnMode.flex\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n        [treeFromRelation]=\"'manager'\"\r\n        [treeToRelation]=\"'name'\"\r\n        [rows]=\"rows\"\r\n        (treeAction)=\"onTreeAction($event)\"\r\n      >\r\n        <ngx-datatable-column name=\"Name\" [flexGrow]=\"3\" [isTreeColumn]=\"true\">\r\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n            {{ value }}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" [flexGrow]=\"1\">\r\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n            {{ value }}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\" [flexGrow]=\"1\">\r\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n            {{ value }}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `,\r\n  styles: ['.icon {height: 10px; width: 10px; }', '.disabled {opacity: 0.5; }']\r\n})\r\nexport class ClientTreeComponent {\r\n  rows = [];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company_tree.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onTreeAction(event: any) {\r\n    const index = event.rowIndex;\r\n    const row = event.row;\r\n    if (row.treeStatus === 'collapsed') {\r\n      row.treeStatus = 'expanded';\r\n    } else {\r\n      row.treeStatus = 'collapsed';\r\n    }\r\n    this.rows = [...this.rows];\r\n  }\r\n}\r\n","export enum SortType {\r\n  single = 'single',\r\n  multi = 'multi'\r\n}\r\n","/**\r\n * Returns the columns by pin.\r\n */\r\nexport function columnsByPin(cols: any[]) {\r\n  const ret: { left: any; center: any; right: any } = {\r\n    left: [],\r\n    center: [],\r\n    right: []\r\n  };\r\n\r\n  if (cols) {\r\n    for (const col of cols) {\r\n      if (col.frozenLeft) {\r\n        ret.left.push(col);\r\n      } else if (col.frozenRight) {\r\n        ret.right.push(col);\r\n      } else {\r\n        ret.center.push(col);\r\n      }\r\n    }\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n/**\r\n * Returns the widths of all group sets of a column\r\n */\r\nexport function columnGroupWidths(groups: any, all: any) {\r\n  return {\r\n    left: columnTotalWidth(groups.left),\r\n    center: columnTotalWidth(groups.center),\r\n    right: columnTotalWidth(groups.right),\r\n    total: Math.floor(columnTotalWidth(all))\r\n  };\r\n}\r\n\r\n/**\r\n * Calculates the total width of all columns and their groups\r\n */\r\nexport function columnTotalWidth(columns: any[], prop?: string) {\r\n  let totalWidth = 0;\r\n\r\n  if (columns) {\r\n    for (const c of columns) {\r\n      const has = prop && c[prop];\r\n      const width = has ? c[prop] : c.width;\r\n      totalWidth = totalWidth + parseFloat(width);\r\n    }\r\n  }\r\n\r\n  return totalWidth;\r\n}\r\n\r\n/**\r\n * Calculates the total width of all columns and their groups\r\n */\r\nexport function columnsTotalWidth(columns: any, prop?: any) {\r\n  let totalWidth = 0;\r\n\r\n  for (const column of columns) {\r\n    const has = prop && column[prop];\r\n    totalWidth = totalWidth + (has ? column[prop] : column.width);\r\n  }\r\n\r\n  return totalWidth;\r\n}\r\n\r\nexport function columnsByPinArr(val: any) {\r\n  const colsByPinArr = [];\r\n  const colsByPin = columnsByPin(val);\r\n\r\n  colsByPinArr.push({ type: 'left', columns: colsByPin['left'] });\r\n  colsByPinArr.push({ type: 'center', columns: colsByPin['center'] });\r\n  colsByPinArr.push({ type: 'right', columns: colsByPin['right'] });\r\n\r\n  return colsByPinArr;\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'multi-selection-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Multi Select\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-multi.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div style=\"float:left;width:75%\">\r\n        <div class=\"info\">\r\n          <p>This demonstrates multi selection table, use CTRL or SHIFT click to select multiple items.</p>\r\n        </div>\r\n\r\n        <ngx-datatable\r\n          class=\"material\"\r\n          [rows]=\"rows\"\r\n          [columnMode]=\"ColumnMode.force\"\r\n          [columns]=\"columns\"\r\n          [headerHeight]=\"50\"\r\n          [footerHeight]=\"50\"\r\n          rowHeight=\"auto\"\r\n          [limit]=\"5\"\r\n          [selected]=\"selected\"\r\n          [selectionType]=\"SelectionType.multi\"\r\n          (activate)=\"onActivate($event)\"\r\n          (select)=\"onSelect($event)\"\r\n        >\r\n        </ngx-datatable>\r\n      </div>\r\n\r\n      <div class=\"selected-column\">\r\n        <h4>Selections</h4>\r\n        <ul>\r\n          <li *ngFor=\"let sel of selected\">\r\n            {{ sel.name }}\r\n          </li>\r\n          <li *ngIf=\"!selected.length\">No Selections</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class MultiSelectionComponent {\r\n  rows = [];\r\n\r\n  selected = [];\r\n\r\n  columns: any[] = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\r\n\r\n  ColumnMode = ColumnMode;\r\n  SelectionType = SelectionType;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSelect({ selected }) {\r\n    console.log('Select Event', selected, this.selected);\r\n\r\n    this.selected.splice(0, this.selected.length);\r\n    this.selected.push(...selected);\r\n  }\r\n\r\n  onActivate(event) {\r\n    console.log('Activate Event', event);\r\n  }\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({ selector: '[ngx-datatable-cell-template]' })\r\nexport class DataTableColumnCellDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { NgxDatatableModule } from '../../projects/swimlane/ngx-datatable/src/public-api';\r\nimport { AppComponent } from './app.component';\r\n\r\n// -- Basic\r\nimport { BasicFixedComponent } from './basic/basic-fixed.component';\r\nimport { BasicAutoComponent } from './basic/basic-auto.component';\r\nimport { VirtualScrollComponent } from './basic/virtual.component';\r\nimport { InlineEditComponent } from './basic/inline.component';\r\nimport { HorzVertScrolling } from './basic/scrolling.component';\r\nimport { MultipleTablesComponent } from './basic/multiple.component';\r\nimport { FullScreenComponent } from './basic/fullscreen.component';\r\nimport { RowDetailsComponent } from './basic/row-detail.component';\r\nimport { ResponsiveComponent } from './basic/responsive.component';\r\nimport { FilterBarComponent } from './basic/filter.component';\r\nimport { TabsDemoComponent } from './basic/tabs.component';\r\nimport { LiveDataComponent } from './basic/live.component';\r\nimport { RxDemoComponent } from './basic/rx.component';\r\nimport { ContextMenuDemoComponent } from './basic/contextmenu.component';\r\nimport { RowCssComponent } from './basic/css.component';\r\nimport { DynamicHeightComponent } from './basic/dynamic-height.component';\r\nimport { FooterDemoComponent } from './basic/footer.component';\r\nimport { RowGroupingComponent } from './basic/row-grouping.component';\r\n\r\n// -- Themes\r\nimport { BootstrapThemeComponent } from './basic/bootstrap.component';\r\nimport { DarkThemeComponent } from './basic/dark-theme.component';\r\n\r\n// -- Paging\r\nimport { ClientPagingComponent } from './paging/paging-client.component';\r\nimport { ServerPagingComponent } from './paging/paging-server.component';\r\nimport { ServerScrollingComponent } from './paging/scrolling-server.component';\r\nimport { VirtualPagingComponent } from './paging/paging-virtual.component';\r\nimport { PagingScrollingNoVirtualizationComponent } from './paging/paging-scrolling-novirtualization.component';\r\n\r\n// -- Sorting\r\nimport { SortingComparatorComponent } from './sorting/sorting-comparator.component';\r\nimport { DefaultSortingComponent } from './sorting/sorting-default.component';\r\nimport { ServerSortingComponent } from './sorting/sorting-server.component';\r\nimport { ClientSortingComponent } from './sorting/sorting-client.component';\r\n\r\n// -- Templates\r\nimport { InlineTemplatesComponent } from './templates/template-dom.component';\r\nimport { TemplateRefTemplatesComponent } from './templates/template-obj.component';\r\n\r\n// -- Tree\r\nimport { FullScreenTreeComponent } from './tree/fullscreen.component';\r\nimport { ClientTreeComponent } from './tree/client-tree.component';\r\n\r\n// -- Selection\r\nimport { CellSelectionComponent } from './selection/selection-cell.component';\r\nimport { MultiSelectionComponent } from './selection/selection-multi.component';\r\nimport { SingleSelectionComponent } from './selection/selection-single.component';\r\nimport { MultiDisableSelectionComponent } from './selection/selection-disabled.component';\r\nimport { CheckboxSelectionComponent } from './selection/selection-chkbox.component';\r\nimport { MultiClickSelectionComponent } from './selection/selection-multi-click.component';\r\nimport { CustomCheckboxSelectionComponent } from './selection/selection-chkbox-template.component';\r\n\r\n// -- Columns\r\nimport { ColumnToggleComponent } from './columns/column-toggle.component';\r\nimport { ColumnStandardComponent } from './columns/column-standard.component';\r\nimport { ColumnForceComponent } from './columns/column-force.component';\r\nimport { ColumnFlexComponent } from './columns/column-flex.component';\r\nimport { ColumnPinningComponent } from './columns/pinning.component';\r\nimport { ColumnReorderComponent } from './columns/column-reorder.component';\r\n\r\n// -- Summary row\r\nimport { SummaryRowSimpleComponent } from './summary/summary-row-simple.component';\r\nimport { SummaryRowCustomTemplateComponent } from './summary/summary-row-custom-template.component';\r\nimport { SummaryRowServerPagingComponent } from './summary/summary-row-server-paging.component';\r\nimport { SummaryRowInlineHtmlComponent } from './summary/summary-row-inline-html.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BasicAutoComponent,\r\n    BasicFixedComponent,\r\n    FullScreenComponent,\r\n    FullScreenTreeComponent,\r\n    InlineEditComponent,\r\n    VirtualScrollComponent,\r\n    HorzVertScrolling,\r\n    MultipleTablesComponent,\r\n    RowDetailsComponent,\r\n    ResponsiveComponent,\r\n    ClientPagingComponent,\r\n    ServerPagingComponent,\r\n    PagingScrollingNoVirtualizationComponent,\r\n    ServerScrollingComponent,\r\n    ClientSortingComponent,\r\n    DefaultSortingComponent,\r\n    ServerSortingComponent,\r\n    SortingComparatorComponent,\r\n    CellSelectionComponent,\r\n    MultiSelectionComponent,\r\n    InlineTemplatesComponent,\r\n    TemplateRefTemplatesComponent,\r\n    ColumnFlexComponent,\r\n    ColumnToggleComponent,\r\n    ColumnStandardComponent,\r\n    ColumnForceComponent,\r\n    ColumnPinningComponent,\r\n    ColumnReorderComponent,\r\n    FilterBarComponent,\r\n    VirtualPagingComponent,\r\n    DarkThemeComponent,\r\n    TabsDemoComponent,\r\n    SingleSelectionComponent,\r\n    LiveDataComponent,\r\n    MultiDisableSelectionComponent,\r\n    RxDemoComponent,\r\n    ContextMenuDemoComponent,\r\n    CheckboxSelectionComponent,\r\n    CustomCheckboxSelectionComponent,\r\n    MultiClickSelectionComponent,\r\n    RowCssComponent,\r\n    DynamicHeightComponent,\r\n    FooterDemoComponent,\r\n    RowGroupingComponent,\r\n    BootstrapThemeComponent,\r\n    ClientTreeComponent,\r\n    SummaryRowSimpleComponent,\r\n    SummaryRowCustomTemplateComponent,\r\n    SummaryRowServerPagingComponent,\r\n    SummaryRowInlineHtmlComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgxDatatableModule.forRoot({\r\n      messages: {\r\n        emptyMessage: 'No data to display', // Message to show when array is presented, but contains no values\r\n        totalMessage: 'total', // Footer total message\r\n        selectedMessage: 'selected' // Footer selected message\r\n      }\r\n    })\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'server-sorting-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Server-side Sorting\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/sorting/sorting-server.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows\"\r\n        [columns]=\"columns\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n        [externalSorting]=\"true\"\r\n        [loadingIndicator]=\"loading\"\r\n        (sort)=\"onSort($event)\"\r\n      >\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class ServerSortingComponent {\r\n  loading = false;\r\n\r\n  rows = [];\r\n\r\n  columns = [\r\n    { name: 'Company', sortable: true },\r\n    { name: 'Name', sortable: true },\r\n    { name: 'Gender', sortable: true }\r\n  ];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      const data = JSON.parse(req.response);\r\n      cb(data.splice(0, 20));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onSort(event) {\r\n    // event was triggered, start sort sequence\r\n    console.log('Sort Event', event);\r\n    this.loading = true;\r\n    // emulate a server request with a timeout\r\n    setTimeout(() => {\r\n      const rows = [...this.rows];\r\n      // this is only for demo purposes, normally\r\n      // your server would return the result for\r\n      // you and you would just set the rows prop\r\n      const sort = event.sorts[0];\r\n      rows.sort((a, b) => {\r\n        return a[sort.prop].localeCompare(b[sort.prop]) * (sort.dir === 'desc' ? -1 : 1);\r\n      });\r\n\r\n      this.rows = rows;\r\n      this.loading = false;\r\n    }, 1000);\r\n  }\r\n}\r\n","export enum ClickType {\r\n  single = 'single',\r\n  double = 'double'\r\n}\r\n","import {\r\n  Directive,\r\n  Output,\r\n  EventEmitter,\r\n  ContentChildren,\r\n  QueryList,\r\n  KeyValueDiffers,\r\n  AfterContentInit,\r\n  OnDestroy,\r\n  Inject\r\n} from '@angular/core';\r\nimport { DraggableDirective } from './draggable.directive';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Directive({ selector: '[orderable]' })\r\nexport class OrderableDirective implements AfterContentInit, OnDestroy {\r\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\r\n  @Output() targetChanged: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChildren(DraggableDirective, { descendants: true })\r\n  draggables: QueryList<DraggableDirective>;\r\n\r\n  positions: any;\r\n  differ: any;\r\n  lastDraggingIndex: number;\r\n\r\n  constructor(differs: KeyValueDiffers, @Inject(DOCUMENT) private document: any) {\r\n    this.differ = differs.find({}).create();\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    // HACK: Investigate Better Way\r\n    this.updateSubscriptions();\r\n    this.draggables.changes.subscribe(this.updateSubscriptions.bind(this));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.draggables.forEach(d => {\r\n      d.dragStart.unsubscribe();\r\n      d.dragging.unsubscribe();\r\n      d.dragEnd.unsubscribe();\r\n    });\r\n  }\r\n\r\n  updateSubscriptions(): void {\r\n    const diffs = this.differ.diff(this.createMapDiffs());\r\n\r\n    if (diffs) {\r\n      const subscribe = ({ currentValue, previousValue }: any) => {\r\n        unsubscribe({ previousValue });\r\n\r\n        if (currentValue) {\r\n          currentValue.dragStart.subscribe(this.onDragStart.bind(this));\r\n          currentValue.dragging.subscribe(this.onDragging.bind(this));\r\n          currentValue.dragEnd.subscribe(this.onDragEnd.bind(this));\r\n        }\r\n      };\r\n\r\n      const unsubscribe = ({ previousValue }: any) => {\r\n        if (previousValue) {\r\n          previousValue.dragStart.unsubscribe();\r\n          previousValue.dragging.unsubscribe();\r\n          previousValue.dragEnd.unsubscribe();\r\n        }\r\n      };\r\n\r\n      diffs.forEachAddedItem(subscribe);\r\n      // diffs.forEachChangedItem(subscribe.bind(this));\r\n      diffs.forEachRemovedItem(unsubscribe);\r\n    }\r\n  }\r\n\r\n  onDragStart(): void {\r\n    this.positions = {};\r\n\r\n    let i = 0;\r\n    for (const dragger of this.draggables.toArray()) {\r\n      const elm = dragger.element;\r\n      const left = parseInt(elm.offsetLeft.toString(), 0);\r\n      this.positions[dragger.dragModel.prop] = {\r\n        left,\r\n        right: left + parseInt(elm.offsetWidth.toString(), 0),\r\n        index: i++,\r\n        element: elm\r\n      };\r\n    }\r\n  }\r\n\r\n  onDragging({ element, model, event }: any): void {\r\n    const prevPos = this.positions[model.prop];\r\n    const target = this.isTarget(model, event);\r\n\r\n    if (target) {\r\n      if (this.lastDraggingIndex !== target.i) {\r\n        this.targetChanged.emit({\r\n          prevIndex: this.lastDraggingIndex,\r\n          newIndex: target.i,\r\n          initialIndex: prevPos.index\r\n        });\r\n        this.lastDraggingIndex = target.i;\r\n      }\r\n    } else if (this.lastDraggingIndex !== prevPos.index) {\r\n      this.targetChanged.emit({\r\n        prevIndex: this.lastDraggingIndex,\r\n        initialIndex: prevPos.index\r\n      });\r\n      this.lastDraggingIndex = prevPos.index;\r\n    }\r\n  }\r\n\r\n  onDragEnd({ element, model, event }: any): void {\r\n    const prevPos = this.positions[model.prop];\r\n\r\n    const target = this.isTarget(model, event);\r\n    if (target) {\r\n      this.reorder.emit({\r\n        prevIndex: prevPos.index,\r\n        newIndex: target.i,\r\n        model\r\n      });\r\n    }\r\n\r\n    this.lastDraggingIndex = undefined;\r\n    element.style.left = 'auto';\r\n  }\r\n\r\n  isTarget(model: any, event: any): any {\r\n    let i = 0;\r\n    const x = event.x || event.clientX;\r\n    const y = event.y || event.clientY;\r\n    const targets = this.document.elementsFromPoint(x, y);\r\n\r\n    for (const prop in this.positions) {\r\n      // current column position which throws event.\r\n      const pos = this.positions[prop];\r\n\r\n      // since we drag the inner span, we need to find it in the elements at the cursor\r\n      if (model.prop !== prop && targets.find((el: any) => el === pos.element)) {\r\n        return {\r\n          pos,\r\n          i\r\n        };\r\n      }\r\n\r\n      i++;\r\n    }\r\n  }\r\n\r\n  private createMapDiffs(): { [key: string]: DraggableDirective } {\r\n    return this.draggables.toArray().reduce((acc, curr) => {\r\n      acc[curr.dragModel.$$id] = curr;\r\n      return acc;\r\n    }, {});\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode, SortType } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'client-sorting-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Client-side Sorting\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/sorting/sorting-client.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows\"\r\n        [columns]=\"columns\"\r\n        [sortType]=\"SortType.multi\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        [rowHeight]=\"50\"\r\n        [scrollbarV]=\"true\"\r\n      >\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class ClientSortingComponent {\r\n  rows = [];\r\n\r\n  columns = [{ name: 'Company' }, { name: 'Name' }, { name: 'Gender' }];\r\n\r\n  ColumnMode = ColumnMode;\r\n  SortType = SortType;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      const data = JSON.parse(req.response);\r\n      cb(data);\r\n    };\r\n\r\n    req.send();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  EventEmitter,\r\n  Output,\r\n  HostBinding,\r\n  HostListener,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { SortType } from '../../types/sort.type';\r\nimport { SelectionType } from '../../types/selection.type';\r\nimport { TableColumn } from '../../types/table-column.type';\r\nimport { nextSortDir } from '../../utils/sort';\r\nimport { SortDirection } from '../../types/sort-direction.type';\r\n\r\n@Component({\r\n  selector: 'datatable-header-cell',\r\n  template: `\r\n    <div class=\"datatable-header-cell-template-wrap\">\r\n      <ng-template\r\n        *ngIf=\"isTarget\"\r\n        [ngTemplateOutlet]=\"targetMarkerTemplate\"\r\n        [ngTemplateOutletContext]=\"targetMarkerContext\"\r\n      >\r\n      </ng-template>\r\n      <label *ngIf=\"isCheckboxable\" class=\"datatable-checkbox\">\r\n        <input type=\"checkbox\" [checked]=\"allRowsSelected\" (change)=\"select.emit(!allRowsSelected)\" />\r\n      </label>\r\n      <span *ngIf=\"!column.headerTemplate\" class=\"datatable-header-cell-wrapper\">\r\n        <span class=\"datatable-header-cell-label draggable\" (click)=\"onSort()\" [innerHTML]=\"name\"> </span>\r\n      </span>\r\n      <ng-template\r\n        *ngIf=\"column.headerTemplate\"\r\n        [ngTemplateOutlet]=\"column.headerTemplate\"\r\n        [ngTemplateOutletContext]=\"cellContext\"\r\n      >\r\n      </ng-template>\r\n      <span (click)=\"onSort()\" [class]=\"sortClass\"> </span>\r\n    </div>\r\n  `,\r\n  host: {\r\n    class: 'datatable-header-cell'\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DataTableHeaderCellComponent {\r\n  @Input() sortType: SortType;\r\n  @Input() sortAscendingIcon: string;\r\n  @Input() sortDescendingIcon: string;\r\n  @Input() sortUnsetIcon: string;\r\n\r\n  @Input() isTarget: boolean;\r\n  @Input() targetMarkerTemplate: any;\r\n  @Input() targetMarkerContext: any;\r\n\r\n  _allRowsSelected: boolean;\r\n\r\n  @Input() set allRowsSelected(value) {\r\n    this._allRowsSelected = value;\r\n    this.cellContext.allRowsSelected = value;\r\n  }\r\n  get allRowsSelected() {\r\n    return this._allRowsSelected;\r\n  }\r\n\r\n  @Input() selectionType: SelectionType;\r\n\r\n  @Input() set column(column: TableColumn) {\r\n    this._column = column;\r\n    this.cellContext.column = column;\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  get column(): TableColumn {\r\n    return this._column;\r\n  }\r\n\r\n  @HostBinding('style.height.px')\r\n  @Input()\r\n  headerHeight: number;\r\n\r\n  @Input() set sorts(val: any[]) {\r\n    this._sorts = val;\r\n    this.sortDir = this.calcSortDir(val);\r\n    this.cellContext.sortDir = this.sortDir;\r\n    this.sortClass = this.calcSortClass(this.sortDir);\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  get sorts(): any[] {\r\n    return this._sorts;\r\n  }\r\n\r\n  @Output() sort: EventEmitter<any> = new EventEmitter();\r\n  @Output() select: EventEmitter<any> = new EventEmitter();\r\n  @Output() columnContextmenu = new EventEmitter<{ event: MouseEvent; column: any }>(false);\r\n\r\n  @HostBinding('class')\r\n  get columnCssClasses(): any {\r\n    let cls = 'datatable-header-cell';\r\n\r\n    if (this.column.sortable) cls += ' sortable';\r\n    if (this.column.resizeable) cls += ' resizeable';\r\n    if (this.column.headerClass) {\r\n      if (typeof this.column.headerClass === 'string') {\r\n        cls += ' ' + this.column.headerClass;\r\n      } else if (typeof this.column.headerClass === 'function') {\r\n        const res = this.column.headerClass({\r\n          column: this.column\r\n        });\r\n\r\n        if (typeof res === 'string') {\r\n          cls += res;\r\n        } else if (typeof res === 'object') {\r\n          const keys = Object.keys(res);\r\n          for (const k of keys) {\r\n            if (res[k] === true) cls += ` ${k}`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const sortDir = this.sortDir;\r\n    if (sortDir) {\r\n      cls += ` sort-active sort-${sortDir}`;\r\n    }\r\n\r\n    return cls;\r\n  }\r\n\r\n  @HostBinding('attr.title')\r\n  get name(): string {\r\n    // guaranteed to have a value by setColumnDefaults() in column-helper.ts\r\n    return this.column.headerTemplate === undefined ? this.column.name : undefined;\r\n  }\r\n\r\n  @HostBinding('style.minWidth.px')\r\n  get minWidth(): number {\r\n    return this.column.minWidth;\r\n  }\r\n\r\n  @HostBinding('style.maxWidth.px')\r\n  get maxWidth(): number {\r\n    return this.column.maxWidth;\r\n  }\r\n\r\n  @HostBinding('style.width.px')\r\n  get width(): number {\r\n    return this.column.width;\r\n  }\r\n\r\n  get isCheckboxable(): boolean {\r\n    return this.column.checkboxable && this.column.headerCheckboxable && this.selectionType === SelectionType.checkbox;\r\n  }\r\n\r\n  sortFn = this.onSort.bind(this);\r\n  sortClass: string;\r\n  sortDir: SortDirection;\r\n  selectFn = this.select.emit.bind(this.select);\r\n\r\n  cellContext: any;\r\n\r\n  private _column: TableColumn;\r\n  private _sorts: any[];\r\n\r\n  constructor(private cd: ChangeDetectorRef) {\r\n    this.cellContext = {\r\n      column: this.column,\r\n      sortDir: this.sortDir,\r\n      sortFn: this.sortFn,\r\n      allRowsSelected: this.allRowsSelected,\r\n      selectFn: this.selectFn\r\n    };\r\n  }\r\n\r\n  @HostListener('contextmenu', ['$event'])\r\n  onContextmenu($event: MouseEvent): void {\r\n    this.columnContextmenu.emit({ event: $event, column: this.column });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.sortClass = this.calcSortClass(this.sortDir);\r\n  }\r\n\r\n  calcSortDir(sorts: any[]): any {\r\n    if (sorts && this.column) {\r\n      const sort = sorts.find((s: any) => {\r\n        return s.prop === this.column.prop;\r\n      });\r\n\r\n      if (sort) return sort.dir;\r\n    }\r\n  }\r\n\r\n  onSort(): void {\r\n    if (!this.column.sortable) return;\r\n\r\n    const newValue = nextSortDir(this.sortType, this.sortDir);\r\n    this.sort.emit({\r\n      column: this.column,\r\n      prevValue: this.sortDir,\r\n      newValue\r\n    });\r\n  }\r\n\r\n  calcSortClass(sortDir: SortDirection): string {\r\n    if (!this.cellContext.column.sortable) return;\r\n    if (sortDir === SortDirection.asc) {\r\n      return `sort-btn sort-asc ${this.sortAscendingIcon}`;\r\n    } else if (sortDir === SortDirection.desc) {\r\n      return `sort-btn sort-desc ${this.sortDescendingIcon}`;\r\n    } else {\r\n      return `sort-btn ${this.sortUnsetIcon}`;\r\n    }\r\n  }\r\n}\r\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  HostBinding,\n  ChangeDetectorRef,\n  ViewChild,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { ScrollerComponent } from './scroller.component';\nimport { SelectionType } from '../../types/selection.type';\nimport { columnsByPin, columnGroupWidths } from '../../utils/column';\nimport { RowHeightCache } from '../../utils/row-height-cache';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-body',\n  template: `\n    <datatable-progress *ngIf=\"loadingIndicator\"> </datatable-progress>\n    <datatable-selection\n      #selector\n      [selected]=\"selected\"\n      [rows]=\"rows\"\n      [selectCheck]=\"selectCheck\"\n      [selectEnabled]=\"selectEnabled\"\n      [selectionType]=\"selectionType\"\n      [rowIdentity]=\"rowIdentity\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n    >\n      <datatable-scroller\n        *ngIf=\"rows?.length\"\n        [scrollbarV]=\"scrollbarV\"\n        [scrollbarH]=\"scrollbarH\"\n        [scrollHeight]=\"scrollHeight\"\n        [scrollWidth]=\"columnGroupWidths?.total\"\n        (scroll)=\"onBodyScroll($event)\"\n      >\n        <datatable-summary-row\n          *ngIf=\"summaryRow && summaryPosition === 'top'\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n        <datatable-row-wrapper\n          [groupedRows]=\"groupedRows\"\n          *ngFor=\"let group of temp; let i = index; trackBy: rowTrackingFn\"\n          [innerWidth]=\"innerWidth\"\n          [ngStyle]=\"getRowsStyles(group)\"\n          [rowDetail]=\"rowDetail\"\n          [groupHeader]=\"groupHeader\"\n          [offsetX]=\"offsetX\"\n          [detailRowHeight]=\"getDetailRowHeight(group && group[i], i)\"\n          [row]=\"group\"\n          [expanded]=\"getRowExpanded(group)\"\n          [rowIndex]=\"getRowIndex(group && group[i])\"\n          (rowContextmenu)=\"rowContextmenu.emit($event)\"\n        >\n          <datatable-body-row\n            role=\"row\"\n            *ngIf=\"!groupedRows; else groupedRowsTemplate\"\n            tabindex=\"-1\"\n            [isSelected]=\"selector.getRowSelected(group)\"\n            [innerWidth]=\"innerWidth\"\n            [offsetX]=\"offsetX\"\n            [columns]=\"columns\"\n            [rowHeight]=\"getRowHeight(group)\"\n            [row]=\"group\"\n            [rowIndex]=\"getRowIndex(group)\"\n            [expanded]=\"getRowExpanded(group)\"\n            [rowClass]=\"rowClass\"\n            [displayCheck]=\"displayCheck\"\n            [treeStatus]=\"group && group.treeStatus\"\n            (treeAction)=\"onTreeAction(group)\"\n            (activate)=\"selector.onActivate($event, indexes.first + i)\"\n          >\n          </datatable-body-row>\n          <ng-template #groupedRowsTemplate>\n            <datatable-body-row\n              role=\"row\"\n              *ngFor=\"let row of group.value; let i = index; trackBy: rowTrackingFn\"\n              tabindex=\"-1\"\n              [isSelected]=\"selector.getRowSelected(row)\"\n              [innerWidth]=\"innerWidth\"\n              [offsetX]=\"offsetX\"\n              [columns]=\"columns\"\n              [rowHeight]=\"getRowHeight(row)\"\n              [row]=\"row\"\n              [group]=\"group.value\"\n              [rowIndex]=\"getRowIndex(row)\"\n              [expanded]=\"getRowExpanded(row)\"\n              [rowClass]=\"rowClass\"\n              (activate)=\"selector.onActivate($event, i)\"\n            >\n            </datatable-body-row>\n          </ng-template>\n        </datatable-row-wrapper>\n        <datatable-summary-row\n          role=\"row\"\n          *ngIf=\"summaryRow && summaryPosition === 'bottom'\"\n          [ngStyle]=\"getBottomSummaryRowStyles()\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n      </datatable-scroller>\n      <div class=\"empty-row\" *ngIf=\"!rows?.length && !loadingIndicator\" [innerHTML]=\"emptyMessage\"></div>\n    </datatable-selection>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'datatable-body'\n  }\n})\nexport class DataTableBodyComponent implements OnInit, OnDestroy {\n  @Input() scrollbarV: boolean;\n  @Input() scrollbarH: boolean;\n  @Input() loadingIndicator: boolean;\n  @Input() externalPaging: boolean;\n  @Input() rowHeight: number | 'auto' | ((row?: any) => number);\n  @Input() offsetX: number;\n  @Input() emptyMessage: string;\n  @Input() selectionType: SelectionType;\n  @Input() selected: any[] = [];\n  @Input() rowIdentity: any;\n  @Input() rowDetail: any;\n  @Input() groupHeader: any;\n  @Input() selectCheck: any;\n  @Input() displayCheck: any;\n  @Input() trackByProp: string;\n  @Input() rowClass: any;\n  @Input() groupedRows: any;\n  @Input() groupExpansionDefault: boolean;\n  @Input() innerWidth: number;\n  @Input() groupRowsBy: string;\n  @Input() virtualization: boolean;\n  @Input() summaryRow: boolean;\n  @Input() summaryPosition: string;\n  @Input() summaryHeight: number;\n\n  @Input() set pageSize(val: number) {\n    this._pageSize = val;\n    this.recalcLayout();\n  }\n\n  get pageSize(): number {\n    return this._pageSize;\n  }\n\n  @Input() set rows(val: any[]) {\n    this._rows = val;\n    this.recalcLayout();\n  }\n\n  get rows(): any[] {\n    return this._rows;\n  }\n\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n    const colsByPin = columnsByPin(val);\n    this.columnGroupWidths = columnGroupWidths(colsByPin, val);\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input() set offset(val: number) {\n    this._offset = val;\n    if (!this.scrollbarV || (this.scrollbarV && !this.virtualization)) this.recalcLayout();\n  }\n\n  get offset(): number {\n    return this._offset;\n  }\n\n  @Input() set rowCount(val: number) {\n    this._rowCount = val;\n    this.recalcLayout();\n  }\n\n  get rowCount(): number {\n    return this._rowCount;\n  }\n\n  @HostBinding('style.width')\n  get bodyWidth(): string {\n    if (this.scrollbarH) {\n      return this.innerWidth + 'px';\n    } else {\n      return '100%';\n    }\n  }\n\n  @Input()\n  @HostBinding('style.height')\n  set bodyHeight(val) {\n    if (this.scrollbarV) {\n      this._bodyHeight = val + 'px';\n    } else {\n      this._bodyHeight = 'auto';\n    }\n\n    this.recalcLayout();\n  }\n\n  get bodyHeight() {\n    return this._bodyHeight;\n  }\n\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\n  @Output() page: EventEmitter<any> = new EventEmitter();\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() detailToggle: EventEmitter<any> = new EventEmitter();\n  @Output() rowContextmenu = new EventEmitter<{ event: MouseEvent; row: any }>(false);\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild(ScrollerComponent) scroller: ScrollerComponent;\n\n  /**\n   * Returns if selection is enabled.\n   */\n  get selectEnabled(): boolean {\n    return !!this.selectionType;\n  }\n\n  /**\n   * Property that would calculate the height of scroll bar\n   * based on the row heights cache for virtual scroll and virtualization. Other scenarios\n   * calculate scroll height automatically (as height will be undefined).\n   */\n  get scrollHeight(): number | undefined {\n    if (this.scrollbarV && this.virtualization && this.rowCount) {\n      return this.rowHeightsCache.query(this.rowCount - 1);\n    }\n    // avoid TS7030: Not all code paths return a value.\n    return undefined;\n  }\n\n  rowHeightsCache: RowHeightCache = new RowHeightCache();\n  temp: any[] = [];\n  offsetY = 0;\n  indexes: any = {};\n  columnGroupWidths: any;\n  columnGroupWidthsWithoutGroup: any;\n  rowTrackingFn: any;\n  listener: any;\n  rowIndexes: any = new WeakMap<any, string>();\n  rowExpansions: any[] = [];\n\n  _rows: any[];\n  _bodyHeight: any;\n  _columns: any[];\n  _rowCount: number;\n  _offset: number;\n  _pageSize: number;\n\n  /**\n   * Creates an instance of DataTableBodyComponent.\n   */\n  constructor(private cd: ChangeDetectorRef) {\n    // declare fn here so we can get access to the `this` property\n    this.rowTrackingFn = (index: number, row: any): any => {\n      const idx = this.getRowIndex(row);\n      if (this.trackByProp) {\n        return row[this.trackByProp];\n      } else {\n        return idx;\n      }\n    };\n  }\n\n  /**\n   * Called after the constructor, initializing input properties\n   */\n  ngOnInit(): void {\n    if (this.rowDetail) {\n      this.listener = this.rowDetail.toggle.subscribe(({ type, value }: { type: string; value: any }) => {\n        if (type === 'row') {\n          this.toggleRowExpansion(value);\n        }\n        if (type === 'all') {\n          this.toggleAllRows(value);\n        }\n\n        // Refresh rows after toggle\n        // Fixes #883\n        this.updateIndexes();\n        this.updateRows();\n        this.cd.markForCheck();\n      });\n    }\n\n    if (this.groupHeader) {\n      this.listener = this.groupHeader.toggle.subscribe(({ type, value }: { type: string; value: any }) => {\n        if (type === 'group') {\n          this.toggleRowExpansion(value);\n        }\n        if (type === 'all') {\n          this.toggleAllRows(value);\n        }\n\n        // Refresh rows after toggle\n        // Fixes #883\n        this.updateIndexes();\n        this.updateRows();\n        this.cd.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * Called once, before the instance is destroyed.\n   */\n  ngOnDestroy(): void {\n    if (this.rowDetail || this.groupHeader) {\n      this.listener.unsubscribe();\n    }\n  }\n\n  /**\n   * Updates the Y offset given a new offset.\n   */\n  updateOffsetY(offset?: number): void {\n    // scroller is missing on empty table\n    if (!this.scroller) {\n      return;\n    }\n\n    if (this.scrollbarV && this.virtualization && offset) {\n      // First get the row Index that we need to move to.\n      const rowIndex = this.pageSize * offset;\n      offset = this.rowHeightsCache.query(rowIndex - 1);\n    } else if (this.scrollbarV && !this.virtualization) {\n      offset = 0;\n    }\n\n    this.scroller.setOffset(offset || 0);\n  }\n\n  /**\n   * Body was scrolled, this is mainly useful for\n   * when a user is server-side pagination via virtual scroll.\n   */\n  onBodyScroll(event: any): void {\n    const scrollYPos: number = event.scrollYPos;\n    const scrollXPos: number = event.scrollXPos;\n\n    // if scroll change, trigger update\n    // this is mainly used for header cell positions\n    if (this.offsetY !== scrollYPos || this.offsetX !== scrollXPos) {\n      this.scroll.emit({\n        offsetY: scrollYPos,\n        offsetX: scrollXPos\n      });\n    }\n\n    this.offsetY = scrollYPos;\n    this.offsetX = scrollXPos;\n\n    this.updateIndexes();\n    this.updatePage(event.direction);\n    this.updateRows();\n  }\n\n  /**\n   * Updates the page given a direction.\n   */\n  updatePage(direction: string): void {\n    let offset = this.indexes.first / this.pageSize;\n\n    if (direction === 'up') {\n      offset = Math.ceil(offset);\n    } else if (direction === 'down') {\n      offset = Math.floor(offset);\n    }\n\n    if (direction !== undefined && !isNaN(offset)) {\n      this.page.emit({ offset });\n    }\n  }\n\n  /**\n   * Updates the rows in the view port\n   */\n  updateRows(): void {\n    const { first, last } = this.indexes;\n    let rowIndex = first;\n    let idx = 0;\n    const temp: any[] = [];\n\n    // if grouprowsby has been specified treat row paging\n    // parameters as group paging parameters ie if limit 10 has been\n    // specified treat it as 10 groups rather than 10 rows\n    if (this.groupedRows) {\n      let maxRowsPerGroup = 3;\n      // if there is only one group set the maximum number of\n      // rows per group the same as the total number of rows\n      if (this.groupedRows.length === 1) {\n        maxRowsPerGroup = this.groupedRows[0].value.length;\n      }\n\n      while (rowIndex < last && rowIndex < this.groupedRows.length) {\n        // Add the groups into this page\n        const group = this.groupedRows[rowIndex];\n        this.rowIndexes.set(group, rowIndex);\n\n        if (group.value) {\n          // add indexes for each group item\n          group.value.forEach((g: any, i: number) => {\n            const _idx = `${rowIndex}-${i}`;\n            this.rowIndexes.set(g, _idx);\n          });\n        }\n        temp[idx] = group;\n        idx++;\n\n        // Group index in this context\n        rowIndex++;\n      }\n    } else {\n      while (rowIndex < last && rowIndex < this.rowCount) {\n        const row = this.rows[rowIndex];\n\n        if (row) {\n          // add indexes for each row\n          this.rowIndexes.set(row, rowIndex);\n          temp[idx] = row;\n        }\n\n        idx++;\n        rowIndex++;\n      }\n    }\n\n    this.temp = temp;\n  }\n\n  /**\n   * Get the row height\n   */\n  getRowHeight(row: any): number {\n    // if its a function return it\n    if (typeof this.rowHeight === 'function') {\n      return this.rowHeight(row);\n    }\n\n    return this.rowHeight as number;\n  }\n\n  /**\n   * @param group the group with all rows\n   */\n  getGroupHeight(group: any): number {\n    let rowHeight = 0;\n\n    if (group.value) {\n      for (let index = 0; index < group.value.length; index++) {\n        rowHeight += this.getRowAndDetailHeight(group.value[index]);\n      }\n    }\n\n    return rowHeight;\n  }\n\n  /**\n   * Calculate row height based on the expanded state of the row.\n   */\n  getRowAndDetailHeight(row: any): number {\n    let rowHeight = this.getRowHeight(row);\n    const expanded = this.getRowExpanded(row);\n\n    // Adding detail row height if its expanded.\n    if (expanded) {\n      rowHeight += this.getDetailRowHeight(row);\n    }\n\n    return rowHeight;\n  }\n\n  /**\n   * Get the height of the detail row.\n   */\n  getDetailRowHeight = (row?: any, index?: any): number => {\n    if (!this.rowDetail) {\n      return 0;\n    }\n    const rowHeight = this.rowDetail.rowHeight;\n    return typeof rowHeight === 'function' ? rowHeight(row, index) : (rowHeight as number);\n  };\n\n  /**\n   * Calculates the styles for the row so that the rows can be moved in 2D space\n   * during virtual scroll inside the DOM.   In the below case the Y position is\n   * manipulated.   As an example, if the height of row 0 is 30 px and row 1 is\n   * 100 px then following styles are generated:\n   *\n   * transform: translate3d(0px, 0px, 0px);    ->  row0\n   * transform: translate3d(0px, 30px, 0px);   ->  row1\n   * transform: translate3d(0px, 130px, 0px);  ->  row2\n   *\n   * Row heights have to be calculated based on the row heights cache as we wont\n   * be able to determine which row is of what height before hand.  In the above\n   * case the positionY of the translate3d for row2 would be the sum of all the\n   * heights of the rows before it (i.e. row0 and row1).\n   *\n   * @param rows the row that needs to be placed in the 2D space.\n   * @returns the CSS3 style to be applied\n   *\n   * @memberOf DataTableBodyComponent\n   */\n  getRowsStyles(rows: any): any {\n    const styles: any = {};\n\n    // only add styles for the group if there is a group\n    if (this.groupedRows) {\n      styles.width = this.columnGroupWidths.total;\n    }\n\n    if (this.scrollbarV && this.virtualization) {\n      let idx = 0;\n\n      if (this.groupedRows) {\n        // Get the latest row rowindex in a group\n        const row = rows[rows.length - 1];\n        idx = row ? this.getRowIndex(row) : 0;\n      } else {\n        idx = this.getRowIndex(rows);\n      }\n\n      // const pos = idx * rowHeight;\n      // The position of this row would be the sum of all row heights\n      // until the previous row position.\n      const pos = this.rowHeightsCache.query(idx - 1);\n\n      translateXY(styles, 0, pos);\n    }\n\n    return styles;\n  }\n\n  /**\n   * Calculate bottom summary row offset for scrollbar mode.\n   * For more information about cache and offset calculation\n   * see description for `getRowsStyles` method\n   *\n   * @returns the CSS3 style to be applied\n   *\n   * @memberOf DataTableBodyComponent\n   */\n  getBottomSummaryRowStyles(): any {\n    if (!this.scrollbarV || !this.rows || !this.rows.length) {\n      return null;\n    }\n\n    const styles = { position: 'absolute' };\n    const pos = this.rowHeightsCache.query(this.rows.length - 1);\n\n    translateXY(styles, 0, pos);\n\n    return styles;\n  }\n\n  /**\n   * Hides the loading indicator\n   */\n  hideIndicator(): void {\n    setTimeout(() => (this.loadingIndicator = false), 500);\n  }\n\n  /**\n   * Updates the index of the rows in the viewport\n   */\n  updateIndexes(): void {\n    let first = 0;\n    let last = 0;\n\n    if (this.scrollbarV) {\n      if (this.virtualization) {\n        // Calculation of the first and last indexes will be based on where the\n        // scrollY position would be at.  The last index would be the one\n        // that shows up inside the view port the last.\n        const height = parseInt(this.bodyHeight, 0);\n        first = this.rowHeightsCache.getRowIndex(this.offsetY);\n        last = this.rowHeightsCache.getRowIndex(height + this.offsetY) + 1;\n      } else {\n        // If virtual rows are not needed\n        // We render all in one go\n        first = 0;\n        last = this.rowCount;\n      }\n    } else {\n      // The server is handling paging and will pass an array that begins with the\n      // element at a specified offset.  first should always be 0 with external paging.\n      if (!this.externalPaging) {\n        first = Math.max(this.offset * this.pageSize, 0);\n      }\n      last = Math.min(first + this.pageSize, this.rowCount);\n    }\n\n    this.indexes = { first, last };\n  }\n\n  /**\n   * Refreshes the full Row Height cache.  Should be used\n   * when the entire row array state has changed.\n   */\n  refreshRowHeightCache(): void {\n    if (!this.scrollbarV || (this.scrollbarV && !this.virtualization)) {\n      return;\n    }\n\n    // clear the previous row height cache if already present.\n    // this is useful during sorts, filters where the state of the\n    // rows array is changed.\n    this.rowHeightsCache.clearCache();\n\n    // Initialize the tree only if there are rows inside the tree.\n    if (this.rows && this.rows.length) {\n      const rowExpansions = new Set();\n      for (const row of this.rows) {\n        if (this.getRowExpanded(row)) {\n          rowExpansions.add(row);\n        }\n      }\n\n      this.rowHeightsCache.initCache({\n        rows: this.rows,\n        rowHeight: this.rowHeight,\n        detailRowHeight: this.getDetailRowHeight,\n        externalVirtual: this.scrollbarV && this.externalPaging,\n        rowCount: this.rowCount,\n        rowIndexes: this.rowIndexes,\n        rowExpansions\n      });\n    }\n  }\n\n  /**\n   * Gets the index for the view port\n   */\n  getAdjustedViewPortIndex(): number {\n    // Capture the row index of the first row that is visible on the viewport.\n    // If the scroll bar is just below the row which is highlighted then make that as the\n    // first index.\n    const viewPortFirstRowIndex = this.indexes.first;\n\n    if (this.scrollbarV && this.virtualization) {\n      const offsetScroll = this.rowHeightsCache.query(viewPortFirstRowIndex - 1);\n      return offsetScroll <= this.offsetY ? viewPortFirstRowIndex - 1 : viewPortFirstRowIndex;\n    }\n\n    return viewPortFirstRowIndex;\n  }\n\n  /**\n   * Toggle the Expansion of the row i.e. if the row is expanded then it will\n   * collapse and vice versa.   Note that the expanded status is stored as\n   * a part of the row object itself as we have to preserve the expanded row\n   * status in case of sorting and filtering of the row set.\n   */\n  toggleRowExpansion(row: any): void {\n    // Capture the row index of the first row that is visible on the viewport.\n    const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n    const rowExpandedIdx = this.getRowExpandedIdx(row, this.rowExpansions);\n    const expanded = rowExpandedIdx > -1;\n\n    // If the detailRowHeight is auto --> only in case of non-virtualized scroll\n    if (this.scrollbarV && this.virtualization) {\n      const detailRowHeight = this.getDetailRowHeight(row) * (expanded ? -1 : 1);\n      // const idx = this.rowIndexes.get(row) || 0;\n      const idx = this.getRowIndex(row);\n      this.rowHeightsCache.update(idx, detailRowHeight);\n    }\n\n    // Update the toggled row and update thive nevere heights in the cache.\n    if (expanded) {\n      this.rowExpansions.splice(rowExpandedIdx, 1);\n    } else {\n      this.rowExpansions.push(row);\n    }\n\n    this.detailToggle.emit({\n      rows: [row],\n      currentIndex: viewPortFirstRowIndex\n    });\n  }\n\n  /**\n   * Expand/Collapse all the rows no matter what their state is.\n   */\n  toggleAllRows(expanded: boolean): void {\n    // clear prev expansions\n    this.rowExpansions = [];\n\n    // Capture the row index of the first row that is visible on the viewport.\n    const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n\n    if (expanded) {\n      for (const row of this.rows) {\n        this.rowExpansions.push(row);\n      }\n    }\n\n    if (this.scrollbarV) {\n      // Refresh the full row heights cache since every row was affected.\n      this.recalcLayout();\n    }\n\n    // Emit all rows that have been expanded.\n    this.detailToggle.emit({\n      rows: this.rows,\n      currentIndex: viewPortFirstRowIndex\n    });\n  }\n\n  /**\n   * Recalculates the table\n   */\n  recalcLayout(): void {\n    this.refreshRowHeightCache();\n    this.updateIndexes();\n    this.updateRows();\n  }\n\n  /**\n   * Tracks the column\n   */\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  /**\n   * Gets the row pinning group styles\n   */\n  stylesByGroup(group: string) {\n    const widths = this.columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'left') {\n      translateXY(styles, offsetX, 0);\n    } else if (group === 'right') {\n      const bodyWidth = parseInt(this.innerWidth + '', 0);\n      const totalDiff = widths.total - bodyWidth;\n      const offsetDiff = totalDiff - offsetX;\n      const offset = offsetDiff * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n\n  /**\n   * Returns if the row was expanded and set default row expansion when row expansion is empty\n   */\n  getRowExpanded(row: any): boolean {\n    if (this.rowExpansions.length === 0 && this.groupExpansionDefault) {\n      for (const group of this.groupedRows) {\n        this.rowExpansions.push(group);\n      }\n    }\n\n    return this.getRowExpandedIdx(row, this.rowExpansions) > -1;\n  }\n\n  getRowExpandedIdx(row: any, expanded: any[]): number {\n    if (!expanded || !expanded.length) return -1;\n\n    const rowId = this.rowIdentity(row);\n    return expanded.findIndex(r => {\n      const id = this.rowIdentity(r);\n      return id === rowId;\n    });\n  }\n\n  /**\n   * Gets the row index given a row\n   */\n  getRowIndex(row: any): number {\n    return this.rowIndexes.get(row) || 0;\n  }\n\n  onTreeAction(row: any) {\n    this.treeAction.emit({ row });\n  }\n}\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'full-screen-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Full Screen\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/fullscreen.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material fullscreen\"\r\n        style=\"top: 52px\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"0\"\r\n        [rowHeight]=\"50\"\r\n        [scrollbarV]=\"true\"\r\n        [scrollbarH]=\"true\"\r\n        [rows]=\"rows\"\r\n      >\r\n        <ngx-datatable-column name=\"Id\" [width]=\"80\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Name\" [width]=\"300\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"City\" [width]=\"300\" prop=\"address.city\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"State\" [width]=\"300\" prop=\"address.state\"></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class FullScreenComponent {\r\n  rows = [];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'row-css-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Row/Header/Cell CSS Class Demo\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/css.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [rowHeight]=\"50\"\r\n        [rowClass]=\"getRowClass\"\r\n        [scrollbarV]=\"true\"\r\n      >\r\n        <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" headerClass=\"is-gender\" [cellClass]=\"getCellClass\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class RowCssComponent {\r\n  rows = [];\r\n  expanded = {};\r\n  timeout: any;\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      const rows = JSON.parse(req.response);\r\n      cb(rows.splice(0, 50));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  getRowClass(row) {\r\n    return {\r\n      'age-is-ten': row.age % 10 === 0\r\n    };\r\n  }\r\n\r\n  getCellClass({ row, column, value }): any {\r\n    return {\r\n      'is-female': value === 'female'\r\n    };\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'basic-auto-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Fluid Row Heights\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/basic-auto.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows\"\r\n        [loadingIndicator]=\"loadingIndicator\"\r\n        [columns]=\"columns\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n        [reorderable]=\"reorderable\"\r\n      >\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class BasicAutoComponent {\r\n  rows = [];\r\n  loadingIndicator = true;\r\n  reorderable = true;\r\n\r\n  columns = [{ prop: 'name' }, { name: 'Gender' }, { name: 'Company', sortable: false }];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n      setTimeout(() => {\r\n        this.loadingIndicator = false;\r\n      }, 1500);\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n}\r\n","/**\r\n * A model for an individual corporate employee\r\n */\r\nexport class CorporateEmployee {\r\n  name: string;\r\n  gender: string;\r\n  company: string;\r\n  age: number;\r\n\r\n  constructor(name: string, gender: string, company: string, age: number) {\r\n    this.name = name;\r\n    this.gender = gender;\r\n    this.company = company;\r\n    this.age = age;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MockServerResultsService } from './mock-server-results-service';\r\nimport { CorporateEmployee } from './model/corporate-employee';\r\nimport { Page } from './model/page';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\nimport { delay } from 'rxjs/operators';\r\n\r\ninterface PageInfo {\r\n  offset: number;\r\n  pageSize: number;\r\n  limit: number;\r\n  count: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'virtual-paging-demo',\r\n  providers: [MockServerResultsService],\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Virtual Server-side Paging\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/paging/paging-virtual.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows\"\r\n        [columns]=\"[\r\n          { name: 'Name', sortable: false },\r\n          { name: 'Gender', sortable: false },\r\n          { name: 'Company', sortable: false }\r\n        ]\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [loadingIndicator]=\"isLoading > 0\"\r\n        [scrollbarV]=\"true\"\r\n        [footerHeight]=\"50\"\r\n        [rowHeight]=\"50\"\r\n        [externalPaging]=\"true\"\r\n        [externalSorting]=\"true\"\r\n        [count]=\"totalElements\"\r\n        [offset]=\"pageNumber\"\r\n        (page)=\"setPage($event)\"\r\n      >\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class VirtualPagingComponent {\r\n  totalElements: number;\r\n  pageNumber: number;\r\n  rows: CorporateEmployee[];\r\n  cache: any = {};\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  isLoading = 0;\r\n\r\n  constructor(private serverResultsService: MockServerResultsService) {\r\n    this.pageNumber = 0;\r\n  }\r\n\r\n  setPage(pageInfo: PageInfo) {\r\n    // current page number is determined by last call to setPage\r\n    this.pageNumber = pageInfo.offset;\r\n\r\n    // don't load same data twice\r\n    if (this.cache[pageInfo.offset]) return;\r\n    this.cache[pageInfo.offset] = true;\r\n\r\n    // counter of pages loading\r\n    this.isLoading++;\r\n\r\n    // class to idendify loading page\r\n    const page = new Page();\r\n    page.pageNumber = pageInfo.offset;\r\n    page.size = pageInfo.pageSize;\r\n\r\n    this.serverResultsService\r\n      .getResults(page)\r\n      .pipe(delay(new Date(Date.now() + 1000 * Math.random()))) // simulating variability in returned data\r\n      .subscribe(pagedData => {\r\n        // update total count\r\n        this.totalElements = pagedData.page.totalElements;\r\n\r\n        // create array to store data if missing\r\n        if (!this.rows) {\r\n          // length should be total count\r\n          this.rows = new Array<CorporateEmployee>(pagedData.page.totalElements || 0);\r\n        }\r\n\r\n        // calc starting index\r\n        const start = pagedData.page.pageNumber * pagedData.page.size;\r\n\r\n        // copy existing data\r\n        const rows = [...this.rows];\r\n\r\n        // insert new rows into new position\r\n        rows.splice(start, pagedData.page.size, ...pagedData.data);\r\n\r\n        // set rows to our new rows\r\n        this.rows = rows;\r\n\r\n        this.isLoading--;\r\n      });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'summary-row-simple-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Simple Summary Row\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/summary/summary-row-simple.component.ts\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <div class=\"controls\">\r\n        <div>\r\n          <input\r\n            id=\"enable-summary\"\r\n            type=\"checkbox\"\r\n            [checked]=\"enableSummary\"\r\n            (change)=\"enableSummary = !enableSummary\"\r\n          />\r\n          <label for=\"enable-summary\">Enable Summary Row</label>\r\n        </div>\r\n        <div>\r\n          <label for=\"position-select\">Position</label>\r\n          <select id=\"position-select\" (change)=\"onPositionSelectChange($event)\">\r\n            <option [value]=\"'top'\">Top</option>\r\n            <option [value]=\"'bottom'\">Bottom</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [summaryRow]=\"enableSummary\"\r\n        [summaryPosition]=\"summaryPosition\"\r\n        [columns]=\"columns\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n        [summaryHeight]=\"55\"\r\n        [rows]=\"rows\"\r\n      >\r\n      </ngx-datatable>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./summary-row-simple.component.scss']\r\n})\r\nexport class SummaryRowSimpleComponent {\r\n  rows = [];\r\n\r\n  columns = [\r\n    { prop: 'name', summaryFunc: null },\r\n    { name: 'Gender', summaryFunc: cells => this.summaryForGender(cells) },\r\n    { prop: 'age', summaryFunc: cells => this.avgAge(cells) }\r\n  ];\r\n\r\n  enableSummary = true;\r\n  summaryPosition = 'top';\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb: (data: [unknown]) => void) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  onPositionSelectChange($event: Event) {\r\n    const target = $event.target as HTMLSelectElement;\r\n    this.summaryPosition = target.value;\r\n  }\r\n\r\n  private summaryForGender(cells: string[]) {\r\n    const males = cells.filter(cell => cell === 'male').length;\r\n    const females = cells.filter(cell => cell === 'female').length;\r\n\r\n    return `males: ${males}, females: ${females}`;\r\n  }\r\n\r\n  private avgAge(cells: number[]): number {\r\n    const filteredCells = cells.filter(cell => !!cell);\r\n    return filteredCells.reduce((sum, cell) => (sum += cell), 0) / filteredCells.length;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'client-paging-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Client-side Paging\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/paging/paging-client.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows\"\r\n        [columns]=\"[{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }]\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n        [limit]=\"10\"\r\n      >\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class ClientPagingComponent {\r\n  rows = [];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'virtual-scroll-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Virtual Scrolling with 10k Rows\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/virtual.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        [rowHeight]=\"getRowHeight\"\r\n        [scrollbarV]=\"true\"\r\n        (page)=\"onPage($event)\"\r\n      >\r\n        <ngx-datatable-column name=\"Name\" [width]=\"300\">\r\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n            <strong>{{ value }}</strong>\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" [width]=\"300\">\r\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n            <i [innerHTML]=\"row['name']\"></i> and <i>{{ value }}</i>\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Row Height\" prop=\"height\" [width]=\"80\"> </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class VirtualScrollComponent {\r\n  rows;\r\n  expanded = {};\r\n  timeout: any;\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  onPage(event) {\r\n    clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      console.log('paged!', event);\r\n    }, 100);\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      const rows = JSON.parse(req.response);\r\n\r\n      for (const row of rows) {\r\n        row.height = Math.floor(Math.random() * 80) + 50;\r\n      }\r\n\r\n      cb(rows);\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  getRowHeight(row) {\r\n    return row.height;\r\n  }\r\n}\r\n","export enum SortDirection {\r\n  asc = 'asc',\r\n  desc = 'desc'\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'inline-templates-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Expressive Templates\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/templates/template-dom.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n      >\r\n        <ngx-datatable-column name=\"Name\">\r\n          <ng-template let-column=\"column\" ngx-datatable-header-template> Holla! {{ column.name }} </ng-template>\r\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n            Hi: <strong>{{ value }}</strong>\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\">\r\n          <ng-template let-column=\"column\" let-sort=\"sortFn\" ngx-datatable-header-template>\r\n            <span (click)=\"sort()\">{{ column.name }}</span>\r\n          </ng-template>\r\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n            My name is: <i [innerHTML]=\"row['name']\"></i> and <i>{{ value }}</i>\r\n            <div>{{ joke }}</div>\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\">\r\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n            <div style=\"border:solid 1px #ddd;margin:5px;padding:3px\">\r\n              <div style=\"background:#999;height:10px\" [style.width]=\"value + '%'\"></div>\r\n            </div>\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class InlineTemplatesComponent {\r\n  rows = [];\r\n  joke = 'knock knock';\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n}\r\n","import { getterForProp } from './column-prop-getters';\r\nimport { TableColumnProp } from '../types/table-column.type';\r\n\r\nexport type OptionalValueGetter = (row: any) => any | undefined;\r\nexport function optionalGetterForProp(prop: TableColumnProp): OptionalValueGetter {\r\n  return prop && (row => getterForProp(prop)(row, prop));\r\n}\r\n\r\n/**\r\n * This functions rearrange items by their parents\r\n * Also sets the level value to each of the items\r\n *\r\n * Note: Expecting each item has a property called parentId\r\n * Note: This algorithm will fail if a list has two or more items with same ID\r\n * NOTE: This algorithm will fail if there is a deadlock of relationship\r\n *\r\n * For example,\r\n *\r\n * Input\r\n *\r\n * id -> parent\r\n * 1  -> 0\r\n * 2  -> 0\r\n * 3  -> 1\r\n * 4  -> 1\r\n * 5  -> 2\r\n * 7  -> 8\r\n * 6  -> 3\r\n *\r\n *\r\n * Output\r\n * id -> level\r\n * 1      -> 0\r\n * --3    -> 1\r\n * ----6  -> 2\r\n * --4    -> 1\r\n * 2      -> 0\r\n * --5    -> 1\r\n * 7     -> 8\r\n *\r\n *\r\n * @param rows\r\n *\r\n */\r\nexport function groupRowsByParents(rows: any[], from?: OptionalValueGetter, to?: OptionalValueGetter): any[] {\r\n  if (from && to) {\r\n    const nodeById = {};\r\n    const l = rows.length;\r\n    let node: TreeNode | null = null;\r\n\r\n    nodeById[0] = new TreeNode(); // that's the root node\r\n\r\n    const uniqIDs = rows.reduce((arr, item) => {\r\n      const toValue = to(item);\r\n      if (arr.indexOf(toValue) === -1) {\r\n        arr.push(toValue);\r\n      }\r\n      return arr;\r\n    }, []);\r\n\r\n    for (let i = 0; i < l; i++) {\r\n      // make TreeNode objects for each item\r\n      nodeById[to(rows[i])] = new TreeNode(rows[i]);\r\n    }\r\n\r\n    for (let i = 0; i < l; i++) {\r\n      // link all TreeNode objects\r\n      node = nodeById[to(rows[i])];\r\n      let parent = 0;\r\n      const fromValue = from(node.row);\r\n      if (!!fromValue && uniqIDs.indexOf(fromValue) > -1) {\r\n        parent = fromValue;\r\n      }\r\n      node.parent = nodeById[parent];\r\n      node.row['level'] = node.parent.row['level'] + 1;\r\n      node.parent.children.push(node);\r\n    }\r\n\r\n    let resolvedRows: any[] = [];\r\n    nodeById[0].flatten(function () {\r\n      resolvedRows = [...resolvedRows, this.row];\r\n    }, true);\r\n\r\n    return resolvedRows;\r\n  } else {\r\n    return rows;\r\n  }\r\n}\r\n\r\nclass TreeNode {\r\n  public row: any;\r\n  public parent: any;\r\n  public children: any[];\r\n\r\n  constructor(row: any | null = null) {\r\n    if (!row) {\r\n      row = {\r\n        level: -1,\r\n        treeStatus: 'expanded'\r\n      };\r\n    }\r\n    this.row = row;\r\n    this.parent = null;\r\n    this.children = [];\r\n  }\r\n\r\n  flatten(f: any, recursive: boolean) {\r\n    if (this.row['treeStatus'] === 'expanded') {\r\n      for (let i = 0, l = this.children.length; i < l; i++) {\r\n        const child = this.children[i];\r\n        f.apply(child, Array.prototype.slice.call(arguments, 2));\r\n        if (recursive) child.flatten.apply(child, arguments);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ngx-datatable-group-header-template]'\r\n})\r\nexport class DatatableGroupHeaderTemplateDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'row-details-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Row Detail Demo\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/row-detail.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n        <small>\r\n          <a href=\"javascript:void(0)\" (click)=\"table.rowDetail.expandAllRows()\">Expand All</a>\r\n          |\r\n          <a href=\"javascript:void(0)\" (click)=\"table.rowDetail.collapseAllRows()\">Collapse All</a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        #myTable\r\n        class=\"material expandable\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        [rowHeight]=\"50\"\r\n        [scrollbarV]=\"true\"\r\n        [rows]=\"rows\"\r\n        (page)=\"onPage($event)\"\r\n      >\r\n        <!-- Row Detail Template -->\r\n        <ngx-datatable-row-detail [rowHeight]=\"100\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\r\n          <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\r\n            <div style=\"padding-left:35px;\">\r\n              <div><strong>Address</strong></div>\r\n              <div>{{ row.address.city }}, {{ row.address.state }}</div>\r\n            </div>\r\n          </ng-template>\r\n        </ngx-datatable-row-detail>\r\n\r\n        <!-- Column Templates -->\r\n        <ngx-datatable-column\r\n          [width]=\"50\"\r\n          [resizeable]=\"false\"\r\n          [sortable]=\"false\"\r\n          [draggable]=\"false\"\r\n          [canAutoResize]=\"false\"\r\n        >\r\n          <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\r\n            <a\r\n              href=\"javascript:void(0)\"\r\n              [class.datatable-icon-right]=\"!expanded\"\r\n              [class.datatable-icon-down]=\"expanded\"\r\n              title=\"Expand/Collapse Row\"\r\n              (click)=\"toggleExpandRow(row)\"\r\n            >\r\n            </a>\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Index\" [width]=\"80\">\r\n          <ng-template let-rowIndex=\"rowIndex\" let-row=\"row\" ngx-datatable-cell-template>\r\n            <strong>{{ rowIndex }}</strong>\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Expanded\" [width]=\"80\">\r\n          <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\r\n            <strong>{{ expanded === 1 }}</strong>\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Name\" [width]=\"200\">\r\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n            <strong>{{ value }}</strong>\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" [width]=\"300\">\r\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n            <i [innerHTML]=\"row['name']\"></i> and <i>{{ value }}</i>\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class RowDetailsComponent {\r\n  @ViewChild('myTable') table: any;\r\n\r\n  rows: any[] = [];\r\n  expanded: any = {};\r\n  timeout: any;\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  onPage(event) {\r\n    clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      console.log('paged!', event);\r\n    }, 100);\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/100k.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  toggleExpandRow(row) {\r\n    console.log('Toggled Expand Row!', row);\r\n    this.table.rowDetail.toggleExpandRow(row);\r\n  }\r\n\r\n  onDetailToggle(event) {\r\n    console.log('Detail Toggled', event);\r\n  }\r\n}\r\n","import { Directive, TemplateRef, ContentChild, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { DataTableColumnHeaderDirective } from './column-header.directive';\r\nimport { DataTableColumnCellDirective } from './column-cell.directive';\r\nimport { DataTableColumnCellTreeToggle } from './tree.directive';\r\nimport { ColumnChangesService } from '../../services/column-changes.service';\r\nimport { TableColumnProp } from '../../types/table-column.type';\r\n\r\n@Directive({ selector: 'ngx-datatable-column' })\r\nexport class DataTableColumnDirective implements OnChanges {\r\n  @Input() name: string;\r\n  @Input() prop: TableColumnProp;\r\n  @Input() frozenLeft: any;\r\n  @Input() frozenRight: any;\r\n  @Input() flexGrow: number;\r\n  @Input() resizeable: boolean;\r\n  @Input() comparator: any;\r\n  @Input() pipe: any;\r\n  @Input() sortable: boolean;\r\n  @Input() draggable: boolean;\r\n  @Input() canAutoResize: boolean;\r\n  @Input() minWidth: number;\r\n  @Input() width: number;\r\n  @Input() maxWidth: number;\r\n  @Input() checkboxable: boolean;\r\n  @Input() headerCheckboxable: boolean;\r\n  @Input() headerClass: string | ((data: any) => string | any);\r\n  @Input() cellClass: string | ((data: any) => string | any);\r\n  @Input() isTreeColumn: boolean;\r\n  @Input() treeLevelIndent: number;\r\n  @Input() summaryFunc: (cells: any[]) => any;\r\n  @Input() summaryTemplate: TemplateRef<any>;\r\n\r\n  @Input('cellTemplate')\r\n  _cellTemplateInput: TemplateRef<any>;\r\n\r\n  @ContentChild(DataTableColumnCellDirective, { read: TemplateRef, static: true })\r\n  _cellTemplateQuery: TemplateRef<any>;\r\n\r\n  get cellTemplate(): TemplateRef<any> {\r\n    return this._cellTemplateInput || this._cellTemplateQuery;\r\n  }\r\n\r\n  @Input('headerTemplate')\r\n  _headerTemplateInput: TemplateRef<any>;\r\n\r\n  @ContentChild(DataTableColumnHeaderDirective, { read: TemplateRef, static: true })\r\n  _headerTemplateQuery: TemplateRef<any>;\r\n\r\n  get headerTemplate(): TemplateRef<any> {\r\n    return this._headerTemplateInput || this._headerTemplateQuery;\r\n  }\r\n\r\n  @Input('treeToggleTemplate')\r\n  _treeToggleTemplateInput: TemplateRef<any>;\r\n\r\n  @ContentChild(DataTableColumnCellTreeToggle, { read: TemplateRef, static: true })\r\n  _treeToggleTemplateQuery: TemplateRef<any>;\r\n\r\n  get treeToggleTemplate(): TemplateRef<any> {\r\n    return this._treeToggleTemplateInput || this._treeToggleTemplateQuery;\r\n  }\r\n\r\n  private isFirstChange = true;\r\n\r\n  constructor(private columnChangesService: ColumnChangesService) {}\r\n\r\n  ngOnChanges() {\r\n    if (this.isFirstChange) {\r\n      this.isFirstChange = false;\r\n    } else {\r\n      this.columnChangesService.onInputChange();\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'default-sorting-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Client-side Sorting\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/sorting/sorting-default.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        [rowHeight]=\"50\"\r\n        [scrollbarV]=\"true\"\r\n        [sorts]=\"[{ prop: 'name', dir: 'desc' }]\"\r\n      >\r\n        <ngx-datatable-column name=\"Company\">\r\n          <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n            {{ row.company }}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n\r\n        <ngx-datatable-column name=\"Name\">\r\n          <ng-template let-row=\"row\" ngx-datatable-cell-template>\r\n            {{ row.name }}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n\r\n        <ngx-datatable-column name=\"Gender\"> </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class DefaultSortingComponent implements OnInit {\r\n  rows = [];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  ngOnInit() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      const data = JSON.parse(req.response);\r\n      cb(data);\r\n    };\r\n\r\n    req.send();\r\n  }\r\n}\r\n","import { Input, Directive, TemplateRef, ContentChild } from '@angular/core';\r\nimport { DataTableFooterTemplateDirective } from './footer-template.directive';\r\n\r\n@Directive({ selector: 'ngx-datatable-footer' })\r\nexport class DatatableFooterDirective {\r\n  @Input() footerHeight: number;\r\n  @Input() totalMessage: string;\r\n  @Input() selectedMessage: string | boolean;\r\n  @Input() pagerLeftArrowIcon: string;\r\n  @Input() pagerRightArrowIcon: string;\r\n  @Input() pagerPreviousIcon: string;\r\n  @Input() pagerNextIcon: string;\r\n\r\n  @Input('template')\r\n  _templateInput: TemplateRef<any>;\r\n\r\n  @ContentChild(DataTableFooterTemplateDirective, { read: TemplateRef })\r\n  _templateQuery: TemplateRef<any>;\r\n\r\n  get template(): TemplateRef<any> {\r\n    return this._templateInput || this._templateQuery;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'inline-edit-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Inline Editing\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/inline.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        #mydatatable\r\n        class=\"material\"\r\n        [headerHeight]=\"50\"\r\n        [limit]=\"5\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [footerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n        [rows]=\"rows\"\r\n      >\r\n        <ngx-datatable-column name=\"Name\">\r\n          <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\" let-row=\"row\">\r\n            <span\r\n              title=\"Double click to edit\"\r\n              (dblclick)=\"editing[rowIndex + '-name'] = true\"\r\n              *ngIf=\"!editing[rowIndex + '-name']\"\r\n            >\r\n              {{ value }}\r\n            </span>\r\n            <input\r\n              autofocus\r\n              (blur)=\"updateValue($event, 'name', rowIndex)\"\r\n              *ngIf=\"editing[rowIndex + '-name']\"\r\n              type=\"text\"\r\n              [value]=\"value\"\r\n            />\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\">\r\n          <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-row=\"row\" let-value=\"value\">\r\n            <span\r\n              title=\"Double click to edit\"\r\n              (dblclick)=\"editing[rowIndex + '-gender'] = true\"\r\n              *ngIf=\"!editing[rowIndex + '-gender']\"\r\n            >\r\n              {{ value }}\r\n            </span>\r\n            <select\r\n              *ngIf=\"editing[rowIndex + '-gender']\"\r\n              (blur)=\"editing[rowIndex + '-gender'] = false\"\r\n              (change)=\"updateValue($event, 'gender', rowIndex)\"\r\n              [value]=\"value\"\r\n            >\r\n              <option value=\"male\">Male</option>\r\n              <option value=\"female\">Female</option>\r\n            </select>\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\">\r\n          <ng-template ngx-datatable-cell-template let-value=\"value\">\r\n            {{ value }}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class InlineEditComponent {\r\n  editing = {};\r\n  rows = [];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data;\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  updateValue(event, cell, rowIndex) {\r\n    console.log('inline editing rowIndex', rowIndex);\r\n    this.editing[rowIndex + '-' + cell] = false;\r\n    this.rows[rowIndex][cell] = event.target.value;\r\n    this.rows = [...this.rows];\r\n    console.log('UPDATED!', this.rows[rowIndex][cell]);\r\n  }\r\n}\r\n","export function selectRows(selected: any[], row: any, comparefn: any) {\r\n  const selectedIndex = comparefn(row, selected);\r\n\r\n  if (selectedIndex > -1) {\r\n    selected.splice(selectedIndex, 1);\r\n  } else {\r\n    selected.push(row);\r\n  }\r\n\r\n  return selected;\r\n}\r\n\r\nexport function selectRowsBetween(\r\n  selected: any[],\r\n  rows: any[],\r\n  index: number,\r\n  prevIndex: number,\r\n  comparefn: any\r\n): any[] {\r\n  const reverse = index < prevIndex;\r\n\r\n  for (let i = 0; i < rows.length; i++) {\r\n    const row = rows[i];\r\n    const greater = i >= prevIndex && i <= index;\r\n    const lesser = i <= prevIndex && i >= index;\r\n\r\n    let range = { start: 0, end: 0 };\r\n    if (reverse) {\r\n      range = {\r\n        start: index,\r\n        end: prevIndex\r\n      };\r\n    } else {\r\n      range = {\r\n        start: prevIndex,\r\n        end: index + 1\r\n      };\r\n    }\r\n\r\n    if ((reverse && lesser) || (!reverse && greater)) {\r\n      // if in the positive range to be added to `selected`, and\r\n      // not already in the selected array, add it\r\n      if (i >= range.start && i <= range.end) {\r\n        selected.push(row);\r\n      }\r\n    }\r\n  }\r\n\r\n  return selected;\r\n}\r\n","/**\r\n * Creates a unique object id.\r\n * http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\r\n */\r\nexport function id() {\r\n  return ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\r\n}\r\n","import { columnsByPin, columnsTotalWidth } from './column';\r\n\r\n/**\r\n * Calculates the Total Flex Grow\r\n */\r\nexport function getTotalFlexGrow(columns: any[]) {\r\n  let totalFlexGrow = 0;\r\n\r\n  for (const c of columns) {\r\n    totalFlexGrow += c.flexGrow || 0;\r\n  }\r\n\r\n  return totalFlexGrow;\r\n}\r\n\r\n/**\r\n * Adjusts the column widths.\r\n * Inspired by: https://github.com/facebook/fixed-data-table/blob/master/src/FixedDataTableWidthHelper.js\r\n */\r\nexport function adjustColumnWidths(allColumns: any, expectedWidth: any) {\r\n  const columnsWidth = columnsTotalWidth(allColumns);\r\n  const totalFlexGrow = getTotalFlexGrow(allColumns);\r\n  const colsByGroup = columnsByPin(allColumns);\r\n\r\n  if (columnsWidth !== expectedWidth) {\r\n    scaleColumns(colsByGroup, expectedWidth, totalFlexGrow);\r\n  }\r\n}\r\n\r\n/**\r\n * Resizes columns based on the flexGrow property, while respecting manually set widths\r\n */\r\nfunction scaleColumns(colsByGroup: any, maxWidth: any, totalFlexGrow: any) {\r\n  // calculate total width and flexgrow points for coulumns that can be resized\r\n  for (const attr in colsByGroup) {\r\n    for (const column of colsByGroup[attr]) {\r\n      if (!column.canAutoResize) {\r\n        maxWidth -= column.width;\r\n        totalFlexGrow -= column.flexGrow ? column.flexGrow : 0;\r\n      } else {\r\n        column.width = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  const hasMinWidth = {};\r\n  let remainingWidth = maxWidth;\r\n\r\n  // resize columns until no width is left to be distributed\r\n  do {\r\n    const widthPerFlexPoint = remainingWidth / totalFlexGrow;\r\n    remainingWidth = 0;\r\n\r\n    for (const attr in colsByGroup) {\r\n      for (const column of colsByGroup[attr]) {\r\n        // if the column can be resize and it hasn't reached its minimum width yet\r\n        if (column.canAutoResize && !hasMinWidth[column.prop]) {\r\n          const newWidth = column.width + column.flexGrow * widthPerFlexPoint;\r\n          if (column.minWidth !== undefined && newWidth < column.minWidth) {\r\n            remainingWidth += newWidth - column.minWidth;\r\n            column.width = column.minWidth;\r\n            hasMinWidth[column.prop] = true;\r\n          } else {\r\n            column.width = newWidth;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } while (remainingWidth !== 0);\r\n}\r\n\r\n/**\r\n * Forces the width of the columns to\r\n * distribute equally but overflowing when necessary\r\n *\r\n * Rules:\r\n *\r\n *  - If combined withs are less than the total width of the grid,\r\n *    proportion the widths given the min / max / normal widths to fill the width.\r\n *\r\n *  - If the combined widths, exceed the total width of the grid,\r\n *    use the standard widths.\r\n *\r\n *  - If a column is resized, it should always use that width\r\n *\r\n *  - The proportional widths should never fall below min size if specified.\r\n *\r\n *  - If the grid starts off small but then becomes greater than the size ( + / - )\r\n *    the width should use the original width; not the newly proportioned widths.\r\n */\r\nexport function forceFillColumnWidths(\r\n  allColumns: any[],\r\n  expectedWidth: number,\r\n  startIdx: number,\r\n  allowBleed: boolean,\r\n  defaultColWidth: number = 300\r\n) {\r\n  const columnsToResize = allColumns.slice(startIdx + 1, allColumns.length).filter(c => {\r\n    return c.canAutoResize !== false;\r\n  });\r\n\r\n  for (const column of columnsToResize) {\r\n    if (!column.$$oldWidth) {\r\n      column.$$oldWidth = column.width;\r\n    }\r\n  }\r\n\r\n  let additionWidthPerColumn = 0;\r\n  let exceedsWindow = false;\r\n  let contentWidth = getContentWidth(allColumns, defaultColWidth);\r\n  let remainingWidth = expectedWidth - contentWidth;\r\n  const columnsProcessed: any[] = [];\r\n  const remainingWidthLimit = 1; // when to stop\r\n\r\n  // This loop takes care of the\r\n  do {\r\n    additionWidthPerColumn = remainingWidth / columnsToResize.length;\r\n    exceedsWindow = contentWidth >= expectedWidth;\r\n\r\n    for (const column of columnsToResize) {\r\n      if (exceedsWindow && allowBleed) {\r\n        column.width = column.$$oldWidth || column.width || defaultColWidth;\r\n      } else {\r\n        const newSize = (column.width || defaultColWidth) + additionWidthPerColumn;\r\n\r\n        if (column.minWidth && newSize < column.minWidth) {\r\n          column.width = column.minWidth;\r\n          columnsProcessed.push(column);\r\n        } else if (column.maxWidth && newSize > column.maxWidth) {\r\n          column.width = column.maxWidth;\r\n          columnsProcessed.push(column);\r\n        } else {\r\n          column.width = newSize;\r\n        }\r\n      }\r\n\r\n      column.width = Math.max(0, column.width);\r\n    }\r\n\r\n    contentWidth = getContentWidth(allColumns);\r\n    remainingWidth = expectedWidth - contentWidth;\r\n    removeProcessedColumns(columnsToResize, columnsProcessed);\r\n  } while (remainingWidth > remainingWidthLimit && columnsToResize.length !== 0);\r\n}\r\n\r\n/**\r\n * Remove the processed columns from the current active columns.\r\n */\r\nfunction removeProcessedColumns(columnsToResize: any[], columnsProcessed: any[]) {\r\n  for (const column of columnsProcessed) {\r\n    const index = columnsToResize.indexOf(column);\r\n    columnsToResize.splice(index, 1);\r\n  }\r\n}\r\n\r\n/**\r\n * Gets the width of the columns\r\n */\r\nfunction getContentWidth(allColumns: any, defaultColWidth: number = 300): number {\r\n  let contentWidth = 0;\r\n\r\n  for (const column of allColumns) {\r\n    contentWidth += column.width || defaultColWidth;\r\n  }\r\n\r\n  return contentWidth;\r\n}\r\n","import { TableColumnProp } from '../types/table-column.type';\r\n\r\n// maybe rename this file to prop-getters.ts\r\n\r\nexport type ValueGetter = (obj: any, prop: TableColumnProp) => any;\r\n\r\n/**\r\n * Always returns the empty string ''\r\n */\r\nexport function emptyStringGetter(): string {\r\n  return '';\r\n}\r\n\r\n/**\r\n * Returns the appropriate getter function for this kind of prop.\r\n * If prop == null, returns the emptyStringGetter.\r\n */\r\nexport function getterForProp(prop: TableColumnProp): ValueGetter {\r\n  if (prop == null) {\r\n    return emptyStringGetter;\r\n  }\r\n\r\n  if (typeof prop === 'number') {\r\n    return numericIndexGetter;\r\n  } else {\r\n    // deep or simple\r\n    if (prop.indexOf('.') !== -1) {\r\n      return deepValueGetter;\r\n    } else {\r\n      return shallowValueGetter;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the value at this numeric index.\r\n * @param row array of values\r\n * @param index numeric index\r\n * @returns any or '' if invalid index\r\n */\r\nexport function numericIndexGetter(row: any[], index: number): any {\r\n  if (row == null) {\r\n    return '';\r\n  }\r\n  // mimic behavior of deepValueGetter\r\n  if (!row || index == null) {\r\n    return row;\r\n  }\r\n\r\n  const value = row[index];\r\n  if (value == null) {\r\n    return '';\r\n  }\r\n  return value;\r\n}\r\n\r\n/**\r\n * Returns the value of a field.\r\n * (more efficient than deepValueGetter)\r\n * @param obj object containing the field\r\n * @param fieldName field name string\r\n */\r\nexport function shallowValueGetter(obj: any, fieldName: string): any {\r\n  if (obj == null) {\r\n    return '';\r\n  }\r\n  if (!obj || !fieldName) {\r\n    return obj;\r\n  }\r\n\r\n  const value = obj[fieldName];\r\n  if (value == null) {\r\n    return '';\r\n  }\r\n  return value;\r\n}\r\n\r\n/**\r\n * Returns a deep object given a string. zoo['animal.type']\r\n */\r\nexport function deepValueGetter(obj: any, path: string): any {\r\n  if (obj == null) {\r\n    return '';\r\n  }\r\n  if (!obj || !path) {\r\n    return obj;\r\n  }\r\n\r\n  // check if path matches a root-level field\r\n  // { \"a.b.c\": 123 }\r\n  let current = obj[path];\r\n  if (current !== undefined) {\r\n    return current;\r\n  }\r\n\r\n  current = obj;\r\n  const split = path.split('.');\r\n\r\n  if (split.length) {\r\n    for (let i = 0; i < split.length; i++) {\r\n      current = current[split[i]];\r\n\r\n      // if found undefined, return empty string\r\n      if (current === undefined || current === null) {\r\n        return '';\r\n      }\r\n    }\r\n  }\r\n\r\n  return current;\r\n}\r\n","export enum Keys {\r\n  up = 38,\r\n  down = 40,\r\n  return = 13,\r\n  escape = 27,\r\n  left = 37,\r\n  right = 39\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'column-standard-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Fixed Column Widths\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/columns/column-standard.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows\"\r\n        [columnMode]=\"ColumnMode.standard\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n      >\r\n        <ngx-datatable-column name=\"Name\" [width]=\"300\">\r\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n            {{ value }}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\" [width]=\"300\">\r\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\r\n            {{ value }}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Age\" [width]=\"300\">\r\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\r\n            {{ value }}\r\n          </ng-template>\r\n        </ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class ColumnStandardComponent {\r\n  rows = [];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n}\r\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'summary-row-custom-template-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Summary Row with Custom Template\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/summary/summary-row-custom-template.component.ts\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [summaryRow]=\"true\"\r\n        [columns]=\"columns\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [rowHeight]=\"'auto'\"\r\n        [summaryHeight]=\"55\"\r\n        [rows]=\"rows\"\r\n      >\r\n      </ngx-datatable>\r\n      <ng-template #nameSummaryCell let-row=\"row\" let-value=\"value\">\r\n        <div class=\"name-container\">\r\n          <div class=\"chip\" *ngFor=\"let name of getNames()\">\r\n            <span class=\"chip-content\">{{ name }}</span>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./summary-row-custom-template.component.scss']\r\n})\r\nexport class SummaryRowCustomTemplateComponent implements OnInit {\r\n  rows = [];\r\n\r\n  @ViewChild('nameSummaryCell')\r\n  nameSummaryCell: TemplateRef<any>;\r\n\r\n  columns = [];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.fetch(data => {\r\n      this.rows = data.splice(0, 5);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.columns = [\r\n      {\r\n        prop: 'name',\r\n        summaryFunc: () => null,\r\n        summaryTemplate: this.nameSummaryCell\r\n      },\r\n      { name: 'Gender', summaryFunc: cells => this.summaryForGender(cells) },\r\n      { prop: 'age', summaryFunc: cells => this.avgAge(cells) }\r\n    ];\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n\r\n  getNames(): string[] {\r\n    return this.rows.map(row => row.name).map(fullName => fullName.split(' ')[1]);\r\n  }\r\n\r\n  private summaryForGender(cells: string[]) {\r\n    const males = cells.filter(cell => cell === 'male').length;\r\n    const females = cells.filter(cell => cell === 'female').length;\r\n\r\n    return `males: ${males}, females: ${females}`;\r\n  }\r\n\r\n  private avgAge(cells: number[]): number {\r\n    const filteredCells = cells.filter(cell => !!cell);\r\n    return filteredCells.reduce((sum, cell) => (sum += cell), 0) / filteredCells.length;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MockServerResultsService } from '../paging/mock-server-results-service';\r\nimport { PagedData } from '../paging/model/paged-data';\r\nimport { CorporateEmployee } from '../paging/model/corporate-employee';\r\nimport { Page } from '../paging/model/page';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'summary-row-server-paging-demo',\r\n  providers: [MockServerResultsService],\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Server-side paging\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/summary/summary-row-server-paging.component.ts\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material\"\r\n        [rows]=\"rows\"\r\n        [columns]=\"columns\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [summaryRow]=\"true\"\r\n        [summaryHeight]=\"55\"\r\n        [footerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n        [externalPaging]=\"true\"\r\n        [count]=\"page.totalElements\"\r\n        [offset]=\"page.pageNumber\"\r\n        [limit]=\"page.size\"\r\n        (page)=\"setPage($event)\"\r\n      >\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class SummaryRowServerPagingComponent {\r\n  page = new Page();\r\n  rows = new Array<CorporateEmployee>();\r\n\r\n  columns = [\r\n    // NOTE: cells for current page only !\r\n    { name: 'Name', summaryFunc: cells => `${cells.length} total` },\r\n    { name: 'Gender', summaryFunc: () => this.getGenderSummary() },\r\n    { name: 'Company', summaryFunc: () => null }\r\n  ];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor(private serverResultsService: MockServerResultsService) {\r\n    this.page.pageNumber = 0;\r\n    this.page.size = 20;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setPage({ offset: 0 });\r\n  }\r\n\r\n  /**\r\n   * Populate the table with new data based on the page number\r\n   * @param page The page to select\r\n   */\r\n  setPage(pageInfo) {\r\n    this.page.pageNumber = pageInfo.offset;\r\n    this.serverResultsService.getResults(this.page).subscribe(pagedData => {\r\n      this.page = pagedData.page;\r\n      this.rows = pagedData.data;\r\n    });\r\n  }\r\n\r\n  getGenderSummary(): string {\r\n    // NOTE: there should be logic to get required informations from server\r\n    return '10 males, 10 females';\r\n  }\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ngx-datatable-row-detail-template]'\r\n})\r\nexport class DatatableRowDetailTemplateDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({ selector: '[ngx-datatable-footer-template]' })\r\nexport class DataTableFooterTemplateDirective {\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n","export enum ContextmenuType {\r\n  header = 'header',\r\n  body = 'body'\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'rx-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        RXjs Data\r\n        <small>\r\n          <a href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/rx.component.ts\" target=\"_blank\">\r\n            Source\r\n          </a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        class=\"material striped\"\r\n        [rows]=\"rows | async\"\r\n        [columns]=\"columns\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [headerHeight]=\"50\"\r\n        [footerHeight]=\"50\"\r\n        [rowHeight]=\"50\"\r\n      >\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class RxDemoComponent {\r\n  rows: Observable<any[]>;\r\n\r\n  columns = [{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor() {\r\n    this.rows = Observable.create(subscriber => {\r\n      this.fetch(data => {\r\n        subscriber.next(data.splice(0, 15));\r\n        subscriber.next(data.splice(15, 30));\r\n        subscriber.complete();\r\n      });\r\n    });\r\n\r\n    // Rx.DOM.ajax({ url: '/products', responseType: 'json'}).subscribe()\r\n    // this.rows = Observable.from(rows);\r\n  }\r\n\r\n  fetch(cb) {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ScrollbarHelper } from './services/scrollbar-helper.service';\r\nimport { DimensionsHelper } from './services/dimensions-helper.service';\r\nimport { ColumnChangesService } from './services/column-changes.service';\r\nimport { DataTableFooterTemplateDirective } from './components/footer/footer-template.directive';\r\nimport { VisibilityDirective } from './directives/visibility.directive';\r\nimport { DraggableDirective } from './directives/draggable.directive';\r\nimport { ResizeableDirective } from './directives/resizeable.directive';\r\nimport { OrderableDirective } from './directives/orderable.directive';\r\nimport { LongPressDirective } from './directives/long-press.directive';\r\nimport { ScrollerComponent } from './components/body/scroller.component';\r\nimport { DatatableComponent } from './components/datatable.component';\r\nimport { DataTableColumnDirective } from './components/columns/column.directive';\r\nimport { DataTableHeaderComponent } from './components/header/header.component';\r\nimport { DataTableHeaderCellComponent } from './components/header/header-cell.component';\r\nimport { DataTableBodyComponent } from './components/body/body.component';\r\nimport { DataTableFooterComponent } from './components/footer/footer.component';\r\nimport { DataTablePagerComponent } from './components/footer/pager.component';\r\nimport { ProgressBarComponent } from './components/body/progress-bar.component';\r\nimport { DataTableBodyRowComponent } from './components/body/body-row.component';\r\nimport { DataTableRowWrapperComponent } from './components/body/body-row-wrapper.component';\r\nimport { DatatableRowDetailDirective } from './components/row-detail/row-detail.directive';\r\nimport { DatatableGroupHeaderDirective } from './components/body/body-group-header.directive';\r\nimport { DatatableRowDetailTemplateDirective } from './components/row-detail/row-detail-template.directive';\r\nimport { DataTableBodyCellComponent } from './components/body/body-cell.component';\r\nimport { DataTableSelectionComponent } from './components/body/selection.component';\r\nimport { DataTableColumnHeaderDirective } from './components/columns/column-header.directive';\r\nimport { DataTableColumnCellDirective } from './components/columns/column-cell.directive';\r\nimport { DataTableColumnCellTreeToggle } from './components/columns/tree.directive';\r\nimport { DatatableFooterDirective } from './components/footer/footer.directive';\r\nimport { DatatableGroupHeaderTemplateDirective } from './components/body/body-group-header-template.directive';\r\nimport { DataTableSummaryRowComponent } from './components/body/summary/summary-row.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [ScrollbarHelper, DimensionsHelper, ColumnChangesService],\r\n  declarations: [\r\n    DataTableFooterTemplateDirective,\r\n    VisibilityDirective,\r\n    DraggableDirective,\r\n    ResizeableDirective,\r\n    OrderableDirective,\r\n    LongPressDirective,\r\n    ScrollerComponent,\r\n    DatatableComponent,\r\n    DataTableColumnDirective,\r\n    DataTableHeaderComponent,\r\n    DataTableHeaderCellComponent,\r\n    DataTableBodyComponent,\r\n    DataTableFooterComponent,\r\n    DataTablePagerComponent,\r\n    ProgressBarComponent,\r\n    DataTableBodyRowComponent,\r\n    DataTableRowWrapperComponent,\r\n    DatatableRowDetailDirective,\r\n    DatatableGroupHeaderDirective,\r\n    DatatableRowDetailTemplateDirective,\r\n    DataTableBodyCellComponent,\r\n    DataTableSelectionComponent,\r\n    DataTableColumnHeaderDirective,\r\n    DataTableColumnCellDirective,\r\n    DataTableColumnCellTreeToggle,\r\n    DatatableFooterDirective,\r\n    DatatableGroupHeaderTemplateDirective,\r\n    DataTableSummaryRowComponent\r\n  ],\r\n  exports: [\r\n    DatatableComponent,\r\n    DatatableRowDetailDirective,\r\n    DatatableGroupHeaderDirective,\r\n    DatatableRowDetailTemplateDirective,\r\n    DataTableColumnDirective,\r\n    DataTableColumnHeaderDirective,\r\n    DataTableColumnCellDirective,\r\n    DataTableColumnCellTreeToggle,\r\n    DataTableFooterTemplateDirective,\r\n    DatatableFooterDirective,\r\n    DataTablePagerComponent,\r\n    DatatableGroupHeaderTemplateDirective\r\n  ]\r\n})\r\nexport class NgxDatatableModule {\r\n  /**\r\n   * Configure global configuration via INgxDatatableConfig\r\n   * @param configuration\r\n   */\r\n  static forRoot(configuration: INgxDatatableConfig): ModuleWithProviders<NgxDatatableModule> {\r\n    return {\r\n      ngModule: NgxDatatableModule,\r\n      providers: [{ provide: 'configuration', useValue: configuration }]\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Interface definition for INgxDatatableConfig global configuration\r\n */\r\nexport interface INgxDatatableConfig {\r\n  messages: {\r\n    emptyMessage: string; // Message to show when array is presented, but contains no values\r\n    totalMessage: string; // Footer total message\r\n    selectedMessage: string; // Footer selected message\r\n  };\r\n}\r\n","import { Component, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\r\n\r\n@Component({\r\n  selector: 'live-data-demo',\r\n  template: `\r\n    <div>\r\n      <h3>\r\n        Live Data Demo\r\n        <small>\r\n          <a\r\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/live.component.ts\"\r\n            target=\"_blank\"\r\n          >\r\n            Source\r\n          </a>\r\n        </small>\r\n        <small>\r\n          <a href=\"javascript:void(0)\" (click)=\"start()\">Start</a> |\r\n          <a href=\"javascript:void(0)\" (click)=\"stop()\">Stop</a> |\r\n          <a href=\"javascript:void(0)\" (click)=\"add()\">Add</a> |\r\n          <a href=\"javascript:void(0)\" (click)=\"remove()\">Remove</a>\r\n        </small>\r\n      </h3>\r\n      <ngx-datatable\r\n        #mydatatable\r\n        class=\"material\"\r\n        [headerHeight]=\"50\"\r\n        [limit]=\"5\"\r\n        [columnMode]=\"ColumnMode.force\"\r\n        [footerHeight]=\"50\"\r\n        rowHeight=\"auto\"\r\n        [trackByProp]=\"'updated'\"\r\n        [rows]=\"rows\"\r\n      >\r\n        <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\r\n        <ngx-datatable-column name=\"Company\"></ngx-datatable-column>\r\n      </ngx-datatable>\r\n    </div>\r\n  `\r\n})\r\nexport class LiveDataComponent {\r\n  @ViewChild('mydatatable') mydatatable: any;\r\n\r\n  count = 50;\r\n  rows: any[] = [];\r\n  active = true;\r\n  temp: any[] = [];\r\n  cols: any = ['name', 'gender', 'company'];\r\n\r\n  ColumnMode = ColumnMode;\r\n\r\n  constructor(private cd: ChangeDetectorRef) {\r\n    this.fetch(data => {\r\n      this.rows = data.map(d => {\r\n        d.updated = Date.now().toString();\r\n        return d;\r\n      });\r\n\r\n      this.temp = [...this.rows];\r\n    });\r\n\r\n    this.start();\r\n  }\r\n\r\n  randomNum(start: number, end: number): number {\r\n    return Math.floor(Math.random() * end) + start;\r\n  }\r\n\r\n  start(): void {\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n\r\n    setTimeout(this.updateRandom.bind(this), 50);\r\n  }\r\n\r\n  stop(): void {\r\n    this.active = false;\r\n  }\r\n\r\n  add() {\r\n    this.rows.splice(0, 0, this.temp[this.count++]);\r\n  }\r\n\r\n  remove() {\r\n    this.rows.splice(0, this.rows.length);\r\n  }\r\n\r\n  updateRandom() {\r\n    const rowNum = this.randomNum(0, 5);\r\n    const cellNum = this.randomNum(0, 3);\r\n    const newRow = this.randomNum(0, 100);\r\n    const prop = this.cols[cellNum];\r\n    const rows = this.rows;\r\n\r\n    if (rows.length) {\r\n      const row = rows[rowNum];\r\n      row[prop] = rows[newRow][prop];\r\n      row.updated = Date.now().toString();\r\n    }\r\n\r\n    this.rows = [...this.rows];\r\n\r\n    // this.cd.markForCheck();\r\n    // this.mydatatable.update();\r\n    this.start();\r\n  }\r\n\r\n  fetch(cb: any): void {\r\n    const req = new XMLHttpRequest();\r\n    req.open('GET', `assets/data/company.json`);\r\n\r\n    req.onload = () => {\r\n      cb(JSON.parse(req.response));\r\n    };\r\n\r\n    req.send();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","export enum ColumnMode {\r\n  standard = 'standard',\r\n  flex = 'flex',\r\n  force = 'force'\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n/**\r\n * service to make DatatableComponent aware of changes to\r\n * input bindings of DataTableColumnDirective\r\n */\r\n@Injectable()\r\nexport class ColumnChangesService {\r\n  private columnInputChanges = new Subject<undefined>();\r\n\r\n  get columnInputChanges$(): Observable<undefined> {\r\n    return this.columnInputChanges.asObservable();\r\n  }\r\n\r\n  onInputChange(): void {\r\n    this.columnInputChanges.next();\r\n  }\r\n}\r\n","/**\r\n * This object contains the cache of the various row heights that are present inside\r\n * the data table.   Its based on Fenwick tree data structure that helps with\r\n * querying sums that have time complexity of log n.\r\n *\r\n * Fenwick Tree Credits: http://petr-mitrichev.blogspot.com/2013/05/fenwick-tree-range-updates.html\r\n * https://github.com/mikolalysenko/fenwick-tree\r\n *\r\n */\r\nexport class RowHeightCache {\r\n  /**\r\n   * Tree Array stores the cumulative information of the row heights to perform efficient\r\n   * range queries and updates.  Currently the tree is initialized to the base row\r\n   * height instead of the detail row height.\r\n   */\r\n  private treeArray: number[] = [];\r\n\r\n  /**\r\n   * Clear the Tree array.\r\n   */\r\n  clearCache(): void {\r\n    this.treeArray = [];\r\n  }\r\n\r\n  /**\r\n   * Initialize the Fenwick tree with row Heights.\r\n   *\r\n   * @param rows The array of rows which contain the expanded status.\r\n   * @param rowHeight The row height.\r\n   * @param detailRowHeight The detail row height.\r\n   */\r\n  initCache(details: any): void {\r\n    const { rows, rowHeight, detailRowHeight, externalVirtual, rowCount, rowIndexes, rowExpansions } = details;\r\n    const isFn = typeof rowHeight === 'function';\r\n    const isDetailFn = typeof detailRowHeight === 'function';\r\n\r\n    if (!isFn && isNaN(rowHeight)) {\r\n      throw new Error(`Row Height cache initialization failed. Please ensure that 'rowHeight' is a\r\n        valid number or function value: (${rowHeight}) when 'scrollbarV' is enabled.`);\r\n    }\r\n\r\n    // Add this additional guard in case detailRowHeight is set to 'auto' as it wont work.\r\n    if (!isDetailFn && isNaN(detailRowHeight)) {\r\n      throw new Error(`Row Height cache initialization failed. Please ensure that 'detailRowHeight' is a\r\n        valid number or function value: (${detailRowHeight}) when 'scrollbarV' is enabled.`);\r\n    }\r\n\r\n    const n = externalVirtual ? rowCount : rows.length;\r\n    this.treeArray = new Array(n);\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      this.treeArray[i] = 0;\r\n    }\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      const row = rows[i];\r\n      let currentRowHeight = rowHeight;\r\n      if (isFn) {\r\n        currentRowHeight = rowHeight(row);\r\n      }\r\n\r\n      // Add the detail row height to the already expanded rows.\r\n      // This is useful for the table that goes through a filter or sort.\r\n      const expanded = rowExpansions.has(row);\r\n      if (row && expanded) {\r\n        if (isDetailFn) {\r\n          const index = rowIndexes.get(row);\r\n          currentRowHeight += detailRowHeight(row, index);\r\n        } else {\r\n          currentRowHeight += detailRowHeight;\r\n        }\r\n      }\r\n\r\n      this.update(i, currentRowHeight);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Given the ScrollY position i.e. sum, provide the rowIndex\r\n   * that is present in the current view port.  Below handles edge cases.\r\n   */\r\n  getRowIndex(scrollY: number): number {\r\n    if (scrollY === 0) return 0;\r\n    return this.calcRowIndex(scrollY);\r\n  }\r\n\r\n  /**\r\n   * When a row is expanded or rowHeight is changed, update the height.  This can\r\n   * be utilized in future when Angular Data table supports dynamic row heights.\r\n   */\r\n  update(atRowIndex: number, byRowHeight: number): void {\r\n    if (!this.treeArray.length) {\r\n      throw new Error(`Update at index ${atRowIndex} with value ${byRowHeight} failed:\r\n        Row Height cache not initialized.`);\r\n    }\r\n\r\n    const n = this.treeArray.length;\r\n    atRowIndex |= 0;\r\n\r\n    while (atRowIndex < n) {\r\n      this.treeArray[atRowIndex] += byRowHeight;\r\n      atRowIndex |= atRowIndex + 1;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Range Sum query from 1 to the rowIndex\r\n   */\r\n  query(atIndex: number): number {\r\n    if (!this.treeArray.length) {\r\n      throw new Error(`query at index ${atIndex} failed: Fenwick tree array not initialized.`);\r\n    }\r\n\r\n    let sum = 0;\r\n    atIndex |= 0;\r\n\r\n    while (atIndex >= 0) {\r\n      sum += this.treeArray[atIndex];\r\n      atIndex = (atIndex & (atIndex + 1)) - 1;\r\n    }\r\n\r\n    return sum;\r\n  }\r\n\r\n  /**\r\n   * Find the total height between 2 row indexes\r\n   */\r\n  queryBetween(atIndexA: number, atIndexB: number): number {\r\n    return this.query(atIndexB) - this.query(atIndexA - 1);\r\n  }\r\n\r\n  /**\r\n   * Given the ScrollY position i.e. sum, provide the rowIndex\r\n   * that is present in the current view port.\r\n   */\r\n  private calcRowIndex(sum: number): number {\r\n    if (!this.treeArray.length) return 0;\r\n\r\n    let pos = -1;\r\n    const dataLength = this.treeArray.length;\r\n\r\n    // Get the highest bit for the block size.\r\n    const highestBit = Math.pow(2, dataLength.toString(2).length - 1);\r\n\r\n    for (let blockSize = highestBit; blockSize !== 0; blockSize >>= 1) {\r\n      const nextPos = pos + blockSize;\r\n      if (nextPos < dataLength && sum >= this.treeArray[nextPos]) {\r\n        sum -= this.treeArray[nextPos];\r\n        pos = nextPos;\r\n      }\r\n    }\r\n\r\n    return pos + 1;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { PagedData } from './model/paged-data';\r\nimport { CorporateEmployee } from './model/corporate-employee';\r\nimport { Page } from './model/page';\r\n\r\nimport data from 'src/assets/data/company.json';\r\nconst companyData = data as any[];\r\n\r\n/**\r\n * A server used to mock a paged data result from a server\r\n */\r\n@Injectable()\r\nexport class MockServerResultsService {\r\n  /**\r\n   * A method that mocks a paged server response\r\n   * @param page The selected page\r\n   * @returns {any} An observable containing the employee data\r\n   */\r\n  public getResults(page: Page): Observable<PagedData<CorporateEmployee>> {\r\n    return of(companyData).pipe(map(d => this.getPagedData(page)));\r\n  }\r\n\r\n  /**\r\n   * Package companyData into a PagedData object based on the selected Page\r\n   * @param page The page data used to get the selected data from companyData\r\n   * @returns {PagedData<CorporateEmployee>} An array of the selected data and page\r\n   */\r\n  private getPagedData(page: Page): PagedData<CorporateEmployee> {\r\n    const pagedData = new PagedData<CorporateEmployee>();\r\n    page.totalElements = companyData.length;\r\n    page.totalPages = page.totalElements / page.size;\r\n    const start = page.pageNumber * page.size;\r\n    const end = Math.min(start + page.size, page.totalElements);\r\n    for (let i = start; i < end; i++) {\r\n      const jsonObj = companyData[i];\r\n      const employee = new CorporateEmployee(jsonObj.name, jsonObj.gender, jsonObj.company, jsonObj.age);\r\n      pagedData.data.push(employee);\r\n    }\r\n    pagedData.page = page;\r\n    return pagedData;\r\n  }\r\n}\r\n","import { getVendorPrefixedName } from './prefixes';\r\nimport { camelCase } from './camel-case';\r\n\r\n// browser detection and prefixing tools\r\nconst transform = typeof window !== 'undefined' ? getVendorPrefixedName('transform') : undefined;\r\nconst backfaceVisibility = typeof window !== 'undefined' ? getVendorPrefixedName('backfaceVisibility') : undefined;\r\nconst hasCSSTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('transform') : undefined;\r\nconst hasCSS3DTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('perspective') : undefined;\r\nconst ua = typeof window !== 'undefined' ? window.navigator.userAgent : 'Chrome';\r\nconst isSafari = /Safari\\//.test(ua) && !/Chrome\\//.test(ua);\r\n\r\nexport function translateXY(styles: any, x: number, y: number) {\r\n  if (typeof transform !== 'undefined' && hasCSSTransforms) {\r\n    if (!isSafari && hasCSS3DTransforms) {\r\n      styles[transform] = `translate3d(${x}px, ${y}px, 0)`;\r\n      styles[backfaceVisibility] = 'hidden';\r\n    } else {\r\n      styles[camelCase(transform)] = `translate(${x}px, ${y}px)`;\r\n    }\r\n  } else {\r\n    styles.top = `${y}px`;\r\n    styles.left = `${x}px`;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ElementRef,\r\n  Output,\r\n  EventEmitter,\r\n  Renderer2,\r\n  NgZone,\r\n  OnInit,\r\n  OnDestroy,\r\n  HostBinding,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { MouseEvent } from '../../events';\r\n\r\n@Component({\r\n  selector: 'datatable-scroller',\r\n  template: ` <ng-content></ng-content> `,\r\n  host: {\r\n    class: 'datatable-scroll'\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ScrollerComponent implements OnInit, OnDestroy {\r\n  @Input() scrollbarV: boolean = false;\r\n  @Input() scrollbarH: boolean = false;\r\n\r\n  @HostBinding('style.height.px')\r\n  @Input()\r\n  scrollHeight: number;\r\n\r\n  @HostBinding('style.width.px')\r\n  @Input()\r\n  scrollWidth: number;\r\n\r\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\r\n\r\n  scrollYPos: number = 0;\r\n  scrollXPos: number = 0;\r\n  prevScrollYPos: number = 0;\r\n  prevScrollXPos: number = 0;\r\n  element: any;\r\n  parentElement: any;\r\n  onScrollListener: any;\r\n\r\n  private _scrollEventListener: any = null;\r\n\r\n  constructor(private ngZone: NgZone, element: ElementRef, private renderer: Renderer2) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // manual bind so we don't always listen\r\n    if (this.scrollbarV || this.scrollbarH) {\r\n      const renderer = this.renderer;\r\n      this.parentElement = renderer.parentNode(renderer.parentNode(this.element));\r\n      this._scrollEventListener = this.onScrolled.bind(this);\r\n      this.parentElement.addEventListener('scroll', this._scrollEventListener);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this._scrollEventListener) {\r\n      this.parentElement.removeEventListener('scroll', this._scrollEventListener);\r\n      this._scrollEventListener = null;\r\n    }\r\n  }\r\n\r\n  setOffset(offsetY: number): void {\r\n    if (this.parentElement) {\r\n      this.parentElement.scrollTop = offsetY;\r\n    }\r\n  }\r\n\r\n  onScrolled(event: MouseEvent): void {\r\n    const dom: Element = <Element>event.currentTarget;\r\n    requestAnimationFrame(() => {\r\n      this.scrollYPos = dom.scrollTop;\r\n      this.scrollXPos = dom.scrollLeft;\r\n      this.updateOffset();\r\n    });\r\n  }\r\n\r\n  updateOffset(): void {\r\n    let direction: string;\r\n    if (this.scrollYPos < this.prevScrollYPos) {\r\n      direction = 'down';\r\n    } else if (this.scrollYPos > this.prevScrollYPos) {\r\n      direction = 'up';\r\n    }\r\n\r\n    this.scroll.emit({\r\n      direction,\r\n      scrollYPos: this.scrollYPos,\r\n      scrollXPos: this.scrollXPos\r\n    });\r\n\r\n    this.prevScrollYPos = this.scrollYPos;\r\n    this.prevScrollXPos = this.scrollXPos;\r\n  }\r\n}\r\n","if (typeof document !== 'undefined' && !document.elementsFromPoint) {\r\n  document.elementsFromPoint = elementsFromPoint;\r\n}\r\n\r\n/*tslint:disable*/\r\n/**\r\n * Polyfill for `elementsFromPoint`\r\n *\r\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/elementsFromPoint\r\n * https://gist.github.com/iddan/54d5d9e58311b0495a91bf06de661380\r\n * https://gist.github.com/oslego/7265412\r\n */\r\nexport function elementsFromPoint(x: number, y: number) {\r\n  const elements = [];\r\n  const previousPointerEvents = [];\r\n  let current: any; // TODO: window.getComputedStyle should be used with inferred type (Element)\r\n  let i;\r\n  let d;\r\n\r\n  //if (document === undefined) return elements;\r\n\r\n  // get all elements via elementFromPoint, and remove them from hit-testing in order\r\n  while ((current = document.elementFromPoint(x, y)) && elements.indexOf(current) === -1 && current != null) {\r\n    // push the element and its current style\r\n    elements.push(current);\r\n    previousPointerEvents.push({\r\n      value: current.style.getPropertyValue('pointer-events'),\r\n      priority: current.style.getPropertyPriority('pointer-events')\r\n    });\r\n\r\n    // add \"pointer-events: none\", to get to the underlying element\r\n    current.style.setProperty('pointer-events', 'none', 'important');\r\n  }\r\n\r\n  // restore the previous pointer-events values\r\n  for (i = previousPointerEvents.length; (d = previousPointerEvents[--i]); ) {\r\n    elements[i].style.setProperty('pointer-events', d.value ? d.value : '', d.priority);\r\n  }\r\n\r\n  // return our results\r\n  return elements;\r\n}\r\n/*tslint:enable*/\r\n","/**\r\n * Throttle a function\r\n */\r\nexport function throttle(func: any, wait: number, options?: any) {\r\n  options = options || {};\r\n  let context: any;\r\n  let args: any;\r\n  let result: any;\r\n  let timeout: any = null;\r\n  let previous = 0;\r\n\r\n  function later() {\r\n    previous = options.leading === false ? 0 : +new Date();\r\n    timeout = null;\r\n    result = func.apply(context, args);\r\n  }\r\n\r\n  return function (this: any) {\r\n    const now = +new Date();\r\n\r\n    if (!previous && options.leading === false) {\r\n      previous = now;\r\n    }\r\n\r\n    const remaining = wait - (now - previous);\r\n    context = this;\r\n    args = arguments;\r\n\r\n    if (remaining <= 0) {\r\n      clearTimeout(timeout);\r\n      timeout = null;\r\n      previous = now;\r\n      result = func.apply(context, args);\r\n    } else if (!timeout && options.trailing !== false) {\r\n      timeout = setTimeout(later, remaining);\r\n    }\r\n\r\n    return result;\r\n  };\r\n}\r\n\r\n/**\r\n * Throttle decorator\r\n *\r\n *  class MyClass {\r\n *    throttleable(10)\r\n *    myFn() { ... }\r\n *  }\r\n */\r\nexport function throttleable(duration: number, options?: any) {\r\n  return function innerDecorator(target: any, key: PropertyKey, descriptor: PropertyDescriptor) {\r\n    return {\r\n      configurable: true,\r\n      enumerable: descriptor.enumerable,\r\n      get: function getter() {\r\n        Object.defineProperty(this, key, {\r\n          configurable: true,\r\n          enumerable: descriptor.enumerable,\r\n          value: throttle(descriptor.value, duration, options)\r\n        });\r\n\r\n        return this[key];\r\n      }\r\n    };\r\n  };\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  HostListener,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  AfterViewInit,\r\n  Renderer2\r\n} from '@angular/core';\r\nimport { Subscription, fromEvent } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[resizeable]',\r\n  host: {\r\n    '[class.resizeable]': 'resizeEnabled'\r\n  }\r\n})\r\nexport class ResizeableDirective implements OnDestroy, AfterViewInit {\r\n  @Input() resizeEnabled: boolean = true;\r\n  @Input() minWidth: number;\r\n  @Input() maxWidth: number;\r\n\r\n  @Output() resize: EventEmitter<any> = new EventEmitter();\r\n\r\n  element: HTMLElement;\r\n  subscription: Subscription;\r\n  resizing: boolean = false;\r\n  private resizeHandle: HTMLElement;\r\n\r\n  constructor(element: ElementRef, private renderer: Renderer2) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    const renderer2 = this.renderer;\r\n    this.resizeHandle = renderer2.createElement('span');\r\n    if (this.resizeEnabled) {\r\n      renderer2.addClass(this.resizeHandle, 'resize-handle');\r\n    } else {\r\n      renderer2.addClass(this.resizeHandle, 'resize-handle--not-resizable');\r\n    }\r\n    renderer2.appendChild(this.element, this.resizeHandle);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._destroySubscription();\r\n    if (this.renderer.destroyNode) {\r\n      this.renderer.destroyNode(this.resizeHandle);\r\n    } else if (this.resizeHandle) {\r\n      this.renderer.removeChild(this.renderer.parentNode(this.resizeHandle), this.resizeHandle);\r\n    }\r\n  }\r\n\r\n  onMouseup(): void {\r\n    this.resizing = false;\r\n\r\n    if (this.subscription && !this.subscription.closed) {\r\n      this._destroySubscription();\r\n      this.resize.emit(this.element.clientWidth);\r\n    }\r\n  }\r\n\r\n  @HostListener('mousedown', ['$event'])\r\n  onMousedown(event: MouseEvent): void {\r\n    const isHandle = (<HTMLElement>event.target).classList.contains('resize-handle');\r\n    const initialWidth = this.element.clientWidth;\r\n    const mouseDownScreenX = event.screenX;\r\n\r\n    if (isHandle) {\r\n      event.stopPropagation();\r\n      this.resizing = true;\r\n\r\n      const mouseup = fromEvent(document, 'mouseup');\r\n      this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup());\r\n\r\n      const mouseMoveSub = fromEvent(document, 'mousemove')\r\n        .pipe(takeUntil(mouseup))\r\n        .subscribe((e: MouseEvent) => this.move(e, initialWidth, mouseDownScreenX));\r\n\r\n      this.subscription.add(mouseMoveSub);\r\n    }\r\n  }\r\n\r\n  move(event: MouseEvent, initialWidth: number, mouseDownScreenX: number): void {\r\n    const movementX = event.screenX - mouseDownScreenX;\r\n    const newWidth = initialWidth + movementX;\r\n\r\n    const overMinWidth = !this.minWidth || newWidth >= this.minWidth;\r\n    const underMaxWidth = !this.maxWidth || newWidth <= this.maxWidth;\r\n\r\n    if (overMinWidth && underMaxWidth) {\r\n      this.element.style.width = `${newWidth}px`;\r\n    }\r\n  }\r\n\r\n  private _destroySubscription() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n      this.subscription = undefined;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  HostListener,\r\n  DoCheck,\r\n  ChangeDetectionStrategy,\r\n  KeyValueDiffer,\r\n  ChangeDetectorRef,\r\n  KeyValueDiffers\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'datatable-row-wrapper',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div *ngIf=\"groupHeader && groupHeader.template\" class=\"datatable-group-header\" [ngStyle]=\"getGroupHeaderStyle()\">\r\n      <ng-template\r\n        *ngIf=\"groupHeader && groupHeader.template\"\r\n        [ngTemplateOutlet]=\"groupHeader.template\"\r\n        [ngTemplateOutletContext]=\"groupContext\"\r\n      >\r\n      </ng-template>\r\n    </div>\r\n    <ng-content *ngIf=\"(groupHeader && groupHeader.template && expanded) || !groupHeader || !groupHeader.template\">\r\n    </ng-content>\r\n    <div\r\n      *ngIf=\"rowDetail && rowDetail.template && expanded\"\r\n      [style.height.px]=\"detailRowHeight\"\r\n      class=\"datatable-row-detail\"\r\n    >\r\n      <ng-template\r\n        *ngIf=\"rowDetail && rowDetail.template\"\r\n        [ngTemplateOutlet]=\"rowDetail.template\"\r\n        [ngTemplateOutletContext]=\"rowContext\"\r\n      >\r\n      </ng-template>\r\n    </div>\r\n  `,\r\n  host: {\r\n    class: 'datatable-row-wrapper'\r\n  }\r\n})\r\nexport class DataTableRowWrapperComponent implements DoCheck {\r\n  @Input() innerWidth: number;\r\n  @Input() rowDetail: any;\r\n  @Input() groupHeader: any;\r\n  @Input() offsetX: number;\r\n  @Input() detailRowHeight: any;\r\n  @Input() row: any;\r\n  @Input() groupedRows: any;\r\n  @Output() rowContextmenu = new EventEmitter<{ event: MouseEvent; row: any }>(false);\r\n\r\n  @Input() set rowIndex(val: number) {\r\n    this._rowIndex = val;\r\n    this.rowContext.rowIndex = val;\r\n    this.groupContext.rowIndex = val;\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  get rowIndex(): number {\r\n    return this._rowIndex;\r\n  }\r\n\r\n  @Input() set expanded(val: boolean) {\r\n    this._expanded = val;\r\n    this.groupContext.expanded = val;\r\n    this.rowContext.expanded = val;\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  get expanded(): boolean {\r\n    return this._expanded;\r\n  }\r\n\r\n  groupContext: any;\r\n  rowContext: any;\r\n\r\n  private rowDiffer: KeyValueDiffer<{}, {}>;\r\n  private _expanded: boolean = false;\r\n  private _rowIndex: number;\r\n\r\n  constructor(private cd: ChangeDetectorRef, private differs: KeyValueDiffers) {\r\n    this.groupContext = {\r\n      group: this.row,\r\n      expanded: this.expanded,\r\n      rowIndex: this.rowIndex\r\n    };\r\n\r\n    this.rowContext = {\r\n      row: this.row,\r\n      expanded: this.expanded,\r\n      rowIndex: this.rowIndex\r\n    };\r\n\r\n    this.rowDiffer = differs.find({}).create();\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    if (this.rowDiffer.diff(this.row)) {\r\n      this.rowContext.row = this.row;\r\n      this.groupContext.group = this.row;\r\n      this.cd.markForCheck();\r\n    }\r\n  }\r\n\r\n  @HostListener('contextmenu', ['$event'])\r\n  onContextmenu($event: MouseEvent): void {\r\n    this.rowContextmenu.emit({ event: $event, row: this.row });\r\n  }\r\n\r\n  getGroupHeaderStyle(): any {\r\n    const styles = {};\r\n\r\n    styles['transform'] = 'translate3d(' + this.offsetX + 'px, 0px, 0px)';\r\n    styles['backface-visibility'] = 'hidden';\r\n    styles['width'] = this.innerWidth;\r\n\r\n    return styles;\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}